import { ArgumentsHost } from '@nestjs/common';
import { BaseExceptionFilter } from '@nestjs/core';
import { Prisma } from '@prisma/client';
import { Response } from 'express';
export declare class PrismaClientExceptionFilter extends BaseExceptionFilter {
    catch(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost): void;
    catchValueTooLong(exception: Prisma.PrismaClientKnownRequestError, response: Response): void;
    catchUniqueConstraint(exception: Prisma.PrismaClientKnownRequestError, response: Response): void;
    catchNotFound(exception: Prisma.PrismaClientKnownRequestError, response: Response): void;
    unhandledException(exception: Prisma.PrismaClientKnownRequestError, host: ArgumentsHost): void;
    cleanUpException(exception: Prisma.PrismaClientKnownRequestError): string;
}
