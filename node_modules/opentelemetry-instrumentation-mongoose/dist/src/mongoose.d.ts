import type mongoose from 'mongoose';
import { MongooseInstrumentationConfig } from './types';
import { InstrumentationBase, InstrumentationModuleDefinition } from '@opentelemetry/instrumentation';
export declare const _STORED_PARENT_SPAN: unique symbol;
export declare class MongooseInstrumentation extends InstrumentationBase<typeof mongoose> {
    static readonly component = "mongoose";
    protected _config: MongooseInstrumentationConfig;
    private moduleVersion;
    constructor(config?: MongooseInstrumentationConfig);
    setConfig(config?: MongooseInstrumentationConfig): void;
    protected init(): InstrumentationModuleDefinition<typeof mongoose>;
    protected patch(moduleExports: typeof mongoose, moduleVersion: string): typeof mongoose;
    protected unpatch(moduleExports: typeof mongoose): void;
    private patchAggregateExec;
    private patchQueryExec;
    private patchOnModelMethods;
    private patchModelAggregate;
    private patchAndCaptureSpanContext;
    private _handleResponse;
    private _callOriginalFunction;
    private _addModuleVersionIfNeeded;
}
//# sourceMappingURL=mongoose.d.ts.map