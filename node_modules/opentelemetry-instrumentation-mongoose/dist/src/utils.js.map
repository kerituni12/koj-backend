{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../src/utils.ts"],"names":[],"mappings":";;;AAAA,4CAAkH;AAGlH,oEAAwE;AACxE,8EAAyE;AAazE,SAAS,2BAA2B,CAAC,UAAsB;IACvD,OAAO;QACH,CAAC,yCAAkB,CAAC,qBAAqB,CAAC,EAAE,UAAU,CAAC,IAAI;QAC3D,CAAC,yCAAkB,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QAClD,CAAC,yCAAkB,CAAC,OAAO,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QAClD,CAAC,yCAAkB,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QACxD,CAAC,yCAAkB,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,IAAI,CAAC,IAAI;QACxD,CAAC,yCAAkB,CAAC,aAAa,CAAC,EAAE,QAAQ,EAAE,yBAAyB;KAC1E,CAAC;AACN,CAAC;AAED,SAAgB,SAAS,CAAC,EACtB,MAAM,EACN,UAAU,EACV,SAAS,EACT,SAAS,EACT,UAAU,EACV,UAAU,GACK;IACf,OAAO,MAAM,CAAC,SAAS,CACnB,YAAY,SAAS,IAAI,SAAS,EAAE,EACpC;QACI,IAAI,EAAE,cAAQ,CAAC,MAAM;QACrB,UAAU,gDACH,UAAU,GACV,2BAA2B,CAAC,UAAU,CAAC,KAC1C,CAAC,yCAAkB,CAAC,YAAY,CAAC,EAAE,SAAS,EAC5C,CAAC,yCAAkB,CAAC,SAAS,CAAC,EAAE,SAAS,GAC5C;KACJ,EACD,UAAU,CAAC,CAAC,CAAC,WAAK,CAAC,OAAO,CAAC,aAAO,CAAC,MAAM,EAAE,EAAE,UAAU,CAAC,CAAC,CAAC,CAAC,SAAS,CACvE,CAAC;AACN,CAAC;AArBD,8BAqBC;AAED,6BAA6B;AAE7B,SAAS,cAAc,CAAC,IAAU,EAAE,QAAa,EAAE;IAC/C,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;IAE5B,IAAI,CAAC,SAAS,CAAC;QACX,IAAI,EAAE,oBAAc,CAAC,KAAK;QAC1B,OAAO,EAAE,GAAG,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,uBAAuB,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC,EAAE,EAAE;KACvF,CAAC,CAAC;AACP,CAAC;AAED,SAAS,iBAAiB,CAAC,IAAU,EAAE,QAAa,EAAE,YAAuD;IACzG,IAAI,YAAY,EAAE;QACd,wCAAsB,CAClB,GAAG,EAAE,CAAC,YAAY,CAAC,IAAI,EAAE,QAAQ,CAAC,EAClC,CAAC,CAAC,EAAE,EAAE;YACF,IAAI,CAAC,EAAE;gBACH,UAAI,CAAC,KAAK,CAAC,8CAA8C,EAAE,CAAC,CAAC,CAAC;aACjE;QACL,CAAC,EACD,IAAI,CACP,CAAC;KACL;AACL,CAAC;AAED,SAAgB,qBAAqB,CACjC,YAAiB,EACjB,IAAU,EACV,YAAuD;IAEvD,IAAI,CAAC,CAAC,YAAY,YAAY,OAAO,CAAC,EAAE;QACpC,iBAAiB,CAAC,IAAI,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;QACpD,IAAI,CAAC,GAAG,EAAE,CAAC;QACX,OAAO,YAAY,CAAC;KACvB;IAED,OAAO,YAAY;SACd,IAAI,CAAC,CAAC,QAAQ,EAAE,EAAE;QACf,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;QAChD,OAAO,QAAQ,CAAC;IACpB,CAAC,CAAC;SACD,KAAK,CAAC,CAAC,GAAG,EAAE,EAAE;QACX,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;QAC1B,MAAM,GAAG,CAAC;IACd,CAAC,CAAC;SACD,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,CAAC;AACnC,CAAC;AArBD,sDAqBC;AAED,SAAgB,sBAAsB,CAClC,QAAkB,EAClB,IAAc,EACd,YAAiB,EACjB,IAAU,EACV,YAAuD;IAEvD,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,EAAE;QAC5B,CAAC,GAAU,EAAE,QAAa,EAAE,EAAE;YAC1B,GAAG,CAAC,CAAC,CAAC,cAAc,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,CAAC,iBAAiB,CAAC,IAAI,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;YAClF,IAAI,CAAC,GAAG,EAAE,CAAC;YACX,OAAO,QAAS,CAAC,GAAG,EAAE,QAAQ,CAAC,CAAC;QACpC,CAAC;KACJ,CAAC,CAAC;AACP,CAAC;AAdD,wDAcC","sourcesContent":["import { Tracer, SpanAttributes, SpanStatusCode, context, trace, diag, Span, SpanKind } from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// ===== Start Span Utils =====\n\ninterface StartSpanPayload {\n    tracer: Tracer;\n    collection: Collection;\n    modelName: string;\n    operation: string;\n    attributes: SpanAttributes;\n    parentSpan?: Span;\n}\n\nfunction getAttributesFromCollection(collection: Collection): SpanAttributes {\n    return {\n        [SemanticAttributes.DB_MONGODB_COLLECTION]: collection.name,\n        [SemanticAttributes.DB_NAME]: collection.conn.name,\n        [SemanticAttributes.DB_USER]: collection.conn.user,\n        [SemanticAttributes.NET_PEER_NAME]: collection.conn.host,\n        [SemanticAttributes.NET_PEER_PORT]: collection.conn.port,\n        [SemanticAttributes.NET_TRANSPORT]: 'IP.TCP', // Always true in mongodb\n    };\n}\n\nexport function startSpan({\n    tracer,\n    collection,\n    modelName,\n    operation,\n    attributes,\n    parentSpan,\n}: StartSpanPayload): Span {\n    return tracer.startSpan(\n        `mongoose.${modelName}.${operation}`,\n        {\n            kind: SpanKind.CLIENT,\n            attributes: {\n                ...attributes,\n                ...getAttributesFromCollection(collection),\n                [SemanticAttributes.DB_OPERATION]: operation,\n                [SemanticAttributes.DB_SYSTEM]: 'mongodb',\n            },\n        },\n        parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined\n    );\n}\n\n// ===== End Span Utils =====\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n    span.recordException(error);\n\n    span.setStatus({\n        code: SpanStatusCode.ERROR,\n        message: `${error.message} ${error.code ? `\\nMongo Error Code: ${error.code}` : ''}`,\n    });\n}\n\nfunction applyResponseHook(span: Span, response: any, responseHook?: MongooseResponseCustomAttributesFunction) {\n    if (responseHook) {\n        safeExecuteInTheMiddle(\n            () => responseHook(span, response),\n            (e) => {\n                if (e) {\n                    diag.error('mongoose instrumentation: responseHook error', e);\n                }\n            },\n            true\n        );\n    }\n}\n\nexport function handlePromiseResponse(\n    execResponse: any,\n    span: Span,\n    responseHook?: MongooseResponseCustomAttributesFunction\n): any {\n    if (!(execResponse instanceof Promise)) {\n        applyResponseHook(span, execResponse, responseHook);\n        span.end();\n        return execResponse;\n    }\n\n    return execResponse\n        .then((response) => {\n            applyResponseHook(span, response, responseHook);\n            return response;\n        })\n        .catch((err) => {\n            setErrorStatus(span, err);\n            throw err;\n        })\n        .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n    callback: Function,\n    exec: Function,\n    originalThis: any,\n    span: Span,\n    responseHook?: MongooseResponseCustomAttributesFunction\n) {\n    return exec.apply(originalThis, [\n        (err: Error, response: any) => {\n            err ? setErrorStatus(span, err) : applyResponseHook(span, response, responseHook);\n            span.end();\n            return callback!(err, response);\n        },\n    ]);\n}\n"]}