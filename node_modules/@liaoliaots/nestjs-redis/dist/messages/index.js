"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.OPERATIONS_TIMEOUT = exports.FAILED_CLUSTER_STATE = exports.CANNOT_BE_READ = exports.ABNORMALLY_MEMORY_USAGE = exports.NOT_RESPONSIVE = exports.MISSING_TYPE = exports.ERROR_LOG = exports.READY_LOG = exports.CLIENT_NOT_FOUND = exports.MISSING_CONFIGURATION = exports.CONNECTED_SUCCESSFULLY = void 0;
exports.CONNECTED_SUCCESSFULLY = `Connected successfully to server`;
exports.MISSING_CONFIGURATION = 'Asynchronous configurations are missing. Expected one of: `useFactory`, `useClass`, `useExisting`.';
const CLIENT_NOT_FOUND = (namespace, isRedis = true) => `${isRedis ? 'Redis' : 'Cluster'} client \`${namespace}\` not found in the application context.`;
exports.CLIENT_NOT_FOUND = CLIENT_NOT_FOUND;
const READY_LOG = (namespace) => `${namespace}: ${exports.CONNECTED_SUCCESSFULLY}`;
exports.READY_LOG = READY_LOG;
const ERROR_LOG = ({ namespace, error }) => `${namespace}: ${error.message}`;
exports.ERROR_LOG = ERROR_LOG;
exports.MISSING_TYPE = 'Argument `type` is missing.';
exports.NOT_RESPONSIVE = `The client is not responsive.`;
exports.ABNORMALLY_MEMORY_USAGE = `The client is using abnormally high memory.`;
exports.CANNOT_BE_READ = `Info cluster cannot be read.`;
exports.FAILED_CLUSTER_STATE = `Info cluster is not in OK state.`;
const OPERATIONS_TIMEOUT = (timeout) => `Operations timed out after ${String(timeout)}ms.`;
exports.OPERATIONS_TIMEOUT = OPERATIONS_TIMEOUT;
