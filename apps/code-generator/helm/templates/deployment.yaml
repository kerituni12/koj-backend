apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app.name }}-deployment
  labels:
    app: {{ .Values.app.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app.name }}
    spec:
      containers:
        - name: {{ .Values.app.name }}
          image: {{ .Values.image }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          ports:
            - containerPort: {{ .Values.app.targetPort }}
          volumeMounts:
            - name: code-executor
              mountPath: {{ .Values.app.basePath }}
          securityContext:
            privileged: true
            runAsUser: 0
          env:
            - name: PORT
              value: "{{ .Values.app.targetPort }}"
            - name: NATS_URL
              value: {{ .Values.nats.url }} 
            - name: REDIS_URL
              value: {{ .Values.redis.url }}
            - name: BASE_PATH
              value: {{ .Values.app.basePath }}
      volumes:
        - name: code-executor
          persistentVolumeClaim:
            claimName: code-executor

---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.app.name }}-service
spec:
  selector:
    app: {{ .Values.app.name }}
  ports:
    - protocol: TCP
      port: {{ .Values.app.port}}
      targetPort: {{ .Values.app.targetPort}}

# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: {{ .Release.Name }}-configmap
# data:
#   myvalue: "Hello World"
#   drink: {{ .Values.app.name }}
