// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// generator nestgraphql {
//   provider                    = "node ../../../node_modules/prisma-nestjs-graphql"
//   output                      = "../../../generated"
//   noAtomicOperations          = true
//   purgeOutput                 = true
//   useInputType_WhereInput_ALL = "match:@(Int|String|DateTime|Null|Boolean|Float)"
//   // combineScalarFilters        = true
// }

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// model User {
//   id                Int       @id @default(autoincrement())
//   email             String    @default("")
//   username          String    @default("")
//   /// @HideField()
//   password          String    @default("")
//   firstname         String    @default("")
//   lastname          String    @default("")
//   status            String    @default("disabled")
//   role              String    @default("user")
//   avatar            String?
//   provider          String    @default("koj")
//   /// @HideField({input: true, output:true})
//   domainId          Int       @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?      @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?   @map("created_by_username")
//   createdByName     String?   @map("created_by_name")
//   /// @HideField({input: true})
//   createdAt         DateTime  @default(now()) @map("created_at")
//   /// @HideField({input: true})
//   updatedAt         DateTime? @map("updated_at")
//   extendData        Json?     @map("extend_data")

//   @@unique([username, domainId])
//   @@unique([email, domainId])
//   @@map("user")
// }

// model Domain {
//   id       Int    @id @default(autoincrement())
//   domain   String @default("none")
//   domainId Int    @default(0)
//   status   String @default("disabled")

//   @@map("domain")
// }

// model Post {
//   id        Int      @id @default(autoincrement())
//   title     String
//   content   String?
//   published Boolean? @default(false)
//   authorId  Int?
//   domainId  Int      @default(0) @map("domain_id")

//   @@map("post")
// }

// model Challenge {
//   id                     Int        @id @default(autoincrement())
//   title                  String
//   slug                   String     @default(cuid())
//   acceptedLanguages      Int[]
//   languages              Json?
//   rate                   Float?     @db.Real
//   audience               String     @default("onlyme")
//   functionName           String?
//   /// @HideField({input: true})
//   commentCount           Int?       @map("comment_count")
//   contestId              Int?       @map("contest_id")
//   status                 String     @default("disabled")
//   categoryId             Int?
//   description            String?
//   companyTags            Int[]      @map("company_tags")
//   topicTags              TopicTag[]
//   contributors           Json?
//   examples               Json?
//   inputs                 Json?
//   structs                Json?
//   types                  Json?
//   output                 String
//   highlightSolutionCount Int?       @map("highlight_solution_count")
//   hint                   Json?
//   isFavorited            Boolean    @default(false) @map("is_favorited")
//   officalSolutionCount   Int?       @map("offical_solution_count")
//   testcases              Json?      @map("testcases")
//   difficulty             String     @default("easy")
//   likes                  Int        @default(0)
//   dislikes               Int        @default(0)
//   solutions              Json?
//   /// @HideField({input: true, output:true})
//   domainId               Int        @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById            Int?       @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername      String?    @map("created_by_username")
//   createdByName          String?    @map("created_by_name")
//   /// @HideField({input: true})
//   createdAt              DateTime   @default(now()) @map("created_at")
//   /// @HideField({input: true})
//   updatedAt              DateTime?  @map("updated_at")

//   @@unique([slug, domainId])
//   @@map("challenge")
// }

// model Submission {
//   id                Int      @id @default(autoincrement())
//   languageId        String?
//   challengeId       Int?     @map("challenge_id")
//   content           String
//   result            Json?
//   info              Json?
//   ip                String?
//   shared            Boolean  @default(false)
//   /// @HideField({input: true, output:true})
//   domainId          Int      @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?     @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?  @map("created_by_username")
//   createdAt         DateTime @default(now()) @map("created_at")

//   @@map("submission")
// }

// model SubmissionContest {
//   id                Int      @id @default(autoincrement())
//   languageId        String?
//   contestId         Int?     @map("contest_id")
//   challengeId       Int?     @map("challenge_id")
//   content           String
//   result            Json?
//   ip                String?
//   shared            Boolean  @default(false)
//   /// @HideField({input: true, output:true})
//   domainId          Int      @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?     @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?  @map("created_by_username")
//   createdAt         DateTime @default(now()) @map("created_at")

//   @@map("submission-contest")
// }

// model SubmissionStatistic {
//   id                Int      @id @default(autoincrement())
//   challengeId       Int?     @map("challenge_id")
//   languageId        String?  @map("language_id")
//   score             Int      @default(0)
//   submitCount       Int      @default(0) @map("submit_count")
//   info              Json?
//   /// @HideField({input: true, output:true})
//   domainId          Int      @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?     @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?  @map("created_by_username")
//   lastSubmitTime    DateTime @default(now()) @map("last_submit_time")

//   @@unique([createdById, challengeId])
//   @@map("submission-statistic")
// }

// model SubmissionContestStatistic {
//   id          Int   @id @default(autoincrement())
//   contestId   Int?  @map("contest_id")
//   info        Json?
//   /// @HideField({input: true, output:true})
//   domainId    Int   @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById Int?  @map("created_by_id")

//   @@map("submission-contest-statistic")
// }

// model Category {
//   id       Int    @id @default(autoincrement())
//   name     String
//   slug     String @default(cuid())
//   status   String @default("disabled")
//   /// @HideField({input: true, output:true})
//   domainId Int    @default(0) @map("domain_id")

//   @@map("category")
// }

// model TopicTag {
//   id         Int         @id @default(autoincrement())
//   name       String
//   slug       String      @default(cuid())
//   status     String      @default("disabled")
//   /// @HideField({input: true, output:true})
//   domainId   Int         @default(0) @map("domain_id")
//   challenges Challenge[]

//   @@map("topic_tag")
// }

// model Language {
//   id        Int    @id @default(autoincrement())
//   title     String
//   extension String
//   statusId  Int    @default(1) @map("status_id")

//   @@map("language")
// }

// model Status {
//   id          Int    @id @default(autoincrement())
//   description String
//   type        String @default("common")

//   @@map("status")
// }

// model Group {
//   id                Int       @id @default(autoincrement())
//   name              String    @default("none")
//   key               String    @default("none")
//   status            String    @default("disabled")
//   description       String?
//   /// @HideField({input: true, output:true})
//   domainId          Int       @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?      @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?   @map("created_by_username")
//   createdByName     String?   @map("created_by_name")
//   /// @HideField({input: true})
//   createdAt         DateTime  @default(now()) @map("created_at")
//   /// @HideField({input: true})
//   updatedAt         DateTime? @map("updated_at")

//   // updatedById   Int?      @map("updated_by_id")
//   // updatedByName String?   @map("updated_by_name")

//   @@index([createdByUsername])
//   @@map("group")
// }

// model Role {
//   id                Int       @id @default(autoincrement())
//   // @HideField({input: true})
//   key               String    @default("none")
//   name              String    @default("none")
//   description       String?
//   /// @HideField({input: true, output:true})
//   domainId          Int       @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?      @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?   @map("created_by_username")
//   createdByName     String?   @map("created_by_name")
//   /// @HideField({input: true})
//   createdAt         DateTime  @default(now()) @map("created_at")
//   /// @HideField({input: true})
//   updatedAt         DateTime? @map("updated_at")

//   // updatedById   Int?      @map("updated_by_id")
//   // updatedByName String?   @map("updated_by_name")

//   @@index([createdByUsername])
//   @@map("role")
// }

// model Policy {
//   id                Int       @id @default(autoincrement())
//   /// @HideField({input: true, output:true})
//   ptype             String    @default("p")
//   subject           String    @default("none")
//   object            String    @default("none")
//   action            String    @default("none")
//   effect            String    @default("allow")
//   effectWith        String    @default("organize") @map("effect_with")
//   condition         String?
//   /// @HideField({input: true, output:true})
//   domainId          Int       @default(0) @map("domain_id")
//   /// @HideField({input: true, output:true})
//   createdById       Int?      @map("created_by_id")
//   /// @HideField({input: true})
//   createdByUsername String?   @map("created_by_username")
//   createdByName     String?   @map("created_by_name")
//   /// @HideField({input: true})
//   createdAt         DateTime  @default(now()) @map("created_at")
//   /// @HideField({input: true})
//   updatedAt         DateTime? @map("updated_at")

//   // updatedById   Int?      @map("updated_by_id")
//   // updatedByName String?   @map("updated_by_name")

//   @@index([createdByUsername])
//   @@map("casbin_policy")
// }

// model RoleGroup {
//   id       Int     @id @default(autoincrement())
//   ptype    String  @default("g")
//   role     String?
//   rule     String?
//   /// @HideField({input: true, output:true})
//   domainId Int     @default(0) @map("domain_id")

//   @@map("casbin_role")
// }

// model CasbinGroup {
//   id     Int     @id @default(autoincrement())
//   ptype  String  @default("g")
//   group  String?
//   role   String?
//   domain String?

//   @@map("casbin_group")
// }

// model Comment {
//   id        String   @id @default(cuid())
//   body      String
//   // author    User     @relation(fields: [authorId], references: [id])
//   authorId  String   @map("author_id")
//   // article   Article? @relation(fields: [articleId], references: [id])
//   articleId String?  @map("article_id")
//   createdAt DateTime @default(now()) @map("created_at")
//   /// @HideField({ match: '*Update*Input' })
//   updatedAt DateTime @updatedAt @map("updated_at")
// }
