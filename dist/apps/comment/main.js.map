{"version":3,"file":"main.js","mappings":"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","sources":["webpack://koj/./apps/comment/src/comment/comment.controller.ts","webpack://koj/./apps/comment/src/comment/comment.interface.ts","webpack://koj/./apps/comment/src/comment/comment.module.ts","webpack://koj/./apps/comment/src/comment/comment.service.ts","webpack://koj/./apps/comment/src/dto/comment-vote.dto.ts","webpack://koj/./apps/comment/src/dto/comment.dto.ts","webpack://koj/./apps/comment/src/schemas/comment.schema.ts","webpack://koj/./libs/common/constants/src/index.ts","webpack://koj/./libs/common/constants/src/lib/casbin.constant.ts","webpack://koj/./libs/common/constants/src/lib/message-partern.constant.ts","webpack://koj/./libs/common/constants/src/lib/runner.constant.ts","webpack://koj/./libs/common/exceptions/src/index.ts","webpack://koj/./libs/common/exceptions/src/lib/rpc-prisma.exception.ts","webpack://koj/./libs/common/exceptions/src/lib/rpc.exception.ts","webpack://koj/./libs/common/utils/src/index.ts","webpack://koj/./libs/common/utils/src/lib/common.util.ts","webpack://koj/./libs/common/utils/src/lib/crypto.util.ts","webpack://koj/./libs/common/utils/src/lib/database-query.util.ts","webpack://koj/./libs/common/utils/src/lib/fs.util.ts","webpack://koj/./libs/common/utils/src/lib/policy.util.ts","webpack://koj/./libs/common/utils/src/lib/string.util.ts","webpack://koj/./libs/instrumentation/src/RpcContextPropagator.ts","webpack://koj/./libs/instrumentation/src/decorator/span.decorator.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/enum.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/symbols.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/types.ts","webpack://koj/./libs/instrumentation/src/graphql/instrumentation.ts","webpack://koj/./libs/instrumentation/src/graphql/utils.ts","webpack://koj/./libs/instrumentation/src/graphql/version.ts","webpack://koj/./libs/instrumentation/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/mongoose.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/types.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/utils.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/version.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/index.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/type.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/instrumentation.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/version.ts","webpack://koj/./libs/instrumentation/src/trace/query-to-path.ts","webpack://koj/./libs/instrumentation/src/trace/store-context.ts","webpack://koj/./libs/instrumentation/src/trace/trace-client.proxy.ts","webpack://koj/./libs/instrumentation/src/trace/trace.interceptor.ts","webpack://koj/./libs/instrumentation/src/utils.ts","webpack://koj/external commonjs \"@nestjs/common\"","webpack://koj/external commonjs \"@nestjs/core\"","webpack://koj/external commonjs \"@nestjs/graphql\"","webpack://koj/external commonjs \"@nestjs/microservices\"","webpack://koj/external commonjs \"@nestjs/mongoose\"","webpack://koj/external commonjs \"@opentelemetry/api\"","webpack://koj/external commonjs \"@opentelemetry/core\"","webpack://koj/external commonjs \"@opentelemetry/instrumentation\"","webpack://koj/external commonjs \"@opentelemetry/semantic-conventions\"","webpack://koj/external commonjs \"@prisma/client\"","webpack://koj/external commonjs \"mongoose\"","webpack://koj/external commonjs \"nestjs-otel\"","webpack://koj/external commonjs \"rxjs\"","webpack://koj/external commonjs \"tslib\"","webpack://koj/external node-commonjs \"async_hooks\"","webpack://koj/external node-commonjs \"crypto\"","webpack://koj/external node-commonjs \"fs/promises\"","webpack://koj/external node-commonjs \"path\"","webpack://koj/webpack/bootstrap","webpack://koj/./apps/comment/src/main.ts"],"sourcesContent":["import { TraceService } from \"nestjs-otel\";\n\nimport {\n  COMMENT_VOTE,\n  COMMENT_UNVOTE,\n  COMMENT_CREATE,\n  COMMENT_FIND_MANY_BY_ID,\n  COMMENT_DELETE\n} from \"@koj/common/constants\";\n\nimport {\n  Post,\n  Body,\n  Param,\n  UsePipes,\n  UseFilters,\n  Controller,\n  ValidationPipe,\n  UseInterceptors\n} from \"@nestjs/common\";\n\nimport {\n  Ctx,\n  Client,\n  Payload,\n  Transport,\n  NatsContext,\n  ClientProxy,\n  MessagePattern\n} from \"@nestjs/microservices\";\n\nimport { Span } from \"@koj/instrumentation\";\nimport { TraceInterceptor } from \"@koj/instrumentation\";\nimport { AllRpcExceptionFilter } from \"@koj/common/exceptions\";\n\nimport { CommentService } from \"./comment.service\";\nimport { CommentCreateDto } from \"../dto/comment.dto\";\nimport { CommentVoteDto } from \"../dto/comment-vote.dto\";\nimport { CommentPayload, VotePayload } from \"./comment.interface\";\n\n@UseInterceptors(TraceInterceptor)\n@UseFilters(AllRpcExceptionFilter)\n@Controller()\nexport class CommentController {\n  @Client({\n    transport: Transport.NATS,\n    options: {\n      queue: \"comment_queue\",\n      servers: [\"nats://localhost:4222\"]\n    }\n  })\n  client: ClientProxy;\n\n  constructor(\n    private readonly commentService: CommentService,\n    private readonly traceService: TraceService\n  ) {}\n\n  @MessagePattern(COMMENT_CREATE)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_create(@Payload() data: CommentCreateDto) {\n    return this.commentService.create(data);\n  }\n\n  @MessagePattern(COMMENT_FIND_MANY_BY_ID)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_getCommentById(@Payload() data: CommentPayload) {\n    return this.commentService.getCommentById(data);\n  }\n\n  @MessagePattern(COMMENT_VOTE)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_vote(@Payload() data: CommentVoteDto) {\n    const { userId, vote, commentId, domainId } = data;\n    return this.commentService.vote({\n      userId,\n      vote,\n      commentId,\n      domainId\n    });\n  }\n\n  @MessagePattern(COMMENT_UNVOTE)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_unvote(@Payload() data: CommentVoteDto) {\n    const { userId, vote, commentId, domainId } = data;\n    return this.commentService.unVote({\n      userId,\n      vote,\n      commentId,\n      domainId\n    });\n  }\n\n  @MessagePattern(COMMENT_DELETE)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_delete(@Payload() payload) {\n    return this.commentService.remove(payload._id);\n  }\n\n  /**\n   * HTTP\n   */\n  @Post(\"/vote\")\n  vote(@Body() body: VotePayload) {\n    return this.commentService.vote(body);\n  }\n  @Post(\"/delete\")\n  remove(@Body() body) {\n    return this.commentService.remove(body._id);\n  }\n  @Post(\"/unvote\")\n  unvote(@Body() body: VotePayload) {\n    return this.commentService.unVote(body);\n  }\n\n  @Post()\n  async testGetData(@Body() body) {\n    // const payload = { challengeId: 2, userId: 1, type: 'root' };\n    // const payload = {\n    //   parentId: '62b5644da23a6e8a3f82150d',\n    //   userId: 1,\n    //   domainId: 1,\n    // };\n    // const result = this.client.send(COMMENT_FIND_MANY_BY_ID, payload);\n\n    // const vote = {\n    //   vote: -1,\n    //   userId: 1,\n    //   commentId: '62b00a5f48b6a439fda6cf0f',\n    // };\n    // const result = this.client.send(COMMENT_VOTE, vote);\n\n    const comment = {\n      depth: 0,\n      // challengeId: 1,\n      author: { id: 1 },\n      content: \"hello dsafdsf dasf\",\n      parentId: \"62b5644da23a6e8a3f82150d\",\n      domainId: 1\n    };\n    const result = this.client.send(COMMENT_CREATE, comment);\n\n    return result;\n  }\n\n  @Post(\"/:id\")\n  @UsePipes(new ValidationPipe({ transform: true }))\n  getCommentById(@Param(\"id\") id: number, @Body() body) {\n    return this.commentService.getCommentById({\n      parentId: body.parentId,\n      userId: body.userId,\n      type: body.type,\n      domainId: body.domainId\n    });\n  }\n}\n","import { Types } from 'mongoose';\n\nexport interface VotePayload {\n  userId: number;\n  vote: number;\n  commentId: Types.ObjectId;\n  domainId: number;\n}\n\nexport interface CommentPayload {\n  userId?: number;\n  type?: string;\n  parentId?: string;\n  challengeId?: number;\n  domainId: number;\n  content?: string;\n}\n","import { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { Comment, CommentSchema } from '../schemas/comment.schema';\nimport { CommentController } from './comment.controller';\nimport { CommentService } from './comment.service';\nimport { OpenTelemetryModule } from 'nestjs-otel';\n\n@Module({\n  imports: [\n    MongooseModule.forRoot(\n      'mongodb://localhost:9042,localhost:9142,localhost:9242/comments?replicaSet=docker-rs',\n      {\n        useNewUrlParser: true,\n        useUnifiedTopology: true,\n        serverSelectionTimeoutMS: 5000, // Timeout after 5s instead of 30s\n        connectTimeoutMS: 5000,\n        socketTimeoutMS: 5000,\n        keepAlive: false,\n        // readPreference: 'secondary',\n        // w: 0,\n        wtimeoutMS: 5000,\n        waitQueueTimeoutMS: 5000,\n\n        // retryWrites: true,\n        // retryWrites: false,\n        readPreference: 'secondaryPreferred',\n        // replicaSet: 'dbrs',\n      },\n    ),\n    MongooseModule.forFeature([{ name: Comment.name, schema: CommentSchema }]),\n    OpenTelemetryModule.forRoot(),\n  ],\n  controllers: [CommentController],\n  providers: [CommentService],\n})\nexport class AppModule {}\n","import { Model } from \"mongoose\";\nimport { Injectable } from \"@nestjs/common\";\nimport { InjectConnection, InjectModel } from \"@nestjs/mongoose\";\nimport { RpcException } from \"@nestjs/microservices\";\nimport * as mongoose from \"mongoose\";\n\nimport { CommentCreateDto } from \"../dto/comment.dto\";\nimport { CommentVoteDto } from \"../dto/comment-vote.dto\";\nimport { Comment, CommentDocument } from \"../schemas/comment.schema\";\nimport { CommentPayload } from \"./comment.interface\";\nimport mongodb from \"mongodb\";\nimport { fulfillWithTimeLimit } from \"@koj/common/utils\";\n\n@Injectable()\nexport class CommentService {\n  constructor(\n    @InjectModel(Comment.name) private commentModel: Model<CommentDocument>,\n    @InjectConnection() private readonly connection: mongoose.Connection\n  ) {}\n\n  getSession(): Promise<mongodb.ClientSession> {\n    const TIMEOUT = 1000;\n    return new Promise((resolve, reject) => {\n      const setTimeOut = setTimeout(async () => {\n        await this.connection.close();\n        reject(\"timeout\");\n      }, TIMEOUT);\n\n      (async () => {\n        const session = await this.connection.startSession();\n        if (session) {\n          clearTimeout(setTimeOut);\n        }\n\n        console.log(\"return \");\n        resolve(session);\n      })();\n    });\n  }\n  async create(comment: CommentCreateDto) {\n    let result;\n\n    try {\n      const timeLimit = 1000; // 1 sec time limit\n      const failureValue = null; // this is null for just an example.\n      const session = await fulfillWithTimeLimit(\n        timeLimit,\n        this.connection.startSession(),\n        failureValue\n      );\n\n      if (!session) {\n        throw new Error(\"cant work\");\n      }\n\n      await session.withTransaction(async () => {\n        console.log(\"run with transaction\");\n        const { domainId, parentId } = comment;\n        const bulkOperation: Array<mongodb.AnyBulkWriteOperation> = [\n          {\n            insertOne: {\n              document: comment\n            }\n          }\n        ];\n\n        if (parentId) {\n          bulkOperation.push({\n            updateOne: {\n              filter: { _id: comment.parentId, domainId },\n              update: {\n                $inc: { replyCount: 1 }\n              }\n            }\n          });\n        }\n\n        result = await this.commentModel.bulkWrite(bulkOperation, { session });\n\n        if (result.insertedCount !== 1) {\n          throw new Error(\"create comment fail\");\n        }\n        // if (result.modifiedCount !== 1) {\n        //   // Log update count faile\n        //   throw new Error('update comment count fail');\n        // }\n        await session.commitTransaction();\n        await session.endSession();\n      });\n    } catch (error) {\n      throw new RpcException(error.message);\n    }\n\n    return { _id: result.insertedIds[0]._id };\n  }\n\n  async getCommentById({\n    challengeId,\n    parentId,\n    userId,\n    domainId\n  }: CommentPayload) {\n    if (!challengeId && !parentId) {\n      throw new RpcException(\"Must include challengeId or parentId\");\n    }\n    try {\n      const whereCondition = parentId\n        ? { parentId, domainId }\n        : { challengeId, domainId, depth: 0 };\n\n      const result: any = await this.commentModel\n        .find(whereCondition)\n        .sort({ createdAt: -1 })\n        .lean();\n\n      if (userId) {\n        result.forEach((comment) => {\n          comment.currentVote = 0;\n\n          comment.votes.forEach((vote) => {\n            if (vote.userId === userId) {\n              comment.currentVote = vote.vote;\n              return;\n            }\n          });\n          delete comment.votes;\n        });\n      }\n\n      console.log(\n        \"🚀 ~ file: comment.service.ts ~ line 112 ~ CommentService ~ result\",\n        result\n      );\n      return result;\n    } catch (error) {\n      throw new RpcException(error.message);\n    }\n  }\n\n  async vote({ userId, vote, commentId }: CommentVoteDto): Promise<Comment> {\n    const updateVote = { userId, vote };\n    try {\n      const voteResult = await this.commentModel.findOneAndUpdate(\n        { _id: commentId },\n        [\n          {\n            $set: {\n              votes: {\n                $cond: [\n                  { $in: [userId, \"$votes.userId\"] },\n                  {\n                    $map: {\n                      input: \"$votes\",\n                      in: {\n                        $mergeObjects: [\n                          \"$$this\",\n                          {\n                            $cond: [\n                              { $eq: [\"$$this.userId\", userId] },\n                              updateVote,\n                              {}\n                            ]\n                          }\n                        ]\n                      }\n                    }\n                  },\n                  { $concatArrays: [\"$votes\", [updateVote]] }\n                ]\n              },\n              votePoint: { $sum: [\"$votePoint\", vote] }\n            }\n          }\n        ],\n        { new: true }\n      );\n\n      return voteResult;\n    } catch (error) {\n      throw new RpcException(error.message);\n    }\n  }\n\n  async unVote({ userId, commentId }: CommentVoteDto) {\n    try {\n      const whereCondition = { _id: commentId };\n      const unVoteResult = await this.commentModel.updateOne(whereCondition, {\n        $pull: { votes: { userId: userId } },\n        $inc: { votePoint: -1 }\n      });\n\n      return unVoteResult.modifiedCount !== 0;\n    } catch (error) {\n      throw new RpcException(error.message);\n    }\n  }\n\n  async findAll(): Promise<Comment[]> {\n    return this.commentModel.find().exec();\n  }\n\n  async remove(_id) {\n    try {\n      return await this.commentModel.deleteOne({ _id });\n    } catch (error) {\n      throw new RpcException(error.message);\n    }\n  }\n}\n","import { Types } from 'mongoose';\n\nexport class CommentVoteDto {\n  readonly commentId: Types.ObjectId;\n  readonly userId: number;\n  readonly vote?: number;\n  readonly domainId: number;\n}\n","import { IsNotEmpty } from 'class-validator';\n\nexport class CommentCreateDto {\n  // @IsNotEmpty()\n  readonly challengeId: number;\n  // @IsNotEmpty()\n  readonly depth: number;\n  // @IsNotEmpty()\n  readonly parentId: string;\n  // @IsNotEmpty()\n  readonly content?: string;\n  readonly author: {\n    id: number;\n    username?: string;\n    name?: string;\n  };\n  readonly domainId: number;\n}\n","import { Prop, Schema, SchemaFactory } from \"@nestjs/mongoose\";\nimport { Document, Schema as MongooseSchema, Types } from \"mongoose\";\n\nexport type CommentDocument = Comment & Document;\n\nexport class Author {\n  @Prop({ required: true })\n  id: string;\n\n  @Prop()\n  username: string;\n\n  @Prop()\n  name: string;\n\n  @Prop()\n  avatar: string;\n}\n\nexport class Vote {\n  @Prop({ required: true })\n  userId: string;\n\n  @Prop()\n  vote: number;\n}\n\n@Schema({ timestamps: true })\nexport class Comment extends Document {\n  @Prop({ default: 0 })\n  challengeId: number;\n\n  @Prop({ default: 0 })\n  depth: number;\n\n  @Prop({ type: MongooseSchema.Types.ObjectId, default: null })\n  parentId: Types.ObjectId | string;\n\n  @Prop({ type: Author })\n  author?: Author;\n\n  @Prop({ required: true, isRequired: true })\n  content: string;\n\n  @Prop({ type: MongooseSchema.Types.Array, default: [] })\n  votes?: Vote[];\n\n  @Prop({ default: 0 })\n  votePoint: number;\n\n  @Prop({ default: 0 })\n  domainId: number;\n\n  @Prop({ default: 0 })\n  replyCount: number;\n}\n\nexport const CommentSchema = SchemaFactory.createForClass(Comment);\n\n// export const commentSchema = new mongoose.Schema(\n//   {\n//     postId: {\n//       type: Number,\n//       default: 1,\n//     },\n//     depth: {\n//       type: Number,\n//       default: 1,\n//     },\n//     parentId: {\n//       type: mongoose.Schema.Types.ObjectId,\n//       default: null,\n//     },\n//     postedDate: { type: Date, default: Date.now },\n//     author: {\n//       id: mongoose.Schema.Types.ObjectId,\n//       name: String,\n//     },\n//     commentText: {\n//       type: String,\n//       required: true,\n//     },\n//   },\n//   { timestamps: true },\n// );\n","export * from \"./lib/runner.constant\";\nexport * from \"./lib/casbin.constant\";\nexport * from \"./lib/message-partern.constant\";\n","export const ADAPTER_MODULE_OPTIONS = 'ADAPTER_MODULE_OPTIONS';\nexport const ADAPTER_ENFORCER = 'ADAPTER_ENFORCER';\nexport const PERMISSIONS_METADATA = '__PERMISSIONS__';\n","export const COMMENT_FIND_MANY_BY_ID = \"comment.find.many.by_id\";\nexport const COMMENT_VOTE = \"comment.vote\";\nexport const COMMENT_UNVOTE = \"comment.unvote\";\nexport const COMMENT_CREATE = \"comment.create\";\nexport const COMMENT_DELETE = \"comment.delete\";\n\n/**\n * ROLE MESSAGE PATTERN\n */\nexport const ROLE_FIND_MANY = \"role.find.many\";\nexport const ROLE_FIND_UNIQUE = \"role.find.unique\";\nexport const ROLE_VOTE = \"role.vote\";\nexport const ROLE_UNVOTE = \"role.unvote\";\nexport const ROLE_CREATE = \"role.create\";\nexport const ROLE_UPDATE = \"role.update\";\nexport const ROLE_DELETE = \"role.delete\";\n\n/**\n * CHALLENGE MESSAGE PATTERN\n */\nexport const CHALLENGE_FIND_MANY = \"challenge.find.many\";\nexport const CHALLENGE_FIND_MANY_PUBLIC = \"challenge.find.many.public\";\nexport const CHALLENGE_FIND_UNIQUE_PUBLIC = \"challenge.find.unique.public\";\nexport const CHALLENGE_FIND_UNIQUE = \"challenge.find.unique\";\nexport const CHALLENGE_CREATE = \"challenge.create\";\nexport const CHALLENGE_UPDATE = \"challenge.update\";\nexport const CHALLENGE_DELETE = \"challenge.delete\";\nexport const CHALLENGE_SUBMIT = \"challenge.submit\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_FIND_MANY = \"submission.find.many\";\nexport const SUBMISSION_FIND_MANY_BY_USER = \"submission.find.many.by_user\";\nexport const SUBMISSION_FIND_UNIQUE = \"submission.find.unique\";\nexport const SUBMISSION_CREATE = \"submission.create\";\nexport const SUBMISSION_UPDATE = \"submission.update\";\nexport const SUBMISSION_DELETE = \"submission.delete\";\nexport const SUBMISSION_SUBMIT = \"submission.submit\";\nexport const SUBMISSION_TEST = \"submission.test\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_STATISTIC_FIND_MANY = \"submission.find.many\";\n\n/**\n * USER MESSAGE PATTERN\n */\nexport const USER_FIND_MANY = \"user.find.many\";\nexport const USER_FIND_UNIQUE_BY_USERNAME = \"user.find.unique.by_username\";\nexport const USER_FIND_UNIQUE = \"user.find.unique\";\nexport const USER_VOTE = \"user.vote\";\nexport const USER_UNVOTE = \"user.unvote\";\nexport const USER_CREATE = \"user.create\";\nexport const USER_UPDATE = \"user.update\";\nexport const USER_DELETE = \"user.delete\";\nexport const USER_SUBMIT = \"user.submit\";\n","export const RUN_TEST = \"run_test\";\nexport const RUN_SUBMIT = \"run_submit\";\nexport const RUN_ALL = \"run_all\";\n\nexport enum RUN_TYPE {\n  TEST = \"run_test\",\n  SUBMIT = \"run_submit\",\n  ALL = \"run_all\"\n}\n","export * from \"./lib/rpc.exception\";\nexport * from \"./lib/rpc-prisma.exception\";\n","import { Catch, RpcExceptionFilter } from \"@nestjs/common\";\nimport { Observable, throwError } from \"rxjs\";\nimport { RpcException } from \"@nestjs/microservices\";\nimport { Prisma } from \"@prisma/client\";\n\n@Catch()\nexport class RpcPrismaExceptionFilter\n  implements RpcExceptionFilter<RpcException>\n{\n  catch(exception): Observable<any> {\n    if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n      if (exception.code === \"P2002\") {\n        exception = new RpcException(\"Resource already exist\");\n      }\n      if (exception.code === \"P2025\") {\n        exception = new RpcException(\"Resource not exist\");\n      }\n    }\n    return throwError(() => exception.message);\n  }\n}\n","import { Catch, RpcExceptionFilter, ArgumentsHost } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\nimport { context, trace } from '@opentelemetry/api';\nimport { StoreContext } from '@koj/instrumentation';\n\nconst tracer = trace.getTracer('rpc-trace', '2.2.2');\n\n@Catch(RpcException)\nexport class AllRpcExceptionFilter implements RpcExceptionFilter<RpcException> {\n  catch(exception: RpcException, host: ArgumentsHost): Observable<any> {\n    return tracer.startActiveSpan(\n      'rpc-exception',\n      {},\n      StoreContext?.currentContext?.context,\n      (span) => {\n        span.recordException(exception);\n        span.end();\n        return throwError(() => exception.message);\n      },\n    );\n  }\n}\n","export * from './lib/fs.util';\nexport * from './lib/common.util';\nexport * from './lib/crypto.util';\nexport * from './lib/string.util';\nexport * from './lib/policy.util';\nexport * from './lib/database-query.util';\n","export function template(strings: ReadonlyArray<string>, ...keys) {\n  return function (...values) {\n    const dict: unknown = values[values.length - 1] || {};\n    const result = [strings[0]];\n    keys.forEach(function (key, i) {\n      const value = Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}\n\nexport async function fulfillWithTimeLimit(timeLimit, task, failureValue) {\n  let timeout;\n  const timeoutPromise = new Promise((resolve, reject) => {\n    timeout = setTimeout(() => {\n      resolve(failureValue);\n    }, timeLimit);\n  });\n  const response = await Promise.race([task, timeoutPromise]);\n  if (timeout) {\n    //the code works without this but let's be safe and clean up the timeout\n    clearTimeout(timeout);\n  }\n  return response;\n}\n\nexport function decodeBase64(data: string): string {\n  return Buffer.from(data, \"base64\").toString(\"ascii\");\n}\n\nexport function encodeBase64(data: string): string {\n  return Buffer.from(data).toString(\"base64\");\n}\n","import * as crypto from 'crypto';\n\n/**\n * initialization vector must 16 byte for 128, 192, 256\n * key must 32 byte\n */\n\nexport interface encryptedData {\n  iv: string;\n  data: string;\n}\n\nconst algorithm = 'aes-256-cbc';\nconst initVector = crypto.randomBytes(16);\nconst defaultSecret = process.env.CRYPTO_AUTH_SECRET || 'defaultSecret!';\nconst defaultKey = crypto.scryptSync(defaultSecret, 'salt', 32);\n\nexport function encrypt(data: string, securitykey: Buffer = defaultKey) {\n  const cipher = crypto.createCipheriv(algorithm, securitykey, initVector);\n  let encryptedData = cipher.update(data, 'utf-8', 'hex');\n  encryptedData += cipher.final('hex');\n  return { iv: initVector.toString('hex'), data: encryptedData };\n  [];\n}\n\nexport function decrypt(encryptedData: encryptedData, securitykey: Buffer = defaultKey) {\n  const { iv, data } = encryptedData;\n  const initVector = Buffer.from(iv, 'hex');\n  const decipher = crypto.createDecipheriv(algorithm, securitykey, initVector);\n  let decryptedData = decipher.update(data, 'hex', 'utf-8');\n  decryptedData += decipher.final('utf-8');\n  return decryptedData;\n}\n","import { camelToSnakeCase } from './string.util';\n\nexport function transformObjectToQuery(object, prefix) {\n  return Object.keys(object)\n    .map((obj) => {\n      console.log('🚀 ~ file: database-query.ts ~ line 6 ~ .map ~ obj', obj);\n      const column = camelToSnakeCase(obj);\n      return prefix ? `${prefix}.\"${column}\"` : column;\n    })\n    .join(', ');\n}\n","import fs from 'fs/promises';\nimport PATH from 'path';\n\nconst getDirName = PATH.dirname;\n\nexport async function cleanDirectory(directory) {\n  return fs\n    .readdir(directory)\n    .then((files) => Promise.all(files.map((file) => fs.unlink(`${directory}/${file}`))));\n}\n\nexport async function writeFile(path, contents) {\n  await fs.mkdir(getDirName(path), { recursive: true });\n  await fs.writeFile(path, contents);\n}\n","export function transformPolicyParam(policyInput) {\n  return;\n}\n","export function getValueAfterLastChar(string: string, char: string) {\n  return string.substring(string.lastIndexOf(char) + 1);\n}\n\nexport function camelToSnakeCase(str) {\n  return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n}\n","import {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed, TraceState } from '@opentelemetry/core';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`,\n);\n\n/**\n *  Most of the part is same as W3CTraceContextPropagator\n *  Just leave the original code here for debug purpose\n */\nexport class RpcTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    // const spanContext = trace.getSpanContext(context);\n    const spanContext =\n      trace.getSpan(context)?.spanContext() || trace.getSpanContext(context);\n    if (!spanContext || isTracingSuppressed(context) || !isSpanContextValid(spanContext))\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n    spanContext.isRemote = true;\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined,\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n    // return context;\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n","import { context, Span as ApiSpan, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { StoreContext } from '../trace/store-context';\nimport { copyMetadataFromFunctionToFunction } from '../utils';\n\nconst recordException = (span: ApiSpan, error: any) => {\n  span.recordException(error);\n  span.setStatus({ code: SpanStatusCode.ERROR, message: error.message });\n};\n\nexport function Span(name?: string, attributes: any = {}) {\n  return (target: any, propertyKey: string, propertyDescriptor: PropertyDescriptor) => {\n    const originalFunction = propertyDescriptor.value;\n    const wrappedFunction = function PropertyDescriptor(...args: any[]) {\n      console.log(\n        '🚀 ~ file: span.decorator.ts ~ line 14 ~ wrappedFunction ~ args',\n        args,\n      );\n      const tracer = trace.getTracer('default');\n      //   const currentSpan =\n      //   trace.getSpan(context.active()) ?? tracer.startSpan('default');\n\n      const parentCtx = StoreContext?.currentContext?.context;\n\n      const spanName = name || `${target.constructor.name}.${propertyKey}`;\n\n      return tracer.startActiveSpan(spanName, {}, parentCtx, (span) => {\n        // const span = tracer.startSpan(spanName, undefined, parentCtx);\n        span.setAttributes(attributes);\n        if (originalFunction.constructor.name === 'AsyncFunction') {\n          return originalFunction\n            .apply(this, args)\n            .catch((error) => {\n              recordException(span, error);\n              // Throw error to propagate it further\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        }\n\n        try {\n          return originalFunction.apply(this, args);\n        } catch (error) {\n          recordException(span, error);\n          // Throw error to propagate it further\n          throw error;\n        } finally {\n          span.end();\n        }\n      });\n    };\n    // eslint-disable-next-line no-param-reassign\n    propertyDescriptor.value = wrappedFunction;\n\n    copyMetadataFromFunctionToFunction(originalFunction, wrappedFunction);\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  COMPONENT = 'graphql',\n  SOURCE = 'graphql.source',\n  FIELD_NAME = 'graphql.field.name',\n  FIELD_PATH = 'graphql.field.path',\n  FIELD_TYPE = 'graphql.field.type',\n  OPERATION_TYPE = 'graphql.operation.type',\n  OPERATION_NAME = 'graphql.operation.name',\n  VARIABLES = 'graphql.variables.',\n  ERROR_VALIDATION_NAME = 'graphql.validation.error',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AllowedOperationTypes {\n  QUERY = 'query',\n  MUTATION = 'mutation',\n  SUBSCRIPTION = 'subscription',\n}\n\nexport enum TokenKind {\n  SOF = '<SOF>',\n  EOF = '<EOF>',\n  BANG = '!',\n  DOLLAR = '$',\n  AMP = '&',\n  PAREN_L = '(',\n  PAREN_R = ')',\n  SPREAD = '...',\n  COLON = ':',\n  EQUALS = '=',\n  AT = '@',\n  BRACKET_L = '[',\n  BRACKET_R = ']',\n  BRACE_L = '{',\n  PIPE = '|',\n  BRACE_R = '}',\n  NAME = 'Name',\n  INT = 'Int',\n  FLOAT = 'Float',\n  STRING = 'String',\n  BLOCK_STRING = 'BlockString',\n  COMMENT = 'Comment',\n}\n\nexport enum SpanNames {\n  EXECUTE = 'graphql.execute',\n  PARSE = 'graphql.parse',\n  RESOLVE = 'graphql.resolve',\n  VALIDATE = 'graphql.validate',\n  SCHEMA_VALIDATE = 'graphql.validateSchema',\n  SCHEMA_PARSE = 'graphql.parseSchema',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\n\nexport const OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\n  'opentelemetry.graphql_data'\n);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport type * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport { DocumentNode } from 'graphql/language/ast';\nimport { GraphQLFieldResolver, GraphQLTypeResolver } from 'graphql/type/definition';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\n\nexport const OPERATION_NOT_SUPPORTED = 'Operation$operationName$not' + ' supported';\n\nexport interface GraphQLInstrumentationExecutionResponseHook {\n  (span: api.Span, data: graphqlTypes.ExecutionResult): void;\n}\n\nexport interface GraphQLInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * When set to true it will not remove attributes values from schema source.\n   * By default all values that can be sensitive are removed and replaced\n   * with \"*\"\n   *\n   * @default false\n   */\n  allowValues?: boolean;\n  /**\n   * The maximum depth of fields/resolvers to instrument.\n   * When set to 0 it will not instrument fields and resolvers\n   *\n   * @default undefined\n   */\n  depth?: number;\n  /**\n   * Whether to merge list items into a single element.\n   *\n   * @example `users.*.name` instead of `users.0.name`, `users.1.name`\n   *\n   * @default false\n   */\n  mergeItems?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from \"execute\" GraphQL action.\n   *\n   * @default undefined\n   */\n  responseHook?: GraphQLInstrumentationExecutionResponseHook;\n}\n\n/**\n * Merged and parsed config of default instrumentation config and GraphQL\n */\nexport type GraphQLInstrumentationParsedConfig = Required<GraphQLInstrumentationConfig> &\n  InstrumentationConfig;\n\nexport type executeFunctionWithObj = (\n  args: graphqlTypes.ExecutionArgs,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport type executeArgumentsArray = [\n  graphqlTypes.GraphQLSchema,\n  graphqlTypes.DocumentNode,\n  any,\n  any,\n  Maybe<{ [key: string]: any }>,\n  Maybe<string>,\n  Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n];\n\nexport type executeFunctionWithArgs = (\n  schema: graphqlTypes.GraphQLSchema,\n  document: graphqlTypes.DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: Maybe<{ [key: string]: any }>,\n  operationName?: Maybe<string>,\n  fieldResolver?: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  typeResolver?: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport interface OtelExecutionArgs {\n  schema: graphqlTypes.GraphQLSchema;\n  document: DocumentNode & ObjectWithGraphQLData;\n  rootValue?: any;\n  contextValue?: any & ObjectWithGraphQLData;\n  variableValues?: Maybe<{ [key: string]: any }>;\n  operationName?: Maybe<string>;\n  fieldResolver?: Maybe<GraphQLFieldResolver<any, any> & OtelPatched>;\n  typeResolver?: Maybe<GraphQLTypeResolver<any, any>>;\n}\n\nexport type executeType = executeFunctionWithObj | executeFunctionWithArgs;\n\nexport type parseType = (\n  source: string | graphqlTypes.Source,\n  options?: graphqlTypes.ParseOptions,\n) => graphqlTypes.DocumentNode;\n\nexport type validateType = (\n  schema: graphqlTypes.GraphQLSchema,\n  documentAST: graphqlTypes.DocumentNode,\n  rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n  typeInfo?: graphqlTypes.TypeInfo,\n  options?: { maxErrors?: number },\n) => ReadonlyArray<graphqlTypes.GraphQLError>;\n\nexport interface GraphQLField {\n  parent: api.Span;\n  span: api.Span;\n  error: Error | null;\n}\n\ninterface OtelGraphQLData {\n  source?: any;\n  span: api.Span;\n  fields: { [key: string]: GraphQLField };\n}\n\nexport interface ObjectWithGraphQLData {\n  [OTEL_GRAPHQL_DATA_SYMBOL]?: OtelGraphQLData;\n}\n\nexport interface OtelPatched {\n  [OTEL_PATCHED_SYMBOL]?: boolean;\n}\n\nexport interface GraphQLPath {\n  prev: GraphQLPath | undefined;\n  key: string | number;\n  /**\n   * optional as it didn't exist yet in ver 14\n   */\n  typename?: string | undefined;\n}\n\n/**\n * Moving this type from ver 15 of graphql as it is nto available in ver. 14s\n * this way it can compile against ver 14.\n */\nexport type Maybe<T> = null | undefined | T;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable prefer-rest-params */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace } from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport { SpanNames } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL } from './enums/symbols';\n\nimport {\n  executeFunctionWithObj,\n  executeArgumentsArray,\n  executeType,\n  parseType,\n  validateType,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  OtelExecutionArgs,\n  ObjectWithGraphQLData,\n  OPERATION_NOT_SUPPORTED,\n  Maybe,\n} from './enums/types';\nimport {\n  addInputVariableAttributes,\n  addSpanSource,\n  endSpan,\n  getOperation,\n  wrapFieldResolver,\n  wrapFields,\n} from './utils';\n\nimport { VERSION } from './version';\nimport * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\n\nconst DEFAULT_CONFIG: GraphQLInstrumentationConfig = {\n  mergeItems: false,\n  depth: -1,\n  allowValues: false,\n};\n\nconst supportedVersions = ['>=14'];\n\nexport class GraphQLInstrumentation extends InstrumentationBase {\n  constructor(config: GraphQLInstrumentationConfig & InstrumentationConfig = {}) {\n    super(\n      '@opentelemetry/instrumentation',\n      VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config),\n    );\n  }\n\n  private _getConfig(): GraphQLInstrumentationParsedConfig {\n    return this._config as GraphQLInstrumentationParsedConfig;\n  }\n\n  override setConfig(config: GraphQLInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    console.log('init grapqhl instrument');\n    const module = new InstrumentationNodeModuleDefinition<typeof graphqlTypes>(\n      'graphql',\n      supportedVersions,\n    );\n    module.files.push(this._addPatchingExecute());\n    module.files.push(this._addPatchingParser());\n    module.files.push(this._addPatchingValidate());\n\n    return module;\n  }\n\n  private _addPatchingExecute(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    console.log('add patching grapqhl');\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/execution/execute.js',\n      supportedVersions,\n      // cannot make it work with appropriate type as execute function has 2\n      //types and/cannot import function but only types\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'execute');\n        }\n        this._wrap(\n          moduleExports,\n          'execute',\n          this._patchExecute(moduleExports.defaultFieldResolver),\n        );\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'execute');\n        }\n      },\n    );\n  }\n\n  private _addPatchingParser(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/language/parser.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'parse');\n        }\n        this._wrap(moduleExports, 'parse', this._patchParse());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'parse');\n        }\n      },\n    );\n  }\n\n  private _addPatchingValidate(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/validation/validate.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'validate');\n        }\n        this._wrap(moduleExports, 'validate', this._patchValidate());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'validate');\n        }\n      },\n    );\n  }\n\n  private _patchExecute(\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>,\n  ): (original: executeType) => executeType {\n    console.log('execute grapqhl');\n    const instrumentation = this;\n    return function execute(original) {\n      return function patchExecute(\n        this: executeType,\n      ): PromiseOrValue<graphqlTypes.ExecutionResult> {\n        let processedArgs: OtelExecutionArgs;\n\n        // case when apollo server is used for example\n        if (arguments.length >= 2) {\n          const args = arguments as unknown as executeArgumentsArray;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5],\n            args[6] || defaultFieldResolved,\n            args[7],\n          );\n        } else {\n          const args = arguments[0] as graphqlTypes.ExecutionArgs;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args.schema,\n            args.document,\n            args.rootValue,\n            args.contextValue,\n            args.variableValues,\n            args.operationName,\n            args.fieldResolver || defaultFieldResolved,\n            args.typeResolver,\n          );\n        }\n\n        const operation = getOperation(\n          processedArgs.document,\n          processedArgs.operationName,\n        );\n\n        const httpSpan = trace.getSpan(context.active());\n        if (httpSpan) {\n          const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n          httpSpan.setAttributes({\n            type: 'graphql',\n          });\n          httpSpan.updateName(\n            `gql-${\n              operationDefinition.operation\n            }-${operationDefinition.name.value.toLowerCase()}`,\n          );\n        }\n        const span = instrumentation._createExecuteSpan(operation, processedArgs);\n\n        processedArgs.contextValue[OTEL_GRAPHQL_DATA_SYMBOL] = {\n          source: processedArgs.document\n            ? processedArgs.document ||\n              (processedArgs.document as ObjectWithGraphQLData)[OTEL_GRAPHQL_DATA_SYMBOL]\n            : undefined,\n          span,\n          fields: {},\n        };\n\n        return context.with(context.active(), () => {\n          return safeExecuteInTheMiddle<PromiseOrValue<graphqlTypes.ExecutionResult>>(\n            () => {\n              return (original as executeFunctionWithObj).apply(this, [processedArgs]);\n            },\n            (err, result) => {\n              instrumentation._handleExecutionResult(span, err, result);\n            },\n          );\n        });\n      };\n    };\n  }\n\n  private _handleExecutionResult(\n    span: api.Span,\n    err?: Error,\n    result?: PromiseOrValue<graphqlTypes.ExecutionResult>,\n  ) {\n    const config = this._getConfig();\n    if (result === undefined || err) {\n      endSpan(span, err);\n      return;\n    }\n\n    if (result.constructor.name === 'Promise') {\n      (result as Promise<graphqlTypes.ExecutionResult>).then((resultData) => {\n        if (typeof config.responseHook !== 'function') {\n          endSpan(span);\n          return;\n        }\n        this._executeResponseHook(span, resultData);\n      });\n    } else {\n      if (typeof config.responseHook !== 'function') {\n        endSpan(span);\n        return;\n      }\n      this._executeResponseHook(span, result as graphqlTypes.ExecutionResult);\n    }\n  }\n\n  private _executeResponseHook(span: api.Span, result: graphqlTypes.ExecutionResult) {\n    const config = this._getConfig();\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook(span, result);\n      },\n      (err) => {\n        if (err) {\n          api.diag.error('Error running response hook', err);\n        }\n\n        endSpan(span, undefined);\n      },\n      true,\n    );\n  }\n\n  private _patchParse(): (original: parseType) => parseType {\n    const instrumentation = this;\n    return function parse(original) {\n      return function patchParse(\n        this: parseType,\n        source: string | graphqlTypes.Source,\n        options?: graphqlTypes.ParseOptions,\n      ): graphqlTypes.DocumentNode {\n        return instrumentation._parse(this, original, source, options);\n      };\n    };\n  }\n\n  private _patchValidate(): (original: validateType) => validateType {\n    const instrumentation = this;\n    return function validate(original: validateType) {\n      return function patchValidate(\n        this: validateType,\n        schema: graphqlTypes.GraphQLSchema,\n        documentAST: graphqlTypes.DocumentNode,\n        rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n        typeInfo?: graphqlTypes.TypeInfo,\n        options?: { maxErrors?: number },\n      ): ReadonlyArray<graphqlTypes.GraphQLError> {\n        return instrumentation._validate(\n          this,\n          original,\n          schema,\n          documentAST,\n          rules,\n          typeInfo,\n          options,\n        );\n      };\n    };\n  }\n\n  private _parse(\n    obj: parseType,\n    original: parseType,\n    source: string | graphqlTypes.Source,\n    options?: graphqlTypes.ParseOptions,\n  ): graphqlTypes.DocumentNode {\n    const config = this._getConfig();\n    const span = this.tracer.startSpan(SpanNames.PARSE);\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<graphqlTypes.DocumentNode & ObjectWithGraphQLData>(\n        () => {\n          return original.call(obj, source, options);\n        },\n        (err, result) => {\n          if (result) {\n            const operation = getOperation(result);\n            if (!operation) {\n              span.updateName(SpanNames.SCHEMA_PARSE);\n            } else if (result.loc) {\n              addSpanSource(span, result.loc, config.allowValues);\n            }\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _validate(\n    obj: validateType,\n    original: validateType,\n    schema: graphqlTypes.GraphQLSchema,\n    documentAST: graphqlTypes.DocumentNode,\n    rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n    typeInfo?: graphqlTypes.TypeInfo,\n    options?: { maxErrors?: number },\n  ): ReadonlyArray<graphqlTypes.GraphQLError> {\n    const span = this.tracer.startSpan(SpanNames.VALIDATE, {});\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<ReadonlyArray<graphqlTypes.GraphQLError>>(\n        () => {\n          return original.call(obj, schema, documentAST, rules, typeInfo, options);\n        },\n        (err, errors) => {\n          if (!documentAST.loc) {\n            span.updateName(SpanNames.SCHEMA_VALIDATE);\n          }\n          if (errors && errors.length) {\n            span.recordException({\n              name: AttributeNames.ERROR_VALIDATION_NAME,\n              message: JSON.stringify(errors),\n            });\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _createExecuteSpan(\n    operation: graphqlTypes.DefinitionNode | undefined,\n    processedArgs: graphqlTypes.ExecutionArgs,\n  ): api.Span {\n    const config = this._getConfig();\n\n    const span = this.tracer.startSpan(SpanNames.EXECUTE, {\n      // attributes: {\n      //   component: 'graphql',\n      // },\n    });\n    if (operation) {\n      const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n      span.setAttribute(AttributeNames.OPERATION_TYPE, operationDefinition.operation);\n\n      if (operationDefinition.name) {\n        span.setAttribute(AttributeNames.OPERATION_NAME, operationDefinition.name.value);\n      }\n    } else {\n      let operationName = ' ';\n      if (processedArgs.operationName) {\n        operationName = ` \"${processedArgs.operationName}\" `;\n      }\n      operationName = OPERATION_NOT_SUPPORTED.replace('$operationName$', operationName);\n      span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n    }\n\n    if (processedArgs.document?.loc) {\n      addSpanSource(span, processedArgs.document.loc, config.allowValues);\n    }\n\n    if (processedArgs.variableValues && config.allowValues) {\n      addInputVariableAttributes(span, processedArgs.variableValues);\n    }\n\n    return span;\n  }\n\n  private _wrapExecuteArgs(\n    schema: graphqlTypes.GraphQLSchema,\n    document: graphqlTypes.DocumentNode,\n    rootValue: any,\n    contextValue: any,\n    variableValues: Maybe<{ [key: string]: any }>,\n    operationName: Maybe<string>,\n    fieldResolver: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n    typeResolver: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n  ): OtelExecutionArgs {\n    if (!contextValue) {\n      contextValue = {};\n    }\n    if (contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return {\n        schema,\n        document,\n        rootValue,\n        contextValue,\n        variableValues,\n        operationName,\n        fieldResolver,\n        typeResolver,\n      };\n    }\n    fieldResolver = wrapFieldResolver(\n      this.tracer,\n      this._getConfig.bind(this),\n      fieldResolver,\n    );\n\n    if (schema) {\n      wrapFields(schema.getQueryType(), this.tracer, this._getConfig.bind(this));\n      wrapFields(schema.getMutationType(), this.tracer, this._getConfig.bind(this));\n    }\n\n    return {\n      schema,\n      document,\n      rootValue,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n      typeResolver,\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as graphqlTypes from 'graphql';\nimport * as api from '@opentelemetry/api';\nimport { AllowedOperationTypes, SpanNames, TokenKind } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './enums/symbols';\nimport {\n  GraphQLField,\n  GraphQLPath,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  ObjectWithGraphQLData,\n  OtelPatched,\n  Maybe,\n} from './enums/types';\n\nconst OPERATION_VALUES = Object.values(AllowedOperationTypes);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span: api.Span, key: string, variable: any) {\n  if (Array.isArray(variable)) {\n    variable.forEach((value, idx) => {\n      addInputVariableAttribute(span, `${key}.${idx}`, value);\n    });\n  } else if (variable instanceof Object) {\n    Object.entries(variable).forEach(([nestedKey, value]) => {\n      addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n    });\n  } else {\n    span.setAttribute(`${AttributeNames.VARIABLES}${String(key)}`, variable);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function addInputVariableAttributes(\n  span: api.Span,\n  variableValues: { [key: string]: any },\n) {\n  Object.entries(variableValues).forEach(([key, value]) => {\n    addInputVariableAttribute(span, key, value);\n  });\n}\n\nexport function addSpanSource(\n  span: api.Span,\n  loc?: graphqlTypes.Location,\n  allowValues?: boolean,\n  start?: number,\n  end?: number,\n): void {\n  const source = getSourceFromLocation(loc, allowValues, start, end);\n  span.setAttribute(AttributeNames.SOURCE, source);\n}\n\nfunction createFieldIfNotExists(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n): {\n  field: any;\n  spanAdded: boolean;\n} {\n  let field = getField(contextValue, path);\n\n  let spanAdded = false;\n\n  if (!field) {\n    spanAdded = true;\n    const parent = getParentField(contextValue, path);\n\n    field = {\n      parent,\n      span: createResolverSpan(tracer, getConfig, contextValue, info, path, parent.span),\n      error: null,\n    };\n\n    addField(contextValue, path, field);\n  }\n\n  return { spanAdded, field };\n}\n\nfunction createResolverSpan(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n  parentSpan?: api.Span,\n): api.Span {\n  const attributes: api.SpanAttributes = {\n    [AttributeNames.FIELD_NAME]: info.fieldName,\n    [AttributeNames.FIELD_PATH]: path.join('.'),\n    [AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n  };\n\n  const span = tracer.startSpan(\n    SpanNames.RESOLVE,\n    {\n      attributes,\n    },\n    parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined,\n  );\n\n  const document = contextValue[OTEL_GRAPHQL_DATA_SYMBOL].source;\n  const fieldNode = info.fieldNodes.find((fieldNode) => fieldNode.kind === 'Field');\n\n  if (fieldNode) {\n    addSpanSource(\n      span,\n      document.loc,\n      getConfig().allowValues,\n      fieldNode.loc?.start,\n      fieldNode.loc?.end,\n    );\n  }\n\n  return span;\n}\n\nexport function endSpan(span: api.Span, error?: Error): void {\n  if (error) {\n    span.recordException(error);\n  }\n  span.end();\n}\n\nexport function getOperation(\n  document: graphqlTypes.DocumentNode,\n  operationName?: Maybe<string>,\n): graphqlTypes.DefinitionNode | undefined {\n  if (!document || !Array.isArray(document.definitions)) {\n    return undefined;\n  }\n\n  if (operationName) {\n    return document.definitions\n      .filter(\n        (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n      )\n      .find((definition) => operationName === (definition as any)?.name?.value);\n  } else {\n    return document.definitions.find(\n      (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n    );\n  }\n}\n\nfunction addField(contextValue: any, path: string[], field: GraphQLField) {\n  return (contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] = field);\n}\n\nfunction getField(contextValue: any, path: string[]) {\n  return contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\n\nfunction getParentField(contextValue: any, path: string[]) {\n  for (let i = path.length - 1; i > 0; i--) {\n    const field = getField(contextValue, path.slice(0, i));\n\n    if (field) {\n      return field;\n    }\n  }\n\n  return {\n    span: contextValue[OTEL_GRAPHQL_DATA_SYMBOL].span,\n  };\n}\n\nfunction pathToArray(mergeItems: boolean, path: GraphQLPath): string[] {\n  const flattened: string[] = [];\n  let curr: GraphQLPath | undefined = path;\n  while (curr) {\n    let key = curr.key;\n\n    if (mergeItems && typeof key === 'number') {\n      key = '*';\n    }\n    flattened.push(String(key));\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\nfunction repeatBreak(i: number): string {\n  return repeatChar('\\n', i);\n}\n\nfunction repeatSpace(i: number): string {\n  return repeatChar(' ', i);\n}\n\nfunction repeatChar(char: string, to: number): string {\n  let text = '';\n  for (let i = 0; i < to; i++) {\n    text += char;\n  }\n  return text;\n}\n\nconst KindsToBeRemoved: string[] = [\n  TokenKind.FLOAT,\n  TokenKind.STRING,\n  TokenKind.INT,\n  TokenKind.BLOCK_STRING,\n];\n\nexport function getSourceFromLocation(\n  loc?: graphqlTypes.Location,\n  allowValues = false,\n  inputStart?: number,\n  inputEnd?: number,\n): string {\n  let source = '';\n\n  if (loc?.startToken) {\n    const start = typeof inputStart === 'number' ? inputStart : loc.start;\n    const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n\n    let next: graphqlTypes.Token | null = loc.startToken.next;\n    let previousLine: number | undefined = 1;\n    while (next) {\n      if (next.start < start) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      if (next.end > end) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      let value = next.value || next.kind;\n      let space = '';\n      if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n        // value = repeatChar('*', value.length);\n        value = '*';\n      }\n      if (next.kind === TokenKind.STRING) {\n        value = `\"${value}\"`;\n      }\n      if (next.kind === TokenKind.EOF) {\n        value = '';\n      }\n      if (next.line > previousLine!) {\n        source += repeatBreak(next.line - previousLine!);\n        previousLine = next.line;\n        space = repeatSpace(next.column - 1);\n      } else {\n        if (next.line === next.prev?.line) {\n          space = repeatSpace(next.start - (next.prev?.end || 0));\n        }\n      }\n      source += space + value;\n      if (next) {\n        next = next.next!;\n      }\n    }\n  }\n\n  return source;\n}\n\nexport function wrapFields(\n  type: Maybe<graphqlTypes.GraphQLObjectType & OtelPatched>,\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n): void {\n  if (!type || typeof type.getFields !== 'function' || type[OTEL_PATCHED_SYMBOL]) {\n    return;\n  }\n  const fields = type.getFields();\n\n  type[OTEL_PATCHED_SYMBOL] = true;\n\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n\n    if (!field) {\n      return;\n    }\n\n    if (field.resolve) {\n      field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n    }\n\n    if (field.type) {\n      let unwrappedType: any = field.type;\n\n      while (unwrappedType.ofType) {\n        unwrappedType = unwrappedType.ofType;\n      }\n      wrapFields(unwrappedType, tracer, getConfig);\n    }\n  });\n}\n\nexport function wrapFieldResolver<TSource = any, TContext = any, TArgs = any>(\n  tracer: api.Tracer,\n  getConfig: () => Required<GraphQLInstrumentationConfig>,\n  fieldResolver: Maybe<\n    graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched\n  >,\n): graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched {\n  if (\n    (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] ||\n    typeof fieldResolver !== 'function'\n  ) {\n    return fieldResolver!;\n  }\n\n  function wrappedFieldResolver(\n    this: graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>,\n    source: TSource,\n    args: TArgs,\n    contextValue: TContext & ObjectWithGraphQLData,\n    info: graphqlTypes.GraphQLResolveInfo,\n  ) {\n    if (!fieldResolver) {\n      return undefined;\n    }\n    const config = getConfig();\n\n    if (!contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return fieldResolver.call(this, source, args, contextValue, info);\n    }\n    const path = pathToArray(config.mergeItems, info && info.path);\n    const depth = path.filter((item: any) => typeof item === 'string').length;\n\n    let field: any;\n    let shouldEndSpan = false;\n    if (config.depth >= 0 && config.depth < depth) {\n      field = getParentField(contextValue, path);\n    } else {\n      const newField = createFieldIfNotExists(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path,\n      );\n      field = newField.field;\n      shouldEndSpan = newField.spanAdded;\n    }\n\n    return api.context.with(api.trace.setSpan(api.context.active(), field.span), () => {\n      return safeExecuteInTheMiddleAsync<\n        | Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>\n        | Promise<Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>>\n      >(\n        () => {\n          return fieldResolver.call(this, source, args, contextValue, info);\n        },\n        (err) => {\n          if (shouldEndSpan) {\n            endSpan(field.span, err);\n          }\n        },\n      );\n    });\n  }\n\n  (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] = true;\n\n  return wrappedFieldResolver;\n}\n\n/**\n * Async version of safeExecuteInTheMiddle from instrumentation package\n * can be removed once this will be added to instrumentation package\n * @param execute\n * @param onFinish\n * @param preventThrowingError\n */\nasync function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean,\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n","export const VERSION = '2.2.2';\n","export * from './graphql/instrumentation';\nexport * from './nestjs-core/instrumentation';\nexport * from './RpcContextPropagator';\nexport * from './trace/trace-client.proxy';\nexport * from './trace/trace.interceptor';\nexport * from './mongoose/src';\nexport * from './trace/store-context';\nexport * from './decorator/span.decorator';\nexport * from './trace/query-to-path';\n","export * from './mongoose';\nexport * from './types';\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { context, Span, trace, diag } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type mongoose from 'mongoose';\nimport { MongooseInstrumentationConfig, SerializerPayload } from './types';\nimport { startSpan, handleCallbackResponse, handlePromiseResponse } from './utils';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\nconst contextCaptureFunctions = [\n  'remove',\n  'deleteOne',\n  'deleteMany',\n  'find',\n  'findOne',\n  'estimatedDocumentCount',\n  'countDocuments',\n  'count',\n  'distinct',\n  'where',\n  '$where',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndReplace',\n  'findOneAndRemove',\n];\n\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexport const _STORED_PARENT_SPAN: unique symbol = Symbol('stored-parent-span');\n\nexport class MongooseInstrumentation extends InstrumentationBase<typeof mongoose> {\n  static readonly component = 'mongoose';\n  protected override _config: MongooseInstrumentationConfig;\n  private moduleVersion: string;\n\n  constructor(config: MongooseInstrumentationConfig = {}) {\n    super('opentelemetry-instrumentation-mongoose', VERSION, Object.assign({}, config));\n\n    // According to specification, statement is not set by default on mongodb spans.\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  override setConfig(config: MongooseInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  protected init(): InstrumentationModuleDefinition<typeof mongoose> {\n    const module = new InstrumentationNodeModuleDefinition<typeof mongoose>(\n      MongooseInstrumentation.component,\n      ['*'],\n      this.patch.bind(this),\n      this.unpatch.bind(this),\n    );\n    return module;\n  }\n\n  protected patch(moduleExports: typeof mongoose, moduleVersion: string) {\n    diag.debug('mongoose instrumentation: patching');\n    this.moduleVersion = moduleVersion;\n\n    this._wrap(moduleExports.Model.prototype, 'save', this.patchOnModelMethods('save'));\n    this._wrap(\n      moduleExports.Model.prototype,\n      'remove',\n      this.patchOnModelMethods('remove'),\n    );\n    this._wrap(moduleExports.Query.prototype, 'exec', this.patchQueryExec());\n    this._wrap(moduleExports.Aggregate.prototype, 'exec', this.patchAggregateExec());\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._wrap(\n        moduleExports.Query.prototype,\n        funcName as any,\n        this.patchAndCaptureSpanContext(funcName),\n      );\n    });\n    this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n\n    return moduleExports;\n  }\n\n  protected unpatch(moduleExports: typeof mongoose): void {\n    diag.debug('mongoose instrumentation: unpatch mongoose');\n    this._unwrap(moduleExports.Model.prototype, 'save');\n    this._unwrap(moduleExports.Model.prototype, 'remove');\n    this._unwrap(moduleExports.Query.prototype, 'exec');\n    this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._unwrap(moduleExports.Query.prototype, funcName as any);\n    });\n    this._unwrap(moduleExports.Model, 'aggregate');\n  }\n\n  private patchAggregateExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Aggregate exec prototype');\n    return (originalAggregate: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalAggregate.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            'aggregate',\n            {\n              options: this.options,\n              aggregatePipeline: this._pipeline,\n            },\n          ),\n        };\n\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this._model?.modelName,\n          operation: 'aggregate',\n          attributes,\n          collection: this._model.collection,\n          parentSpan,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalAggregate, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchQueryExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Query exec prototype');\n    return (originalExec: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalExec.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(this.op, {\n            condition: this._conditions,\n            updates: this._update,\n            options: this.options,\n            fields: this._fields,\n          }),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.model.modelName,\n          operation: this.op,\n          attributes,\n          parentSpan,\n          collection: this.mongooseCollection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalExec, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchOnModelMethods(op: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose Model ${op} prototype`);\n    return (originalOnModelFunction: Function) => {\n      return function method(this: any, options?: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalOnModelFunction.apply(this, arguments);\n        }\n\n        const serializePayload: SerializerPayload = { document: this };\n        if (options && !(options instanceof Function)) {\n          serializePayload.options = options;\n        }\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            op,\n            serializePayload,\n          ),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.constructor.modelName,\n          operation: op,\n          attributes,\n          parentSpan,\n          collection: this.constructor.collection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        if (options instanceof Function) {\n          callback = options;\n          options = undefined;\n        }\n\n        return self._handleResponse(\n          span,\n          originalOnModelFunction,\n          this,\n          arguments,\n          callback,\n        );\n      };\n    };\n  }\n\n  // we want to capture the otel span on the object which is calling exec.\n  // in the special case of aggregate, we need have no function to path\n  // on the Aggregate object to capture the context on, so we patch\n  // the aggregate of Model, and set the context on the Aggregate object\n  private patchModelAggregate() {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose model aggregate`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        const currentSpan = trace.getSpan(context.active());\n        const aggregate = self._callOriginalFunction(() =>\n          original.apply(this, arguments),\n        );\n        if (aggregate) aggregate[_STORED_PARENT_SPAN] = currentSpan;\n        return aggregate;\n      };\n    };\n  }\n\n  private patchAndCaptureSpanContext(funcName: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose query ${funcName} prototype`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        this[_STORED_PARENT_SPAN] = trace.getSpan(context.active());\n        return self._callOriginalFunction(() => original.apply(this, arguments));\n      };\n    };\n  }\n\n  private _handleResponse(\n    span: Span,\n    exec: Function,\n    originalThis: any,\n    args: IArguments,\n    callback?: Function,\n  ) {\n    const self = this;\n    if (callback instanceof Function) {\n      return self._callOriginalFunction(() =>\n        handleCallbackResponse(\n          callback,\n          exec,\n          originalThis,\n          span,\n          self._config.responseHook,\n        ),\n      );\n    } else {\n      const response = self._callOriginalFunction(() => exec.apply(originalThis, args));\n      return handlePromiseResponse(response, span, self._config.responseHook);\n    }\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this._config?.suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n\n  private _addModuleVersionIfNeeded(span: Span) {\n    if (this._config.moduleVersionAttributeName) {\n      span.setAttribute(this._config.moduleVersionAttributeName, this.moduleVersion);\n    }\n  }\n}\n","import { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface SerializerPayload {\n    condition?: any;\n    options?: any;\n    updates?: any;\n    document?: any;\n    aggregatePipeline?: any;\n    fields?: any;\n}\n\nexport type DbStatementSerializer = (operation: string, payload: SerializerPayload) => string;\n\nexport type MongooseResponseCustomAttributesFunction = (span: Span, response: any) => void;\n\nexport interface MongooseInstrumentationConfig extends InstrumentationConfig {\n    /**\n     * Mongoose operation use mongodb under the hood.\n     * If mongodb instrumentation is enabled, a mongoose operation will also create\n     * a mongodb operation describing the communication with mongoDB servers.\n     * Setting the `suppressInternalInstrumentation` config value to `true` will\n     * cause the instrumentation to suppress instrumentation of underlying operations,\n     * effectively causing mongodb spans to be non-recordable.\n     */\n    suppressInternalInstrumentation?: boolean;\n\n    /** Custom serializer function for the db.statement tag */\n    dbStatementSerializer?: DbStatementSerializer;\n\n    /** hook for adding custom attributes using the response payload */\n    responseHook?: MongooseResponseCustomAttributesFunction;\n\n    /**\n     * If passed, a span attribute will be added to all spans with key of the provided \"moduleVersionAttributeName\"\n     * and value of the module version.\n     */\n    moduleVersionAttributeName?: string;\n\n    /** Set to true if you do not want to collect traces that start with mongoose */\n    requireParentSpan?: boolean;\n}\n","import {\n  Tracer,\n  SpanAttributes,\n  SpanStatusCode,\n  context,\n  trace,\n  diag,\n  Span,\n  SpanKind,\n} from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// ===== Start Span Utils =====\n\ninterface StartSpanPayload {\n  tracer: Tracer;\n  collection: Collection;\n  modelName: string;\n  operation: string;\n  attributes: SpanAttributes;\n  parentSpan?: Span;\n}\n\nfunction getAttributesFromCollection(collection: Collection): SpanAttributes {\n  return {\n    [SemanticAttributes.DB_MONGODB_COLLECTION]: collection.name,\n    [SemanticAttributes.DB_NAME]: collection.conn.name,\n    [SemanticAttributes.DB_USER]: collection.conn.user,\n    [SemanticAttributes.NET_PEER_NAME]: collection.conn.host,\n    [SemanticAttributes.NET_PEER_PORT]: collection.conn.port,\n    [SemanticAttributes.NET_TRANSPORT]: 'IP.TCP', // Always true in mongodb\n  };\n}\n\nexport function startSpan({\n  tracer,\n  collection,\n  modelName,\n  operation,\n  attributes,\n  parentSpan,\n}: StartSpanPayload): Span {\n  console.log('currentspan', trace.getSpan(context.active()));\n  return tracer.startSpan(\n    `mongoose.${modelName}.${operation}`,\n    {\n      kind: SpanKind.CLIENT,\n      attributes: {\n        ...attributes,\n        ...getAttributesFromCollection(collection),\n        [SemanticAttributes.DB_OPERATION]: operation,\n        [SemanticAttributes.DB_SYSTEM]: 'mongodb',\n      },\n    },\n    parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined,\n  );\n}\n\n// ===== End Span Utils =====\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n  span.recordException(error);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: `${error.message} ${error.code ? `\\nMongo Error Code: ${error.code}` : ''}`,\n  });\n}\n\nfunction applyResponseHook(\n  span: Span,\n  response: any,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  if (responseHook) {\n    safeExecuteInTheMiddle(\n      () => responseHook(span, response),\n      (e) => {\n        if (e) {\n          diag.error('mongoose instrumentation: responseHook error', e);\n        }\n      },\n      true,\n    );\n  }\n}\n\nexport function handlePromiseResponse(\n  execResponse: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n): any {\n  if (!(execResponse instanceof Promise)) {\n    applyResponseHook(span, execResponse, responseHook);\n    span.end();\n    return execResponse;\n  }\n\n  return execResponse\n    .then((response) => {\n      applyResponseHook(span, response, responseHook);\n      return response;\n    })\n    .catch((err) => {\n      setErrorStatus(span, err);\n      throw err;\n    })\n    .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n  callback: Function,\n  exec: Function,\n  originalThis: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  return exec.apply(originalThis, [\n    (err: Error, response: any) => {\n      err ? setErrorStatus(span, err) : applyResponseHook(span, response, responseHook);\n      span.end();\n      return callback!(err, response);\n    },\n  ]);\n}\n","// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.28.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  VERSION = 'nestjs.version',\n  TYPE = 'nestjs.type',\n  MODULE = 'nestjs.module',\n  CONTROLLER = 'nestjs.controller',\n  CALLBACK = 'nestjs.callback',\n  PIPES = 'nestjs.pipes',\n  INTERCEPTORS = 'nestjs.interceptors',\n  GUARDS = 'nestjs.guards',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AttributeNames } from './attribute-name';\nexport { NestType } from './type';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NestType {\n  APP_CREATION = 'app_creation',\n  REQUEST_CONTEXT = 'request_context',\n  REQUEST_HANDLER = 'handler',\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport type * as NestJS from '@nestjs/core';\nimport type { NestFactory } from '@nestjs/core/nest-factory.js';\nimport type { RouterExecutionContext } from '@nestjs/core/router/router-execution-context.js';\nimport type { Controller } from '@nestjs/common/interfaces';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\nimport { AttributeNames, NestType } from './enums';\n\nexport class NestInstrumentation extends InstrumentationBase<typeof NestJS> {\n  static readonly COMPONENT = '@nestjs/core';\n  static readonly COMMON_ATTRIBUTES = {\n    component: NestInstrumentation.COMPONENT,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-nestjs-core', VERSION);\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition<any>(\n      NestInstrumentation.COMPONENT,\n      ['>=4.0.0'],\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Patching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        return moduleExports;\n      },\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Unpatching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        if (moduleExports === undefined) return;\n      },\n    );\n\n    module.files.push(\n      this.getNestFactoryFileInstrumentation(['>=4.0.0']),\n      this.getRouterExecutionContextFileInstrumentation(['>=4.0.0']),\n    );\n\n    return module;\n  }\n\n  getNestFactoryFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/nest-factory.js',\n      versions,\n      (NestFactoryStatic: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          NestFactoryStatic.NestFactoryStatic.prototype,\n          'create',\n          createWrapNestFactoryCreate(this.tracer, moduleVersion),\n        );\n        return NestFactoryStatic;\n      },\n      (NestFactoryStatic: any) => {\n        this._unwrap(NestFactoryStatic.NestFactoryStatic.prototype, 'create');\n      },\n    );\n  }\n\n  getRouterExecutionContextFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/router/router-execution-context.js',\n      versions,\n      (RouterExecutionContext: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create',\n          createWrapCreateHandler(this.tracer, moduleVersion),\n        );\n        return RouterExecutionContext;\n      },\n      (RouterExecutionContext: any) => {\n        this._unwrap(RouterExecutionContext.RouterExecutionContext.prototype, 'create');\n      },\n    );\n  }\n\n  private ensureWrapped(\n    moduleVersion: string | undefined,\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any,\n  ) {\n    this._diag.debug(\n      `Applying ${methodName} patch for ${NestInstrumentation.COMPONENT}@${moduleVersion}`,\n    );\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n\nfunction createWrapNestFactoryCreate(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreate(original: typeof NestFactory.create) {\n    return function createWithTrace(\n      this: typeof NestFactory,\n      nestModule: any,\n      /* serverOrOptions */\n    ) {\n      const span = tracer.startSpan('Create Nest App', {\n        attributes: {\n          ...NestInstrumentation.COMMON_ATTRIBUTES,\n          [AttributeNames.TYPE]: NestType.APP_CREATION,\n          [AttributeNames.VERSION]: moduleVersion,\n          [AttributeNames.MODULE]: nestModule.name,\n        },\n      });\n      const spanContext = api.trace.setSpan(api.context.active(), span);\n\n      return api.context.with(spanContext, async () => {\n        try {\n          return await original.apply(this, arguments as any);\n        } catch (e) {\n          throw addError(span, e);\n        } finally {\n          span.end();\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapCreateHandler(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreateHandler(original: RouterExecutionContext['create']) {\n    return function createHandlerWithTrace(\n      this: RouterExecutionContext,\n      instance: Controller,\n      callback: (...args: any[]) => unknown,\n    ) {\n      arguments[1] = createWrapHandler(tracer, moduleVersion, callback);\n      const handler = original.apply(this, arguments as any);\n      const exceptionList = [];\n      return function (this: any, req: any, res: any, next: (...args: any[]) => unknown) {\n        const callbackName = callback.name;\n        const instanceName =\n          instance.constructor && instance.constructor.name\n            ? instance.constructor.name\n            : 'UnnamedInstance';\n        const spanName = callbackName ? `${instanceName}.${callbackName}` : instanceName;\n\n        const span = tracer.startSpan(spanName, {\n          attributes: {\n            ...NestInstrumentation.COMMON_ATTRIBUTES,\n            [AttributeNames.VERSION]: moduleVersion,\n            [AttributeNames.TYPE]: NestType.REQUEST_CONTEXT,\n            [SemanticAttributes.HTTP_METHOD]: req.method,\n            [SemanticAttributes.HTTP_URL]: req.originalUrl || req.url,\n            [SemanticAttributes.HTTP_ROUTE]: req.route?.path || req.routerPath,\n            [AttributeNames.CONTROLLER]: instanceName,\n            [AttributeNames.CALLBACK]: callbackName,\n          },\n        });\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n        return api.context.with(spanContext, async () => {\n          try {\n            return await handler.apply(this, arguments as any);\n          } finally {\n            span.end();\n          }\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapHandler(\n  tracer: api.Tracer,\n  moduleVersion: string | undefined,\n  handler: Function,\n) {\n  const wrappedHandler = function (this: RouterExecutionContext) {\n    const span = tracer.startSpan(handler.name || 'anonymous nest handler', {\n      attributes: {\n        ...NestInstrumentation.COMMON_ATTRIBUTES,\n        [AttributeNames.VERSION]: moduleVersion,\n        [AttributeNames.TYPE]: NestType.REQUEST_HANDLER,\n        [AttributeNames.CALLBACK]: handler.name,\n      },\n    });\n    const spanContext = api.trace.setSpan(api.context.active(), span);\n    return api.context.with(spanContext, async () => {\n      try {\n        return await handler.apply(this, arguments);\n      } finally {\n        span.end();\n      }\n    });\n  };\n\n  if (handler.name) {\n    Object.defineProperty(wrappedHandler, 'name', { value: handler.name });\n  }\n\n  // Get the current metadata and set onto the wrapper to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(handler).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, handler),\n      wrappedHandler,\n    );\n  });\n  return wrappedHandler;\n}\n\nconst addError = (span: api.Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: api.SpanStatusCode.ERROR, message: error.message });\n  return error;\n};\n","export const VERSION = '2.2.2';\n","import { DocumentNode, DefinitionNode, SelectionNode, GraphQLResolveInfo } from 'graphql';\n\nexport const getPathsFromAST = (ast: DocumentNode) => {\n  return ast.definitions.map(walkDefinitions);\n};\n\nconst walkDefinitions = (node: DefinitionNode) => {\n  if (node.kind === 'OperationDefinition') {\n    return node.selectionSet.selections.reduce(createReduceSelections('/'), []);\n  }\n};\n\nexport const getPaths = (info: GraphQLResolveInfo) => {\n  return info.operation.selectionSet.selections.reduce(createReduceSelections('/'), []);\n};\n\nconst createReduceSelections =\n  (parent: string) =>\n  (acc: string[], curr: SelectionNode): string[] => {\n    if (curr.kind === 'Field') {\n      if (curr.selectionSet && curr.selectionSet.selections) {\n        acc.push(parent + curr.name.value + '/');\n        return curr.selectionSet.selections.reduce(\n          createReduceSelections(parent + curr.name.value + '/'),\n          acc,\n        );\n      } else {\n        acc.push(parent + curr.name.value);\n        return acc;\n      }\n    }\n    return acc;\n  };\n","import { Context } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\n\nexport class StoreContext {\n  static cls = new AsyncLocalStorage<StoreContext>();\n\n  static get currentContext() {\n    return this.cls.getStore();\n  }\n\n  constructor(public readonly context: Context) {}\n}\n","import { lastValueFrom } from 'rxjs';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\nimport { context, defaultTextMapSetter, propagation, trace } from '@opentelemetry/api';\n\n@Injectable()\nexport class RPCTraceClientProxy {\n  async send(client: ClientProxy, pattern, payload) {\n    const span = trace.getSpan(context.active());\n    if (span?.spanContext()) {\n      propagation.inject(context.active(), payload, defaultTextMapSetter);\n    }\n    try {\n      const res = await lastValueFrom(client.send(pattern, payload));\n      return res;\n    } catch (error) {\n      throw new BadRequestException(error);\n    }\n  }\n}\n","import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable, tap } from 'rxjs';\nimport { context, trace, propagation, defaultTextMapGetter } from '@opentelemetry/api';\nimport { NatsContext, RedisContext, TcpContext } from '@nestjs/microservices';\nimport { Request as ExpressReq } from 'express';\nimport { StoreContext } from './store-context';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class TraceInterceptor implements NestInterceptor {\n  intercept(\n    ctx: ExecutionContext,\n    next: CallHandler<any>,\n  ): Observable<any> | Promise<Observable<any>> {\n    const reflector = new Reflector();\n    const except = reflector.get<boolean>('ExceptTracerInterceptor', ctx.getHandler());\n    if (except) return next.handle();\n\n    const _logger = new Logger(TraceInterceptor.name);\n\n    const tracer = trace.getTracer('default');\n    if (!tracer) return next.handle();\n\n    const getRPCSpan = (ctx: ExecutionContext) => {\n      const rpcContext = ctx\n        .switchToRpc()\n        .getContext<NatsContext | TcpContext | RedisContext>();\n\n      const attributes: any = {};\n      const methodKey = ctx.getHandler().name;\n      let spanName = `rpc::${methodKey}`;\n\n      if (rpcContext instanceof NatsContext) {\n        attributes.type = 'nats';\n        spanName = 'nats::' + (<NatsContext>rpcContext).getSubject();\n      }\n\n      const data = ctx.switchToRpc().getData();\n      const parentCtx = propagation.extract(context.active(), data, defaultTextMapGetter);\n\n      const currentSpan =\n        trace.getSpan(context.active()) ??\n        tracer.startSpan(spanName, undefined, parentCtx);\n\n      currentSpan.setAttributes(attributes);\n\n      _logger.log(`traceid: ${currentSpan.spanContext().traceId}`);\n\n      StoreContext.cls.enterWith(new StoreContext(parentCtx));\n\n      return currentSpan;\n    };\n\n    const getHTTPSpan = (ctx: ExecutionContext) => {\n      const req: ExpressReq = ctx.switchToHttp().getRequest();\n      // const res: ExpressRes = ctx.switchToHttp().getResponse();\n\n      // ** instrumentation-http wll auto inject and extract parentCtx\n      // const parentCtx = Array.isArray(req.headers.spanContext)\n      //   ? req.headers.spanContext[0]\n      //   : req.headers.spanContext;\n      // const traceCtx = parentCtx\n      //   ? trace.setSpanContext(context.active(), JSON.parse(parentCtx))\n      //   : undefined;\n      const host = req.hostname;\n      const path = req.path;\n      _logger.log(`httpSpan: ${host} ${path}`);\n      const span = trace.getSpan(context.active()) ?? tracer.startSpan(host + path);\n      span.updateName(`http-xxx`);\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n\n      return span;\n    };\n\n    const getGraphqlSpan = (ctx: ExecutionContext) => {\n      const gqlContext = GqlExecutionContext.create(ctx);\n      const { operation, fieldName, path } = gqlContext.getInfo();\n\n      const req = gqlContext.getContext().req;\n      const span = trace.getSpan(context.active()) || tracer.startSpan('default');\n\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n      span.setAttribute('type', 'graphql');\n\n      const typeNames = ['Mutation', 'Query'];\n\n      if (typeNames.includes(path.typename)) {\n        span.updateName(`gql::${operation.operation}:${fieldName}`.toLocaleLowerCase());\n      }\n      if (typeNames.includes(path.prev?.typename)) {\n        span.updateName(\n          `gql::${operation.operation}:${path.prev.key}.${fieldName}`.toLocaleLowerCase(),\n        );\n      }\n\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n\n      return span;\n    };\n\n    const ctxType = ctx.getType<'http' | 'ws' | 'graphql' | 'rpc'>();\n\n    const span =\n      ctxType === 'rpc'\n        ? getRPCSpan(ctx)\n        : ctxType === 'graphql'\n        ? getGraphqlSpan(ctx)\n        : getHTTPSpan(ctx);\n\n    if (ctxType === 'graphql') return next.handle();\n\n    return next.handle().pipe(\n      tap({\n        next: () => {\n          span.end();\n        },\n        error: () => {\n          span.end();\n        },\n      }),\n    );\n  }\n}\n","export const copyMetadataFromFunctionToFunction = (\n  originalFunction: () => void,\n  newFunction: () => void,\n): void => {\n  // Get the current metadata and set onto the wrapper\n  // to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(originalFunction).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, originalFunction),\n      newFunction,\n    );\n  });\n};\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/mongoose\");","module.exports = require(\"@opentelemetry/api\");","module.exports = require(\"@opentelemetry/core\");","module.exports = require(\"@opentelemetry/instrumentation\");","module.exports = require(\"@opentelemetry/semantic-conventions\");","module.exports = require(\"@prisma/client\");","module.exports = require(\"mongoose\");","module.exports = require(\"nestjs-otel\");","module.exports = require(\"rxjs\");","module.exports = require(\"tslib\");","module.exports = require(\"async_hooks\");","module.exports = require(\"crypto\");","module.exports = require(\"fs/promises\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// import './tracing';\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nimport { AppModule } from './comment/comment.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const globalPrefix = 'comments';\n  app.setGlobalPrefix(globalPrefix);\n\n  app.connectMicroservice<MicroserviceOptions>({\n    transport: Transport.NATS,\n    options: {\n      servers: ['nats://localhost:4222'],\n      queue: 'comment_queue',\n    },\n  });\n\n  await app.startAllMicroservices();\n\n  const port = 4004;\n  await app.listen(port);\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}