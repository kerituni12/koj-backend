{"version":3,"file":"main.js","mappings":"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","sources":["webpack://koj/./apps/koj/src/app/app.controller.ts","webpack://koj/./apps/koj/src/app/app.module.ts","webpack://koj/./apps/koj/src/app/app.service.ts","webpack://koj/./apps/koj/src/configs/config.ts","webpack://koj/./apps/koj/src/configs/graphql.config.ts","webpack://koj/./apps/koj/src/configs/nats.config.ts","webpack://koj/./apps/koj/src/decorators/gql-context.decorator.ts","webpack://koj/./apps/koj/src/decorators/gql-domain-id.decorator.ts","webpack://koj/./apps/koj/src/exceptions/exceptions.ts","webpack://koj/./apps/koj/src/grapqhl-scalar.ts","webpack://koj/./apps/koj/src/kafka/consumer.service.ts","webpack://koj/./apps/koj/src/kafka/kafka.module.ts","webpack://koj/./apps/koj/src/kafka/producer.service.ts","webpack://koj/./apps/koj/src/logger/logger.config.ts","webpack://koj/./apps/koj/src/logger/logger.module.ts","webpack://koj/./apps/koj/src/logger/logger.service.ts","webpack://koj/./apps/koj/src/middleware/domain.middleware.ts","webpack://koj/./apps/koj/src/middleware/logging.middleware.ts","webpack://koj/./apps/koj/src/middleware/trackip.middleware.ts","webpack://koj/./apps/koj/src/modules/auth/auth.controller.ts","webpack://koj/./apps/koj/src/modules/auth/auth.module.ts","webpack://koj/./apps/koj/src/modules/auth/auth.mutation.ts","webpack://koj/./apps/koj/src/modules/auth/auth.resolver.ts","webpack://koj/./apps/koj/src/modules/auth/auth.service.ts","webpack://koj/./apps/koj/src/modules/auth/auth.type.ts","webpack://koj/./apps/koj/src/modules/auth/dto/login.input.ts","webpack://koj/./apps/koj/src/modules/auth/dto/signup.input.ts","webpack://koj/./apps/koj/src/modules/auth/models/auth.model.ts","webpack://koj/./apps/koj/src/modules/auth/models/token.model.ts","webpack://koj/./apps/koj/src/modules/auth/provider/github.service.ts","webpack://koj/./apps/koj/src/modules/auth/provider/google.service.ts","webpack://koj/./apps/koj/src/modules/auth/strategies/jwt-refresh.strategy.ts","webpack://koj/./apps/koj/src/modules/auth/strategies/jwt.strategy.ts","webpack://koj/./apps/koj/src/modules/auth/strategies/local.strategy.ts","webpack://koj/./apps/koj/src/modules/casbin/casbin.constant.ts","webpack://koj/./apps/koj/src/modules/casbin/casbin.module.ts","webpack://koj/./apps/koj/src/modules/casbin/enforcer.provider.ts","webpack://koj/./apps/koj/src/modules/casbin/permisions.decorator.ts","webpack://koj/./apps/koj/src/modules/casbin/permission/permission.query.ts","webpack://koj/./apps/koj/src/modules/casbin/permission/permission.service.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/dto/find-by-role.dto.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/policy.module.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/policy.mutation.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/policy.resolver.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/policy.service.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/policy.type.ts","webpack://koj/./apps/koj/src/modules/casbin/policy/query/policy.query.ts","webpack://koj/./apps/koj/src/modules/casbin/role/ role.mutation.ts","webpack://koj/./apps/koj/src/modules/casbin/role/role.module.ts","webpack://koj/./apps/koj/src/modules/casbin/role/role.resolver.ts","webpack://koj/./apps/koj/src/modules/casbin/role/role.service.ts","webpack://koj/./apps/koj/src/modules/casbin/role/role.type.ts","webpack://koj/./apps/koj/src/modules/challenge/challenge.module.ts","webpack://koj/./apps/koj/src/modules/challenge/challenge.mutation.ts","webpack://koj/./apps/koj/src/modules/challenge/challenge.resolver.ts","webpack://koj/./apps/koj/src/modules/challenge/challenge.service.ts","webpack://koj/./apps/koj/src/modules/challenge/challenge.type.ts","webpack://koj/./apps/koj/src/modules/challenge/decode-base64.ts","webpack://koj/./apps/koj/src/modules/challenge/language.config.ts","webpack://koj/./apps/koj/src/modules/challenge/save-code.util.ts","webpack://koj/./apps/koj/src/modules/challenge/save-folder.util.ts","webpack://koj/./apps/koj/src/modules/challenge/save-testcase.util.ts","webpack://koj/./apps/koj/src/modules/challenge/transform-input.util.ts","webpack://koj/./apps/koj/src/modules/comment/comment-create.transaction.ts","webpack://koj/./apps/koj/src/modules/comment/comment.model.ts","webpack://koj/./apps/koj/src/modules/comment/comment.module.ts","webpack://koj/./apps/koj/src/modules/comment/comment.mutation.ts","webpack://koj/./apps/koj/src/modules/comment/comment.resolver.ts","webpack://koj/./apps/koj/src/modules/comment/comment.types.ts","webpack://koj/./apps/koj/src/modules/comment/dto/comment-create.input.ts","webpack://koj/./apps/koj/src/modules/comment/dto/comment-create.model.ts","webpack://koj/./apps/koj/src/modules/comment/dto/comment-vote.input.ts","webpack://koj/./apps/koj/src/modules/comment/dto/comment-where.input.ts","webpack://koj/./apps/koj/src/modules/domain/domain.module.ts","webpack://koj/./apps/koj/src/modules/domain/domain.service.ts","webpack://koj/./apps/koj/src/modules/group/group.module.ts","webpack://koj/./apps/koj/src/modules/group/group.mutation.ts","webpack://koj/./apps/koj/src/modules/group/group.resolver.ts","webpack://koj/./apps/koj/src/modules/group/group.service.ts","webpack://koj/./apps/koj/src/modules/group/group.type.ts","webpack://koj/./apps/koj/src/modules/post/dto/create-post.input.ts","webpack://koj/./apps/koj/src/modules/post/dto/update-post.input.ts","webpack://koj/./apps/koj/src/modules/post/post.module.ts","webpack://koj/./apps/koj/src/modules/post/post.mutation.ts","webpack://koj/./apps/koj/src/modules/post/post.resolver.ts","webpack://koj/./apps/koj/src/modules/post/post.service.ts","webpack://koj/./apps/koj/src/modules/post/post.type.ts","webpack://koj/./apps/koj/src/modules/role/dto/role-create.input.ts","webpack://koj/./apps/koj/src/modules/role/role.controller.ts","webpack://koj/./apps/koj/src/modules/role/role.module.ts","webpack://koj/./apps/koj/src/modules/role/role.mutation.ts","webpack://koj/./apps/koj/src/modules/role/role.resolver.ts","webpack://koj/./apps/koj/src/modules/role/role.service.ts","webpack://koj/./apps/koj/src/modules/submission-statistic/submission-statistic.module.ts","webpack://koj/./apps/koj/src/modules/submission-statistic/submission-statistic.mutation.ts","webpack://koj/./apps/koj/src/modules/submission-statistic/submission-statistic.resolver.ts","webpack://koj/./apps/koj/src/modules/submission-statistic/submission-statistic.type.ts","webpack://koj/./apps/koj/src/modules/submission/submission.module.ts","webpack://koj/./apps/koj/src/modules/submission/submission.mutation.ts","webpack://koj/./apps/koj/src/modules/submission/submission.resolver.ts","webpack://koj/./apps/koj/src/modules/submission/submission.type.ts","webpack://koj/./apps/koj/src/modules/user/dto/user-public.model.ts","webpack://koj/./apps/koj/src/modules/user/dto/user-where-unique.input.ts","webpack://koj/./apps/koj/src/modules/user/password.service.ts","webpack://koj/./apps/koj/src/modules/user/user.module.ts","webpack://koj/./apps/koj/src/modules/user/user.mutation.ts","webpack://koj/./apps/koj/src/modules/user/user.resolver.ts","webpack://koj/./apps/koj/src/modules/user/user.service.ts","webpack://koj/./apps/koj/src/modules/user/user.type.ts","webpack://koj/./apps/koj/src/saga/saga-builder.ts","webpack://koj/./apps/koj/src/saga/saga-processor.ts","webpack://koj/./apps/koj/src/tracing/tracer.ts","webpack://koj/./apps/koj/src/utils/crypto.util.ts","webpack://koj/./apps/koj/src/utils/database-query.ts","webpack://koj/./apps/koj/src/utils/string.util.ts","webpack://koj/./generated/challenge/challenge-count.output.ts","webpack://koj/./generated/challenge/challenge-create.input.ts","webpack://koj/./generated/challenge/challenge-list-relation-filter.input.ts","webpack://koj/./generated/challenge/challenge-order-by-with-relation.input.ts","webpack://koj/./generated/challenge/challenge-scalar-field.enum.ts","webpack://koj/./generated/challenge/challenge-slug-domain-id-compound-unique.input.ts","webpack://koj/./generated/challenge/challenge-update.input.ts","webpack://koj/./generated/challenge/challenge-where-unique.input.ts","webpack://koj/./generated/challenge/challenge-where.input.ts","webpack://koj/./generated/challenge/challenge.model.ts","webpack://koj/./generated/challenge/find-many-challenge.args.ts","webpack://koj/./generated/group/find-many-group.args.ts","webpack://koj/./generated/group/group-create.input.ts","webpack://koj/./generated/group/group-order-by-with-relation.input.ts","webpack://koj/./generated/group/group-scalar-field.enum.ts","webpack://koj/./generated/group/group-update.input.ts","webpack://koj/./generated/group/group-where-unique.input.ts","webpack://koj/./generated/group/group-where.input.ts","webpack://koj/./generated/group/group.model.ts","webpack://koj/./generated/policy/find-many-policy.args.ts","webpack://koj/./generated/policy/policy-create.input.ts","webpack://koj/./generated/policy/policy-order-by-with-relation.input.ts","webpack://koj/./generated/policy/policy-scalar-field.enum.ts","webpack://koj/./generated/policy/policy-update.input.ts","webpack://koj/./generated/policy/policy-where-unique.input.ts","webpack://koj/./generated/policy/policy-where.input.ts","webpack://koj/./generated/policy/policy.model.ts","webpack://koj/./generated/post/find-many-post.args.ts","webpack://koj/./generated/post/find-unique-post.args.ts","webpack://koj/./generated/post/post-order-by-with-relation.input.ts","webpack://koj/./generated/post/post-scalar-field.enum.ts","webpack://koj/./generated/post/post-where-unique.input.ts","webpack://koj/./generated/post/post-where.input.ts","webpack://koj/./generated/post/post.model.ts","webpack://koj/./generated/prisma/challenge-createaccepted-languages.input.ts","webpack://koj/./generated/prisma/challenge-createcompany-tags.input.ts","webpack://koj/./generated/prisma/challenge-updateaccepted-languages.input.ts","webpack://koj/./generated/prisma/challenge-updatecompany-tags.input.ts","webpack://koj/./generated/prisma/int-nullable-list-filter.input.ts","webpack://koj/./generated/prisma/json-nullable-filter.input.ts","webpack://koj/./generated/prisma/sort-order.enum.ts","webpack://koj/./generated/role-group/role-group-create.input.ts","webpack://koj/./generated/role-group/role-group-update.input.ts","webpack://koj/./generated/role-group/role-group-where-unique.input.ts","webpack://koj/./generated/role-group/role-group.model.ts","webpack://koj/./generated/role/find-many-role.args.ts","webpack://koj/./generated/role/role-create.input.ts","webpack://koj/./generated/role/role-order-by-with-relation.input.ts","webpack://koj/./generated/role/role-scalar-field.enum.ts","webpack://koj/./generated/role/role-update.input.ts","webpack://koj/./generated/role/role-where-unique.input.ts","webpack://koj/./generated/role/role-where.input.ts","webpack://koj/./generated/role/role.model.ts","webpack://koj/./generated/submission-statistic/find-many-submission-statistic.args.ts","webpack://koj/./generated/submission-statistic/submission-statistic-created-by-id-challenge-id-compound-unique.input.ts","webpack://koj/./generated/submission-statistic/submission-statistic-order-by-with-relation.input.ts","webpack://koj/./generated/submission-statistic/submission-statistic-scalar-field.enum.ts","webpack://koj/./generated/submission-statistic/submission-statistic-where-unique.input.ts","webpack://koj/./generated/submission-statistic/submission-statistic-where.input.ts","webpack://koj/./generated/submission-statistic/submission-statistic.model.ts","webpack://koj/./generated/submission/find-many-submission.args.ts","webpack://koj/./generated/submission/submission-order-by-with-relation.input.ts","webpack://koj/./generated/submission/submission-scalar-field.enum.ts","webpack://koj/./generated/submission/submission-where-unique.input.ts","webpack://koj/./generated/submission/submission-where.input.ts","webpack://koj/./generated/submission/submission.model.ts","webpack://koj/./generated/topic-tag/topic-tag-count.output.ts","webpack://koj/./generated/topic-tag/topic-tag-create-nested-many-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-create-or-connect-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-create-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-list-relation-filter.input.ts","webpack://koj/./generated/topic-tag/topic-tag-order-by-relation-aggregate.input.ts","webpack://koj/./generated/topic-tag/topic-tag-scalar-where.input.ts","webpack://koj/./generated/topic-tag/topic-tag-update-many-mutation.input.ts","webpack://koj/./generated/topic-tag/topic-tag-update-many-with-where-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-update-many-without-challenges-nested.input.ts","webpack://koj/./generated/topic-tag/topic-tag-update-with-where-unique-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-update-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-upsert-with-where-unique-without-challenges.input.ts","webpack://koj/./generated/topic-tag/topic-tag-where-unique.input.ts","webpack://koj/./generated/topic-tag/topic-tag-where.input.ts","webpack://koj/./generated/topic-tag/topic-tag.model.ts","webpack://koj/./generated/user/find-many-user.args.ts","webpack://koj/./generated/user/user-create.input.ts","webpack://koj/./generated/user/user-email-domain-id-compound-unique.input.ts","webpack://koj/./generated/user/user-order-by-with-relation.input.ts","webpack://koj/./generated/user/user-scalar-field.enum.ts","webpack://koj/./generated/user/user-update.input.ts","webpack://koj/./generated/user/user-username-domain-id-compound-unique.input.ts","webpack://koj/./generated/user/user-where-unique.input.ts","webpack://koj/./generated/user/user-where.input.ts","webpack://koj/./generated/user/user.model.ts","webpack://koj/./libs/adapter/src/index.ts","webpack://koj/./libs/adapter/src/lib/adapter.module.ts","webpack://koj/./libs/adapter/src/lib/adapter.service.ts","webpack://koj/./libs/code-executor/src/Builder.ts","webpack://koj/./libs/code-executor/src/CodeExecutor.ts","webpack://koj/./libs/code-executor/src/Runner.ts","webpack://koj/./libs/code-executor/src/Worker.ts","webpack://koj/./libs/code-executor/src/index.ts","webpack://koj/./libs/code-executor/src/utils/findExtension.ts","webpack://koj/./libs/code-executor/src/utils/getOutput.ts","webpack://koj/./libs/code-executor/src/utils/logger.ts","webpack://koj/./libs/code-executor/src/utils/saveCode.ts","webpack://koj/./libs/code-executor/src/utils/writeToFile.ts","webpack://koj/./libs/code-gen/src/configs/constants.ts","webpack://koj/./libs/code-gen/src/index.ts","webpack://koj/./libs/code-gen/src/languages/cplusplus.ts","webpack://koj/./libs/code-gen/src/languages/javascript.ts","webpack://koj/./libs/code-gen/src/languages/output.ts","webpack://koj/./libs/code-gen/src/languages/python.ts","webpack://koj/./libs/code-gen/src/types.ts","webpack://koj/./libs/code-gen/src/utils/jsTemplate.ts","webpack://koj/./libs/code-gen/src/utils/keywords.ts","webpack://koj/./libs/code-gen/src/utils/utils.ts","webpack://koj/./libs/common/constants/src/index.ts","webpack://koj/./libs/common/constants/src/lib/casbin.constant.ts","webpack://koj/./libs/common/constants/src/lib/message-partern.constant.ts","webpack://koj/./libs/common/constants/src/lib/runner.constant.ts","webpack://koj/./libs/common/dto/src/challenge/challenge-find-many.args.ts","webpack://koj/./libs/common/dto/src/challenge/challenge-submit-result.model.ts","webpack://koj/./libs/common/dto/src/challenge/challenge-submit.input.ts","webpack://koj/./libs/common/dto/src/challenge/challenge-where-unique.input.ts","webpack://koj/./libs/common/dto/src/challenge/index.ts","webpack://koj/./libs/common/dto/src/index.ts","webpack://koj/./libs/common/guards/src/index.ts","webpack://koj/./libs/common/guards/src/lib/github.guard.ts","webpack://koj/./libs/common/guards/src/lib/google.guard.ts","webpack://koj/./libs/common/guards/src/lib/gql-auth.guard.ts","webpack://koj/./libs/common/guards/src/lib/local.guard.ts","webpack://koj/./libs/common/guards/src/lib/policy.guard.ts","webpack://koj/./libs/common/guards/src/lib/refresh-token.guard.ts","webpack://koj/./libs/common/interfaces/src/index.ts","webpack://koj/./libs/common/interfaces/src/lib/auth-module-options.interface.ts","webpack://koj/./libs/common/interfaces/src/lib/config.interface.ts","webpack://koj/./libs/common/interfaces/src/lib/jwt.interface.ts","webpack://koj/./libs/common/interfaces/src/lib/permission.interface.ts","webpack://koj/./libs/common/interfaces/src/lib/types.ts","webpack://koj/./libs/common/interfaces/src/lib/user.interface.ts","webpack://koj/./libs/common/strategies/src/index.ts","webpack://koj/./libs/common/strategies/src/lib/github.strategy.ts","webpack://koj/./libs/common/strategies/src/lib/google.strategy.ts","webpack://koj/./libs/common/strategies/src/lib/jwt-refresh.strategy.ts","webpack://koj/./libs/common/strategies/src/lib/jwt.strategy.ts","webpack://koj/./libs/common/utils/src/index.ts","webpack://koj/./libs/common/utils/src/lib/common.util.ts","webpack://koj/./libs/common/utils/src/lib/crypto.util.ts","webpack://koj/./libs/common/utils/src/lib/database-query.util.ts","webpack://koj/./libs/common/utils/src/lib/fs.util.ts","webpack://koj/./libs/common/utils/src/lib/policy.util.ts","webpack://koj/./libs/common/utils/src/lib/string.util.ts","webpack://koj/./libs/instrumentation/src/RpcContextPropagator.ts","webpack://koj/./libs/instrumentation/src/decorator/span.decorator.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/enum.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/symbols.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/types.ts","webpack://koj/./libs/instrumentation/src/graphql/instrumentation.ts","webpack://koj/./libs/instrumentation/src/graphql/utils.ts","webpack://koj/./libs/instrumentation/src/graphql/version.ts","webpack://koj/./libs/instrumentation/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/mongoose.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/types.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/utils.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/version.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/index.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/type.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/instrumentation.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/version.ts","webpack://koj/./libs/instrumentation/src/trace/query-to-path.ts","webpack://koj/./libs/instrumentation/src/trace/store-context.ts","webpack://koj/./libs/instrumentation/src/trace/trace-client.proxy.ts","webpack://koj/./libs/instrumentation/src/trace/trace.interceptor.ts","webpack://koj/./libs/instrumentation/src/utils.ts","webpack://koj/external commonjs \"@liaoliaots/nestjs-redis\"","webpack://koj/external commonjs \"@nestjs/apollo\"","webpack://koj/external commonjs \"@nestjs/common\"","webpack://koj/external commonjs \"@nestjs/config\"","webpack://koj/external commonjs \"@nestjs/core\"","webpack://koj/external commonjs \"@nestjs/graphql\"","webpack://koj/external commonjs \"@nestjs/jwt\"","webpack://koj/external commonjs \"@nestjs/microservices\"","webpack://koj/external commonjs \"@nestjs/passport\"","webpack://koj/external commonjs \"@opentelemetry/api\"","webpack://koj/external commonjs \"@opentelemetry/core\"","webpack://koj/external commonjs \"@opentelemetry/instrumentation\"","webpack://koj/external commonjs \"@opentelemetry/semantic-conventions\"","webpack://koj/external commonjs \"@paljs/plugins\"","webpack://koj/external commonjs \"@prisma/client\"","webpack://koj/external commonjs \"@supercharge/request-ip\"","webpack://koj/external commonjs \"apollo-server-core\"","webpack://koj/external commonjs \"apollo-server-express\"","webpack://koj/external commonjs \"bcrypt\"","webpack://koj/external commonjs \"bull\"","webpack://koj/external commonjs \"casbin\"","webpack://koj/external commonjs \"class-validator\"","webpack://koj/external commonjs \"cookie-parser\"","webpack://koj/external commonjs \"del\"","webpack://koj/external commonjs \"dockerode\"","webpack://koj/external commonjs \"express\"","webpack://koj/external commonjs \"expression-eval\"","webpack://koj/external commonjs \"graphql\"","webpack://koj/external commonjs \"graphql-type-json\"","webpack://koj/external commonjs \"ioredis\"","webpack://koj/external commonjs \"kafkajs\"","webpack://koj/external commonjs \"memory-streams\"","webpack://koj/external commonjs \"nanoid\"","webpack://koj/external commonjs \"nestjs-otel\"","webpack://koj/external commonjs \"nestjs-pino\"","webpack://koj/external commonjs \"nestjs-prisma\"","webpack://koj/external commonjs \"passport-github2\"","webpack://koj/external commonjs \"passport-google-oauth20\"","webpack://koj/external commonjs \"passport-jwt\"","webpack://koj/external commonjs \"passport-local\"","webpack://koj/external commonjs \"pino\"","webpack://koj/external commonjs \"pino-pretty\"","webpack://koj/external commonjs \"rxjs\"","webpack://koj/external commonjs \"slugify\"","webpack://koj/external commonjs \"tslib\"","webpack://koj/external commonjs \"uuid\"","webpack://koj/external node-commonjs \"async_hooks\"","webpack://koj/external node-commonjs \"crypto\"","webpack://koj/external node-commonjs \"fs\"","webpack://koj/external node-commonjs \"fs/promises\"","webpack://koj/external node-commonjs \"path\"","webpack://koj/external node-commonjs \"perf_hooks\"","webpack://koj/external node-commonjs \"worker_threads\"","webpack://koj/webpack/bootstrap","webpack://koj/./apps/koj/src/main.ts"],"sourcesContent":["import { Controller, Get, Req } from '@nestjs/common';\n\nimport { AppService } from './app.service';\nimport { PinoLogger } from 'nestjs-pino';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private readonly logger: PinoLogger,\n  ) {}\n\n  @Get('/')\n  getData(@Req() req) {\n    this.logger.info('hello controllere');\n    return this.appService.getData();\n  }\n}\n","import { MiddlewareConsumer, Module, NestModule } from \"@nestjs/common\";\nimport { PrismaModule } from \"nestjs-prisma\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { GraphQLModule } from \"@nestjs/graphql\";\nimport { RedisModule } from \"@liaoliaots/nestjs-redis\";\nimport { ApolloDriver, ApolloDriverConfig } from \"@nestjs/apollo\";\nimport { OpenTelemetryModule } from \"nestjs-otel\";\n\nimport config from \"@/configs/config\";\nimport { GqlConfig } from \"@/configs/graphql.config\";\nimport { LoggerModule } from \"@/logger/logger.module\";\nimport trackIpMiddleware from \"@/middleware/trackip.middleware\";\nimport { loggingMiddleware } from \"@/middleware/logging.middleware\";\n\nimport { AppService } from \"./app.service\";\nimport { AppController } from \"./app.controller\";\nimport { RoleModule } from \"../modules/role/role.module\";\nimport { UserModule } from \"../modules/user/user.module\";\nimport { PostModule } from \"../modules/post/post.module\";\nimport { AuthModule } from \"../modules/auth/auth.module\";\nimport { GroupModule } from \"../modules/group/group.module\";\nimport { RoleController } from \"../modules/role/role.controller\";\nimport { ChallengeModule } from \"../modules/challenge/challenge.module\";\nimport { RoleGroupModule } from \"../modules/casbin/role/role.module\";\nimport { PolicyModule } from \"../modules/casbin/policy/policy.module\";\nimport { DomainModule } from \"@/modules/domain/domain.module\";\nimport { CommentModule } from \"../modules/comment/comment.module\";\nimport { DomainMiddleware } from \"@/middleware/domain.middleware\";\nimport { KafkaModule } from \"@/kafka/kafka.module\";\nimport { DateScalar } from \"@/grapqhl-scalar\";\nimport { SubmissionModule } from \"@/modules/submission/submission.module\";\nimport { SubmissionStatisticModule } from \"@/modules/submission-statistic/submission-statistic.module\";\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({ isGlobal: true, load: [config] }),\n    PrismaModule.forRootAsync({\n      isGlobal: true,\n      useFactory: () => ({\n        prismaOptions: { log: [\"info\", \"query\"], errorFormat: \"minimal\" },\n        middlewares: [loggingMiddleware()]\n      })\n    }),\n    GraphQLModule.forRootAsync<ApolloDriverConfig>({\n      driver: ApolloDriver,\n      useClass: GqlConfig\n    }),\n    OpenTelemetryModule.forRoot(),\n    RedisModule.forRoot({\n      config: {\n        host: \"localhost\",\n        port: 6379\n      }\n    }),\n    LoggerModule,\n    KafkaModule,\n    AuthModule,\n\n    RoleModule,\n    UserModule,\n    PostModule,\n    ChallengeModule,\n    GroupModule,\n    PolicyModule,\n    RoleGroupModule,\n    DomainModule,\n    CommentModule,\n    SubmissionModule,\n    SubmissionStatisticModule\n  ],\n  controllers: [AppController, RoleController],\n  providers: [\n    AppService,\n    DateScalar\n    // {\n    //   provide: APP_INTERCEPTOR,\n    //   useClass: ErrorsInterceptor,\n    // },\n  ]\n})\nexport class AppModule implements NestModule {\n  configure(consumer: MiddlewareConsumer) {\n    consumer.apply(trackIpMiddleware, DomainMiddleware).forRoutes(\"*\");\n  }\n}\n","import { tracer } from '@/tracing/tracer';\nimport { Injectable, NotImplementedException } from '@nestjs/common';\nimport { trace, context } from '@opentelemetry/api';\n\n@Injectable()\nexport class AppService {\n  getData(): { message: string; result: any } {\n    // throw new NotImplementedException({ message: 'heelo', level: 1 });\n    const result = this.testError(1);\n    return { message: 'hello', result };\n    // return { message: 'Welcome to koj!' };\n  }\n\n  testError(a) {\n    return tracer.startActiveSpan('hello', (span) => {\n      try {\n        if (a) {\n          const error = new NotImplementedException({ message: 'test error' });\n          span.recordException(error);\n          throw error;\n        }\n        return 'ok';\n      } finally {\n        span.end();\n      }\n    });\n  }\n}\n","import { join } from 'path';\nimport type { Config } from '@/interfaces/config.interface';\n\nconst config: Config = {\n  app: {\n    port: parseInt(process.env.PORT, 10) || 3000,\n    cors: {\n      enabled: true,\n    },\n    globalPrefix: 'api',\n  },\n  swagger: {\n    enabled: true,\n    title: 'Nestjs FTW',\n    description: 'The nestjs API description',\n    version: '1.5',\n    path: 'api',\n  },\n  graphql: {\n    path: 'api/graphql',\n    playgroundEnabled: false,\n    debug: true,\n    schemaDestination: join(__dirname, 'src/schema.gql'),\n    sortSchema: true,\n  },\n  security: {\n    expiresIn: '15d',\n    refreshIn: '7d',\n    bcryptSaltOrRound: 10,\n  },\n};\n\nexport default (): Config => config;\n","import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { ApolloDriverConfig } from \"@nestjs/apollo\";\nimport { GqlOptionsFactory } from \"@nestjs/graphql\";\nimport { ApolloServerPluginLandingPageLocalDefault } from \"apollo-server-core\";\n\nimport { GraphqlConfig } from \"@/interfaces/config.interface\";\nimport { tracer } from \"@/tracing/tracer\";\nimport { trace, context } from \"@opentelemetry/api\";\nimport { GraphQLDateTime } from \"graphql-iso-date\";\n\n@Injectable()\nexport class GqlConfig implements GqlOptionsFactory {\n  constructor(private configService: ConfigService) {}\n  createGqlOptions(): ApolloDriverConfig {\n    const graphqlConfig = this.configService.get<GraphqlConfig>(\"graphql\");\n    return {\n      path: graphqlConfig.path,\n      // schema options\n      autoSchemaFile: graphqlConfig.schemaDestination || \"./src/schema.graphql\",\n      sortSchema: graphqlConfig.sortSchema,\n      buildSchemaOptions: {\n        numberScalarMode: \"integer\"\n      },\n      fieldResolverEnhancers: [\"guards\", \"interceptors\", \"filters\"],\n      // subscription\n      installSubscriptionHandlers: true,\n      debug: graphqlConfig.debug,\n      stopOnTerminationSignals: true,\n      plugins: [ApolloServerPluginLandingPageLocalDefault()],\n      playground: graphqlConfig.playgroundEnabled,\n      cors: {\n        credentials: true,\n        origin: true\n        // methods: 'GET,HEAD,PUT,PATCH,POST,DELETE,OPTIONS',\n        // allowedHeaders: \"Content-Type,Accept,Authorization,Access-Control-Allow-Origin\"\n      },\n      // resolvers: { DateTime: GraphQLDateTime },\n      context: ({ req, res }) => ({ req, res }),\n      formatError(error) {\n        console.log(\n          \"🚀 ~ file: graphql.config.ts ~ line 37 ~ GqlConfig ~ formatError ~ err\",\n          error,\n          error.extensions.exception\n        );\n\n        // From handled exception\n        if (error.extensions.response?.statusCode) {\n          return error;\n        }\n\n        const span = tracer.startSpan(\"exception\");\n        trace.setSpan(context.active(), span);\n        span.recordException(error);\n        span.setAttributes({\n          exceptionLevel: \"validate\"\n        });\n        span.end();\n\n        if (error.extensions?.exception?.stacktrace) {\n          delete error.extensions.exception.stacktrace;\n        }\n        return error;\n      }\n    };\n  }\n}\n","export const natsConfig = {\n  servers: [process.env.NATS_URL || 'nats://localhost:4222'],\n};\n","import { GqlExecutionContext } from '@nestjs/graphql';\nimport { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport const GqlContext = createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const gqlCtx = GqlExecutionContext.create(ctx);\n  const request = gqlCtx.getContext().req;\n  return request.context;\n});\n","import { GqlExecutionContext } from '@nestjs/graphql';\nimport { createParamDecorator, ExecutionContext } from '@nestjs/common';\n\nexport const DomainId = createParamDecorator((data: unknown, ctx: ExecutionContext) => {\n  const gqlCtx = GqlExecutionContext.create(ctx);\n  const request = gqlCtx.getContext().req;\n  return request.domainId;\n});\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unused-vars */\nimport { tracer } from '@/tracing/tracer';\nimport {\n  ExceptionFilter,\n  Catch,\n  ArgumentsHost,\n  HttpException,\n  HttpStatus,\n  InternalServerErrorException,\n  BadRequestException,\n  ConflictException,\n} from '@nestjs/common';\n\nimport { GqlExceptionFilter, GqlContextType } from '@nestjs/graphql';\nimport { context, trace } from '@opentelemetry/api';\nimport { Prisma } from '@prisma/client';\n\nconst defaultInternalException = {\n  message: 'Co loi tu he thong',\n  statusCode: HttpStatus.INTERNAL_SERVER_ERROR,\n  level: 'error',\n};\n\n@Catch()\nexport class AllExceptionsFilter implements ExceptionFilter, GqlExceptionFilter {\n  catch(exception: any, host: ArgumentsHost) {\n    const span = tracer.startSpan('exception');\n    trace.setSpan(context.active(), span);\n    span.recordException(exception);\n\n    console.log(\n      '🚀 ~ file: exceptions.ts ~ line 18 ~ AllExceptionsFilter ~ exception',\n      exception,\n    );\n\n    if (exception instanceof Prisma.PrismaClientValidationError) {\n      exception = new BadRequestException(exception.message);\n    }\n\n    if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n      if (exception.code === 'P2002') {\n        exception = new ConflictException('Resource already exist');\n      } else {\n        exception = new InternalServerErrorException({\n          ...defaultInternalException,\n          info: exception.code,\n        });\n      }\n    }\n\n    // Internal error . Only http exception have getStatus\n    if (!exception.getStatus) {\n      exception = new InternalServerErrorException(defaultInternalException);\n    }\n    const ctx = host.switchToHttp();\n    const statusCode = exception.getStatus();\n\n    if (host.getType<GqlContextType>() === 'graphql') {\n      // Graphql must include statusCode in exception to exclude stacktrace\n      const { level = 'unset', ...execptionResponse } = exception.getResponse();\n      execptionResponse.statusCode = statusCode;\n      span.setAttributes({\n        exceptionLevel: level,\n      });\n      span.end();\n      return new HttpException(execptionResponse, statusCode);\n    }\n\n    const { level = 'unset', ...execptionResponse } = exception.getResponse();\n    const response = ctx.getResponse();\n    span.setAttributes({\n      exceptionLevel: level,\n    });\n    span.end();\n    return response.status(statusCode).json(execptionResponse);\n  }\n}\n","import { Scalar, CustomScalar } from '@nestjs/graphql';\nimport { Kind, ValueNode } from 'graphql';\n\n@Scalar('Date', (type) => Date)\nexport class DateScalar implements CustomScalar<Date, Date> {\n  description = 'Date custom scalar type';\n\n  parseValue(value: number): Date {\n    return new Date(value); // value from the client\n  }\n\n  serialize(value: Date) {\n    return value; // value sent to the client\n  }\n\n  parseLiteral(ast: ValueNode): Date {\n    if (ast.kind === Kind.INT) {\n      return new Date(ast.value);\n    }\n    return null;\n  }\n}\n","import { Injectable, OnApplicationShutdown } from '@nestjs/common';\nimport { Consumer, ConsumerRunConfig, ConsumerSubscribeTopics, Kafka } from 'kafkajs';\n\n@Injectable()\nexport class ConsumerService implements OnApplicationShutdown {\n  private readonly kafka = new Kafka({\n    brokers: ['localhost:29092'],\n  });\n  readonly consumers: Consumer[] = [];\n  private readonly HEARTBEAT_CHECK_INTERVAL = 30000;\n\n  async consume(topic: ConsumerSubscribeTopics, config: ConsumerRunConfig) {\n    const lastHeartbeat = { date: new Date() };\n    const consumer = this.kafka.consumer({\n      groupId: 'nestjs-kafka',\n      heartbeatInterval: 15000,\n    });\n\n    consumer.on('consumer.heartbeat', () => {\n      lastHeartbeat.date = new Date();\n    });\n    consumer.on('consumer.disconnect', () => {\n      this.startHeartbeatCheck(lastHeartbeat, consumer, topic, config);\n    });\n\n    await consumer.connect();\n    await consumer.subscribe(topic);\n    await consumer.run(config);\n\n    this.consumers.push(consumer);\n  }\n\n  startHeartbeatCheck(lastHeartbeat, consumer: Consumer, topic, config) {\n    const interval = setInterval(async () => {\n      const now = new Date();\n      const heartbBeat =\n        lastHeartbeat.date.getTime() < now.getTime() - this.HEARTBEAT_CHECK_INTERVAL;\n\n      if (heartbBeat) {\n        console.log(`Last heartbeat was at ${lastHeartbeat.date}`);\n        try {\n          await consumer.connect();\n          await consumer.subscribe(topic);\n\n          clearInterval(interval);\n\n          await consumer.run(config);\n          lastHeartbeat.date = new Date();\n        } catch (error) {\n          console.log(error);\n        }\n        console.log('affter re-connect');\n      }\n    }, this.HEARTBEAT_CHECK_INTERVAL);\n  }\n\n  async onApplicationShutdown() {\n    for (const consumer of this.consumers) {\n      await consumer.disconnect();\n    }\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { ConsumerService } from './consumer.service';\nimport { ProducerService } from './producer.service';\n\n@Module({\n  providers: [ProducerService, ConsumerService],\n  exports: [ProducerService, ConsumerService],\n})\nexport class KafkaModule {}\n","import {\n  Injectable,\n  OnApplicationShutdown,\n  OnModuleInit,\n} from '@nestjs/common';\nimport { Kafka, Producer, ProducerRecord } from 'kafkajs';\n\n@Injectable()\nexport class ProducerService implements OnModuleInit, OnApplicationShutdown {\n  private readonly kafka = new Kafka({\n    brokers: ['localhost:29092'],\n  });\n  private readonly producer: Producer = this.kafka.producer();\n\n  async onModuleInit() {\n    await this.producer.connect();\n  }\n\n  async produce(record: ProducerRecord) {\n    await this.producer.send(record);\n  }\n\n  async onApplicationShutdown() {\n    await this.producer.disconnect();\n  }\n}\n","import Pino, { Logger } from 'pino';\nimport { LoggerOptions, destination } from 'pino';\nimport { trace, context } from '@opentelemetry/api';\n\nexport const loggerOptions: LoggerOptions = {\n  level: 'info',\n  timestamp: () => `,\"@timestamp\":\"${new Date().toISOString()}\"`,\n  formatters: {\n    level(label) {\n      return { level: label };\n    },\n    log(object) {\n      const span = trace.getSpan(context.active());\n      if (!span) return { ...object };\n      const { spanId, traceId, traceFlags } = span.spanContext();\n      return { ...object, spanId, traceId, traceFlags };\n    },\n  },\n};\n\nexport const logger: Logger = Pino(\n  loggerOptions,\n  destination(__dirname + process.env.LOG_FILE_NAME),\n);\n","import { Module, RequestMethod } from '@nestjs/common';\nimport { LoggerModule as PinoLoggerModule, PinoLogger } from 'nestjs-pino';\n\nimport { logger } from './logger.config';\nimport { Logger } from './logger.service';\n\n@Module({\n  imports: [\n    PinoLoggerModule.forRoot({\n      pinoHttp: {\n        logger: logger,\n        autoLogging: false,\n        customProps: function (req) {\n          return {\n            ip: req.userIp || '',\n          };\n        },\n      },\n      forRoutes: ['*'],\n      exclude: [{ method: RequestMethod.ALL, path: '/health' }],\n    }),\n  ],\n  providers: [Logger, PinoLogger],\n  exports: [Logger, PinoLogger],\n})\nexport class LoggerModule {}\n","import { PinoLogger } from 'nestjs-pino';\n\nexport class Logger extends PinoLogger {}\n","import { DomainService } from '@/modules/domain/domain.service';\nimport { Injectable, NestMiddleware, NotFoundException } from '@nestjs/common';\n\n@Injectable()\nexport class DomainMiddleware implements NestMiddleware {\n  constructor(private readonly domain: DomainService) {}\n  async use(req, res, next) {\n    const host = req.headers['x-domain'] || req.hostname;\n    const domain = await this.domain.getDomainFromHost(host);\n\n    if (!domain) {\n      throw new NotFoundException('khong co domain id');\n    }\n    req.domainId = domain.id;\n    next();\n  }\n}\n","import { Prisma } from '@prisma/client';\n\nexport function loggingMiddleware(): Prisma.Middleware {\n  return async (params, next) => {\n    const before = Date.now();\n\n    const result = await next(params);\n\n    const after = Date.now();\n\n    const identity = params.model\n      ? `${params.model}.${params.action}`\n      : `${params.action}`;\n\n    console.log(`Prisma Query ${identity} took ${after - before}ms`);\n\n    return result;\n  };\n}\n\nexport function minifyString(string: string) {\n  return string.replace(/\\s+/g, ' ').trim();\n}\n","import { getClientIp } from '@supercharge/request-ip';\n\nexport default function trackIpMiddleware(req, res, next) {\n  const ip = getClientIp(req);\n  req.userIp = ip;\n  next();\n}\n","import {\n  Controller,\n  Post,\n  Body,\n  HttpCode,\n  UseGuards,\n  Get,\n  Req,\n  Res\n} from \"@nestjs/common\";\nimport { User } from \"@prisma/client\";\nimport { UserService } from \"../user/user.service\";\nimport { AuthService } from \"./auth.service\";\nimport {\n  GithubGuard,\n  JwtRefreshGuard,\n  LocalAuthGuard\n} from \"@koj/common/guards\";\nimport { Request } from \"express\";\nimport { PermissionService } from \"../casbin/permission/permission.service\";\nimport { GoogleService } from \"./provider/google.service\";\nimport { GithubService } from \"./provider/github.service\";\n\nexport interface UserCustom extends User {\n  userId?: number;\n}\n\n// type User = Omit<PrismaUser, 'id'> & { 'userId' : number}\n\nexport interface RequestWithUser extends Request {\n  user: User;\n}\n\n@Controller(\"auth\")\nexport class AuthController {\n  constructor(\n    private authService: AuthService,\n    private userService: UserService,\n    private githubService: GithubService,\n    private googleService: GoogleService,\n    private readonly permissionSerivce: PermissionService\n  ) {}\n\n  //   @Post('register')\n  //   async register(@Body() registrationData: RegisterDto) {\n  //     await this.authService.register(registrationData);\n  //     // await this.emailConfirmService.sendVerificationLink(registrationData.email);\n  //   }\n\n  @HttpCode(200)\n  // @UseGuards(EmailConfirmGuard)\n  @UseGuards(LocalAuthGuard)\n  @Post(\"login\")\n  async logIn(@Req() request: RequestWithUser) {\n    const { user } = request;\n    return this.authService.login(user, request);\n  }\n\n  @Get(\"refresh\")\n  @UseGuards(JwtRefreshGuard)\n  async refresh(@Req() request: RequestWithUser) {\n    const $user = request.user as UserCustom;\n    const user = (await this.userService.findUnique({\n      id: $user.userId\n    })) as UserCustom;\n\n    const [accessToken, refreshToken] = await this.authService.generateToken(\n      user\n    );\n\n    const [accessTokenHeader, accessTokenPayload, accessTokenSignature] =\n      accessToken.split(\".\");\n    const [refreshTokenHeader, refreshTokenPayload, refreshTokenSignature] =\n      refreshToken.split(\".\");\n\n    const accessTokenCookieOptions =\n      this.authService.getJwtAccessTokenOptions();\n    const refreshTokenCookieOptions =\n      this.authService.getJwtRefreshTokenOptions();\n\n    request.res.cookie(\n      \"a_sign\",\n      accessTokenSignature,\n      accessTokenCookieOptions\n    );\n    request.res.cookie(\n      \"r_sign\",\n      refreshTokenSignature,\n      refreshTokenCookieOptions\n    );\n    request.res.cookie(\"a_header\", accessTokenHeader, accessTokenCookieOptions);\n    request.res.cookie(\n      \"r_header\",\n      refreshTokenHeader,\n      refreshTokenCookieOptions\n    );\n\n    return {\n      accessTokenPayload,\n      refreshTokenPayload\n    };\n  }\n\n  @Post(\"google\")\n  async googleAuth(@Body() data, @Req() request) {\n    return this.googleService.authWithGoogle(data, request);\n  }\n\n  @Get(\"github/callback\")\n  @UseGuards(GithubGuard)\n  async githubAuthRedirect(@Req() req: Request) {\n    // return req.user;\n    return this.githubService.authWithGithub(req);\n  }\n}\n","import { JwtModule } from '@nestjs/jwt';\nimport { ConfigService } from '@nestjs/config';\nimport { PassportModule } from '@nestjs/passport';\nimport { ExecutionContext, Module } from '@nestjs/common';\n\nimport { SecurityConfig } from '@/interfaces/config.interface';\n\nimport { AuthService } from './auth.service';\nimport { AuthResolver } from './auth.resolver';\nimport { UserService } from '../user/user.service';\nimport { CasbinModule } from '../casbin/casbin.module';\nimport { GithubGuard, GoogleOauthGuard, GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { AuthMutationsResolver } from './auth.mutation';\nimport { JwtStrategy } from './strategies/jwt.strategy';\nimport { PasswordService } from '../user/password.service';\nimport { enforcerProvider } from '../casbin/enforcer.provider';\nimport { AuthController } from './auth.controller';\nimport { JwtRefreshTokenStrategy } from './strategies/jwt-refresh.strategy';\nimport { LocalStrategy } from './strategies/local.strategy';\nimport { LoggerModule } from '@/logger/logger.module';\nimport { Githubstrategy, GoogleAuthStrategy } from '@koj/common/strategies';\nimport { GoogleService } from './provider/google.service';\nimport { GithubService } from './provider/github.service';\n\n@Module({\n  imports: [\n    PassportModule.register({ defaultStrategy: 'jwt' }),\n    JwtModule.registerAsync({\n      useFactory: async (configService: ConfigService) => {\n        const securityConfig = configService.get<SecurityConfig>('security');\n        return {\n          secret: configService.get<string>('JWT_ACCESS_SECRET'),\n          signOptions: {\n            expiresIn: securityConfig.expiresIn,\n          },\n        };\n      },\n      inject: [ConfigService],\n    }),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error('Function not implemented.');\n      },\n    }),\n    LoggerModule,\n  ],\n  providers: [\n    AuthService,\n    AuthResolver,\n    AuthMutationsResolver,\n    JwtStrategy,\n    JwtRefreshTokenStrategy,\n    LocalStrategy,\n    // GoogleAuthStrategy,\n    // GoogleOauthGuard,\n    Githubstrategy,\n    GithubGuard,\n    GqlAuthGuard,\n    GqlPolicyGuard,\n    PasswordService,\n    UserService,\n    GoogleService,\n    GithubService\n  ],\n  controllers: [AuthController],\n  exports: [GqlAuthGuard, GqlPolicyGuard],\n})\nexport class AuthModule {}\n","import { Args, Resolver, ResolveField, Context } from '@nestjs/graphql';\n\nimport { Auth } from './models/auth.model';\nimport { Token } from './models/token.model';\n\nimport { AuthMutations } from './auth.type';\nimport { AuthService } from './auth.service';\n\nimport { LoginInput } from './dto/login.input';\nimport { SignupInput } from './dto/signup.input';\nimport { RefreshTokenInput } from './dto/refresh-token.input';\nimport { PermissionService } from '../casbin/permission/permission.service';\nimport { Req } from '@nestjs/common';\nimport { DomainId } from '@/decorators/gql-domain-id.decorator';\nimport { User } from '@koj/generated/user/user.model';\n\n@Resolver(() => AuthMutations)\nexport class AuthMutationsResolver {\n  constructor(\n    private readonly authService: AuthService,\n    private readonly permissionService: PermissionService,\n  ) {}\n\n  @ResolveField(() => User)\n  async register(@Args('data') data: SignupInput, @DomainId() domainId) {\n    data.email = data.email.toLowerCase();\n    data.domainId = domainId;\n    return await this.authService.register(data);\n  }\n\n  @ResolveField(() => Auth)\n  async login(@Args('data') { email, password }: LoginInput, @Context('req') request) {\n    const user = await this.authService.getAuthenticatedUser(\n      email.toLowerCase(),\n      password,\n      request.domainId,\n    );\n    const [accessToken, refreshToken] = await this.authService.generateToken(user);\n    console.log(\n      '🚀 ~ file: auth.mutation.ts ~ line 39 ~ AuthMutationsResolver ~ login ~ accessToken',\n      accessToken,\n    );\n    const permissions = await this.permissionService.getPermissionForUser(user);\n\n    const [accessTokenHeader, accessTokenPayload, accessTokenSignature] =\n      accessToken.split('.');\n    const [refreshTokenHeader, refreshTokenPayload, refreshTokenSignature] =\n      refreshToken.split('.');\n\n    const accessTokenCookieOptions = this.authService.getJwtAccessTokenOptions();\n    const refreshTokenCookieOptions = this.authService.getJwtRefreshTokenOptions();\n\n    request.res.cookie('a_sign', accessTokenSignature, accessTokenCookieOptions);\n    request.res.cookie('r_sign', refreshTokenSignature, refreshTokenCookieOptions);\n    request.res.cookie('a_header', accessTokenHeader, accessTokenCookieOptions);\n    request.res.cookie('r_header', refreshTokenHeader, refreshTokenCookieOptions);\n\n    return {\n      userId: user.id,\n      username: user.username,\n      lastname: user.lastname,\n      firstname: user.firstname,\n      accessTokenPayload,\n      refreshTokenPayload,\n      permissions,\n    };\n  }\n\n  // @ResolveField(() => Token)\n  // async refreshToken(@Args() { token }: RefreshTokenInput) {\n  //   return this.auth.refreshToken(token);\n  // }\n}\n","import { Resolver, Mutation } from '@nestjs/graphql';\n\nimport { Auth } from './models/auth.model';\nimport { AuthMutations } from './auth.type';\n\n@Resolver(() => Auth)\nexport class AuthResolver {\n  @Mutation(() => AuthMutations, { name: 'auth', nullable: true })\n  authMutations() {\n    return {};\n  }\n}\n","import { CookieOptions } from \"express\";\nimport { JwtService } from \"@nestjs/jwt\";\nimport { PrismaService } from \"nestjs-prisma\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { HttpStatus, Injectable, UnauthorizedException } from \"@nestjs/common\";\n\nimport { tracer } from \"@/tracing/tracer\";\nimport { User } from \"@koj/generated/user/user.model\";\nimport { SecurityConfig } from \"@/interfaces/config.interface\";\nimport { encrypt, encryptedData } from \"@/utils/crypto.util\";\n\nimport { SignupInput } from \"./dto/signup.input\";\nimport { UserService } from \"../user/user.service\";\nimport { PasswordService } from \"../user/password.service\";\nimport { PermissionService } from \"../casbin/permission/permission.service\";\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private readonly jwtService: JwtService,\n    private readonly prisma: PrismaService,\n    private readonly passwordService: PasswordService,\n    private readonly configService: ConfigService,\n    private readonly userService: UserService,\n    private readonly permissionSerivce: PermissionService\n  ) {}\n\n  async register(data: SignupInput): Promise<User> {\n    return this.userService.create(data);\n  }\n\n  async login(user, request) {\n    const [accessToken, refreshToken] = await this.generateToken(user);\n    const permissions = await this.permissionSerivce.getPermissionForUser(user);\n\n    const [accessTokenHeader, accessTokenPayload, accessTokenSignature] =\n      accessToken.split(\".\");\n    const [refreshTokenHeader, refreshTokenPayload, refreshTokenSignature] =\n      refreshToken.split(\".\");\n\n    const accessTokenCookieOptions = this.getJwtAccessTokenOptions();\n    const refreshTokenCookieOptions = this.getJwtRefreshTokenOptions();\n\n    request.res.cookie(\n      \"a_sign\",\n      accessTokenSignature,\n      accessTokenCookieOptions\n    );\n    request.res.cookie(\n      \"r_sign\",\n      refreshTokenSignature,\n      refreshTokenCookieOptions\n    );\n    request.res.cookie(\"a_header\", accessTokenHeader, accessTokenCookieOptions);\n    request.res.cookie(\n      \"r_header\",\n      refreshTokenHeader,\n      refreshTokenCookieOptions\n    );\n\n    return {\n      userId: user.id,\n      email: user.email,\n      username: user.username,\n      lastname: user.lastname,\n      firstname: user.firstname,\n      avatar: user.avatar,\n      accessTokenPayload,\n      refreshTokenPayload,\n      permissions\n    };\n  }\n\n  async loginWithProvider(data) {\n    console.log(data);\n  }\n\n  async getAuthenticatedData(user: User) {\n    // try {}\n    const [accessToken, refreshToken] = await this.generateToken(user);\n\n    return {\n      accessToken,\n      refreshToken\n    };\n  }\n\n  async getAuthenticatedUser(\n    email: string,\n    password: string,\n    domainId: number\n  ) {\n    return tracer.startActiveSpan(\n      this.getAuthenticatedUser.name,\n      async (span) => {\n        const user = (await this.userService.getUserByEmail({\n          email,\n          domainId\n        })) as User;\n\n        if (!user) {\n          const error = new UnauthorizedException({\n            message: \"User authenticated fail\",\n            statusCode: HttpStatus.UNAUTHORIZED\n          });\n          span.recordException(error);\n          span.end();\n          throw error;\n        }\n\n        const passwordValid: boolean =\n          await this.passwordService.validatePassword(password, user.password);\n\n        if (!passwordValid) {\n          const error = new UnauthorizedException(\"Invalid password\");\n          span.recordException(error);\n          span.end();\n          throw error;\n        }\n\n        delete user.password;\n        span.end();\n        return user;\n      }\n    );\n  }\n\n  jwtStringToObject(jwt: string) {\n    const [header, payload, signature] = jwt.split(\".\");\n\n    return {\n      header,\n      payload,\n      signature\n    };\n  }\n\n  validateUser(id: User[\"id\"]): Promise<User> {\n    return this.prisma.user.findUnique({ where: { id: id } });\n  }\n\n  getUserFromToken(token: string): Promise<User> {\n    const id = this.jwtService.decode(token)[\"id\"];\n    return this.prisma.user.findUnique({ where: { id } });\n  }\n\n  generateToken(user: User) {\n    const privateData = encrypt(\n      JSON.stringify({\n        userId: user.id,\n        domainId: user.domainId,\n        role: user.role\n      })\n    );\n\n    const accessTokenPayload = {\n      username: user.username,\n      lastname: user.lastname,\n      firstname: user.firstname,\n      private: privateData\n    };\n\n    const refreshTokenPayload = {\n      userId: user.id,\n      domainId: user.domainId\n    };\n    return Promise.all([\n      this.generateAccessToken(accessTokenPayload),\n      this.generateRefreshToken(refreshTokenPayload)\n    ]);\n  }\n\n  private generateAccessToken(payload: {\n    username: User[\"username\"];\n    lastname: User[\"lastname\"];\n    firstname: User[\"firstname\"];\n    private: encryptedData;\n  }) {\n    const securityConfig = this.configService.get<SecurityConfig>(\"security\");\n    return this.jwtService.signAsync(payload, {\n      secret: this.configService.get(\"JWT_ACCESS_SECRET\"),\n      expiresIn: securityConfig.refreshIn\n    });\n  }\n\n  private generateRefreshToken(payload: {\n    userId: User[\"id\"];\n    domainId: User[\"domainId\"];\n  }) {\n    const securityConfig = this.configService.get<SecurityConfig>(\"security\");\n    return this.jwtService.signAsync(payload, {\n      secret: this.configService.get(\"JWT_REFRESH_SECRET\"),\n      expiresIn: securityConfig.refreshIn\n    });\n  }\n\n  async refreshToken(userId: number) {\n    try {\n      const user = (await this.userService.getUserById(userId)) as User;\n      const [accessToken, refreshToken] = await this.generateToken(user);\n      return { accessToken, refreshToken };\n    } catch (e) {\n      console.log(e);\n      // throw new UnauthorizedException();\n    }\n  }\n\n  public getJwtAccessTokenOptions(): CookieOptions {\n    const globalPrefix = this.configService.get(\"app.globalPrefix\");\n    const maxAge = this.configService.get(\"JWT_REFRESH_TOKEN_EXPIRATION_TIME\");\n    const cookie: CookieOptions = {\n      domain: \"koj.test\",\n      maxAge: maxAge,\n      httpOnly: true,\n      secure: true,\n      sameSite: process.env.NODE_ENV === \"develepment\" ? \"none\" : \"none\",\n      path: `/`\n    };\n    return cookie;\n  }\n  public getJwtRefreshTokenOptions(): CookieOptions {\n    const globalPrefix = this.configService.get(\"app.globalPrefix\");\n    const maxAge = this.configService.get(\"JWT_REFRESH_TOKEN_EXPIRATION_TIME\");\n    console.log(\n      \"🚀 ~ file: auth.service.ts ~ line 173 ~ AuthService ~ getJwtRefreshTokenOptions ~ maxAge\",\n      maxAge\n    );\n    const cookie: CookieOptions = {\n      domain: \"koj.test\",\n      maxAge: Number(maxAge),\n      httpOnly: true,\n      secure: true,\n      sameSite: process.env.NODE_ENV === \"develepment\" ? \"none\" : \"none\",\n      path: `/`\n    };\n    return cookie;\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class AuthMutations {}\n","import { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\nimport { InputType, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class LoginInput {\n  @Field()\n  @IsEmail()\n  email: string;\n\n  @Field()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n}\n","import { IsEmail, IsNotEmpty, MinLength } from 'class-validator';\nimport { InputType, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class SignupInput {\n  @Field()\n  @IsEmail()\n  email: string;\n\n  @Field()\n  @IsNotEmpty()\n  @MinLength(8)\n  username: string;\n\n  @Field()\n  @IsNotEmpty()\n  @MinLength(8)\n  password: string;\n\n  @Field({ nullable: true })\n  @IsNotEmpty()\n  firstname?: string;\n\n  @Field({ nullable: true })\n  @IsNotEmpty()\n  lastname?: string;\n\n  domainId: number;\n}\n","import { Field, ObjectType, ID } from '@nestjs/graphql';\nimport { Token } from './token.model';\n\n@ObjectType()\nexport class Auth extends Token {\n  @Field(() => ID, { nullable: false })\n  userId: number;\n  @Field(() => String, { nullable: true })\n  firstname!: string | null;\n  @Field(() => String, { nullable: true })\n  lastname!: string | null;\n  @Field(() => String, { nullable: true })\n  permissions!: string[] | null;\n}\n","import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Token {\n  @Field(() => String, { description: 'JWT access token payload' })\n  accessTokenPayload: string;\n\n  @Field(() => String, { description: 'JWT refresh token payload' })\n  refreshTokenPayload: string;\n}\n","import { Injectable, BadRequestException, HttpStatus } from \"@nestjs/common\";\nimport { User } from \"@koj/generated/user/user.model\";\nimport { AuthService } from \"../auth.service\";\nimport { UserService } from \"../../user/user.service\";\n\n@Injectable()\nexport class GithubService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly authService: AuthService\n  ) {}\n\n  async authWithGithub(request) {\n    const {\n      emails,\n      username,\n      displayName,\n      _json: { avatar_url }\n    } = request.user;\n    const email = emails[0].value;\n    const [firstname, lastname] = displayName.split(/\\s+(.*)/);\n    const domainId = request.domainId;\n\n    let user = (await this.userService.getUserByEmail({\n      email,\n      domainId\n    })) as User;\n\n    if (!user) {\n      user = await this.userService.createByUsername({\n        email,\n        domainId,\n        username,\n        lastname,\n        firstname,\n        provider: \"github\",\n        avatar: avatar_url\n      });\n    }\n\n    if (user.provider !== \"github\") {\n      throw new BadRequestException({\n        message: \"This email using another provider for login\",\n        statusCode: HttpStatus.BAD_REQUEST\n      });\n    }\n\n    return this.authService.login(user, request);\n  }\n}\n","import { User } from \"@koj/generated/user/user.model\";\nimport { Injectable, BadRequestException, HttpStatus } from \"@nestjs/common\";\nimport { UserService } from \"../../user/user.service\";\nimport { AuthService } from \"../auth.service\";\n\n@Injectable()\nexport class GoogleService {\n  constructor(\n    private readonly userService: UserService,\n    private readonly authService: AuthService\n  ) {}\n\n  async authWithGoogle(data: any, request) {\n    const { email, given_name, family_name, picture: avatar } = data;\n    const domainId = request.domainId;\n\n    let user = (await this.userService.getUserByEmail({\n      email,\n      domainId\n    })) as User;\n\n    if (!user) {\n      user = await this.userService.createByUsername({\n        email,\n        avatar,\n        domainId,\n        provider: \"google\",\n        firstname: given_name,\n        lastname: family_name,\n        username: email.split(\"@\")[0]\n      });\n    }\n\n    if (user.provider !== \"google\") {\n      throw new BadRequestException({\n        message: \"This email using another provider for login\",\n        statusCode: HttpStatus.BAD_REQUEST\n      });\n    }\n\n    return this.authService.login(user, request);\n  }\n}\n","import { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\n\nimport { JwtDto } from '@koj/common/interfaces';\n\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh-token',\n) {\n  constructor(readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          const signature = request?.cookies?.['r_sign'];\n          const header = request?.cookies?.['r_header'];\n          const payload = request?.headers?.['x-refresh-payload'];\n          if (!signature || !header || !payload) {\n            throw new UnauthorizedException({\n              message: 'Missing Refresh Token',\n              level: 'warn',\n            });\n          }\n\n          console.log('refresh Token', `${header}.${payload}.${signature}`);\n          return `${header}.${payload}.${signature}`;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_REFRESH_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtDto) {\n    console.log(\n      '🚀 ~ file: jwt-refresh.strategy.ts ~ line 38 ~ validate ~ payload',\n      payload,\n    );\n\n    return payload;\n  }\n}\n","import { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\n\nimport { decrypt } from '@/utils/crypto.util';\n\nimport { JwtDto } from '@koj/common/interfaces';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          const signature = request?.cookies?.['a_sign'];\n          const header = request?.cookies?.['a_header'];\n          const payload = request?.headers?.['x-access-payload'];\n          if (!signature || !header || !payload) {\n            // throw new UnauthorizedException({\n            //   message: 'Missing Auth Token',\n            //   level: 'warn',\n            // });\n          }\n\n          console.log(`${header}.${payload}.${signature}`);\n          return `${header}.${payload}.${signature}`;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtDto) {\n    const privateData = JSON.parse(decrypt(payload.private));\n    return { ...payload, ...privateData };\n  }\n}\n","import { AuthService } from './../auth.service';\nimport { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { User } from '@prisma/client';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super({\n      usernameField: 'email',\n      passReqToCallback: true,\n    });\n  }\n\n  async validate(request, email: string, password: string): Promise<User> {\n    return this.authService.getAuthenticatedUser(email, password, request.domainId);\n  }\n}\n","export const ADAPTER_MODULE_OPTIONS = 'ADAPTER_MODULE_OPTIONS';\nexport const ADAPTER_ENFORCER = 'ADAPTER_ENFORCER';\nexport const PERMISSIONS_METADATA = '__PERMISSIONS__';\n","import * as casbin from 'casbin';\nimport { DynamicModule, Module } from '@nestjs/common';\n\nimport { AdapterModule } from '@koj/adapter';\nimport { CasbinModuleOptions } from './casbin-module-options.interface';\n\nimport { ADAPTER_MODULE_OPTIONS, ADAPTER_ENFORCER } from './casbin.constant';\nimport { PermissionService } from './permission/permission.service';\n\n@Module({})\nexport class CasbinModule {\n  static register(options: CasbinModuleOptions): DynamicModule {\n    const moduleOptionsProvider = {\n      provide: ADAPTER_MODULE_OPTIONS,\n      useValue: options || {},\n    };\n\n    let enforcerProvider = options.enforcerProvider;\n    const importsModule = options.imports || [];\n\n    if (!enforcerProvider) {\n      if (!options.model || !options.policy) {\n        throw new Error('must provide either enforcerProvider or both model and policy');\n      }\n\n      enforcerProvider = {\n        provide: ADAPTER_ENFORCER,\n        useFactory: async () => {\n          const isFile = typeof options.policy === 'string';\n\n          let policyOption;\n\n          if (isFile) {\n            policyOption = options.policy as string;\n          } else {\n            policyOption = await options.policy;\n          }\n\n          return casbin.newEnforcer(options.model, policyOption);\n        },\n      };\n    }\n\n    return {\n      module: AdapterModule,\n      providers: [moduleOptionsProvider, enforcerProvider, PermissionService],\n      imports: [...importsModule],\n      exports: [moduleOptionsProvider, enforcerProvider, PermissionService],\n    };\n  }\n}\n","import path = require('path');\nimport * as casbin from 'casbin';\nimport { context, trace } from '@opentelemetry/api';\n\nimport { tracer } from '@/tracing/tracer';\nimport { AdapterService } from '@koj/adapter';\n\nimport { ADAPTER_ENFORCER } from './casbin.constant';\n\nexport const enforcerProvider = {\n  provide: ADAPTER_ENFORCER,\n  useFactory: async () => {\n    const span = tracer.startSpan('bootstrap.policy', {});\n    return context.with(trace.setSpan(context.active(), span), async () => {\n      const policyAdapter = await AdapterService.newAdapter();\n      const e = await casbin.newEnforcer();\n      e.initWithAdapter(path.resolve('apps/koj/model.conf'), policyAdapter);\n      span.end();\n      return e;\n    });\n  },\n};\n","import { SetMetadata } from '@nestjs/common';\nimport { Permission } from '@/interfaces/permission.interface';\n\nimport { PERMISSIONS_METADATA } from './casbin.constant';\n\n/**\n * You can define multiple permissions, but only\n * when all of them satisfied, could you access the route.\n */\nexport const Permissions = (...permissions: Permission[]) => {\n  const perms = permissions.map((item) => {\n    return item;\n  });\n\n  return SetMetadata(PERMISSIONS_METADATA, perms);\n};\n","import { Prisma, User } from '@prisma/client';\n\nexport const permissionQuery = (user: User) => Prisma.sql`\n  with permissions as (\n    select \n      concat_ws('.', object, \"action\", effect) as permission, \n      cp.effect , cp.\"object\" , cp.\"action\" \n    from \n      casbin_policy cp \n    where \n      cp.subject in (select rule from casbin_role cr where cr.\"role\" = ${user.role}) \n      and cp.domain_id = ${user.domainId}\n  )\n \n  select \n    concat_ws('.', per.object, per.\"action\") as permission \n  from \n    permissions per \n  where \n    per.permission not in (\n      select \n        permission \n      from \n        permissions per2 \n      where \n        per2.effect = 'deny'\n    )  \n`;\n","import * as casbin from 'casbin';\nimport { compile } from 'expression-eval';\nimport { PrismaService } from 'nestjs-prisma';\nimport { Inject, Injectable } from '@nestjs/common';\n\nimport { Policy } from '@koj/generated/policy/policy.model';\nimport { ADAPTER_ENFORCER } from '@/modules/casbin/casbin.constant';\nimport { PolicyCreateInput } from '@koj/generated/policy/policy-create.input';\nimport { FindManyPolicyArgs } from '@koj/generated/policy/find-many-policy.args';\nimport { permissionQuery } from './permission.query';\nimport { User } from '@koj/generated/user/user.model';\n\n@Injectable()\nexport class PermissionService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(ADAPTER_ENFORCER)\n    private readonly enforcer: casbin.Enforcer,\n  ) {}\n\n  findMany(args: FindManyPolicyArgs, select: object) {\n    return this.prisma.policy.findMany({ ...args, select });\n  }\n\n  async getPermissionForUser(user: User) {\n    const permissions: { permission: string }[] = await this.prisma.$queryRaw(\n      permissionQuery(user),\n    );\n\n    return permissions.map((permission) => permission.permission);\n  }\n\n  transformPolicyInput(p: PolicyCreateInput) {\n    return [\n      p.subject,\n      p.object,\n      p.action,\n      p.effect,\n      p.effectWith,\n      p.condition,\n      p.domainId?.toString(),\n    ];\n  }\n\n  transformPolicyToObject(policy: string[]) {\n    const obj: Policy | unknown = {};\n    policy.forEach((value, i) => (obj[i] = value));\n    return obj;\n  }\n\n  checkValidPolicyCondition(condition: string) {\n    if (condition == '') return true;\n\n    try {\n      const mockData = {\n        subject: { username: 'username', role: 'role', type: 'type', level: 'level' },\n      };\n\n      const resultCompile = compile(condition)(mockData);\n\n      return typeof resultCompile !== 'undefined';\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getOldNewPolicyData(policy: Policy, data: Policy) {\n    const { subject, object, action, effect, effectWith, domainId } = policy;\n    const condition = (policy.condition ||= '');\n    const oldData = [\n      subject,\n      object,\n      action,\n      effect,\n      effectWith,\n      condition,\n      domainId.toString(),\n    ];\n    const newData = [\n      data.subject || subject,\n      data.object || object,\n      data.action || action,\n      data.effect || effect,\n      data.effectWith || effectWith,\n      data.condition || condition,\n      data.domainId.toString() || domainId.toString(),\n    ];\n\n    return { oldData, newData };\n  }\n}\n","import { ArgsType, Field, InputType } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyFindByRoleResourceInput {\n  @Field(() => String, { nullable: true })\n  roleId?: number;\n\n  @Field(() => String, { nullable: true })\n  resource?: string;\n}\n","import { ExecutionContext, Module } from '@nestjs/common';\n\nimport { CasbinModule } from '../casbin.module';\nimport { PolicyService } from './policy.service';\nimport { enforcerProvider } from '../enforcer.provider';\nimport { PolicyResolver } from './policy.resolver';\nimport { PolicyMutationResolver } from './policy.mutation';\n\n@Module({\n  providers: [PolicyResolver, PolicyMutationResolver, PolicyService],\n  imports: [\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error('Function not implemented.');\n      },\n    }),\n  ],\n  exports: [PolicyResolver, PolicyMutationResolver, PolicyService],\n})\nexport class PolicyModule {}\n","import { UseGuards } from '@nestjs/common';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Args, Info, ResolveField, Resolver } from '@nestjs/graphql';\n\nimport { Policy } from '@koj/generated/policy/policy.model';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { PolicyCreateInput } from '@koj/generated/policy/policy-create.input';\nimport { PolicyUpdateInput } from '@koj/generated/policy/policy-update.input';\nimport { PolicyWhereUniqueInput } from '@koj/generated/policy/policy-where-unique.input';\n\nimport { PolicyMutations } from './policy.type';\nimport { PolicyService } from './policy.service';\nimport { Permissions } from '../permisions.decorator';\n\n@Resolver(() => PolicyMutations)\nexport class PolicyMutationResolver {\n  constructor(private readonly policyService: PolicyService) {}\n  @ResolveField(() => Policy)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'create',\n    resource: 'policy',\n  })\n  createPolicy(@Args('data') data: PolicyCreateInput) {\n    return this.policyService.createPolicy(data);\n  }\n\n  @ResolveField(() => [Policy])\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'create',\n    resource: 'policy',\n  })\n  createCasbinPolicies(\n    @Args({ name: 'data', type: () => [PolicyCreateInput] })\n    data: PolicyCreateInput[],\n  ) {\n    return this.policyService.createPolicies(data);\n  }\n\n  @ResolveField(() => Policy)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'edit',\n    resource: 'policy',\n  })\n  updatePolicy(\n    @Args('data') data: PolicyUpdateInput,\n    @Args('where') where: PolicyWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.policyService.update(data, where, select);\n  }\n\n  @ResolveField(() => Policy)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'delete',\n    resource: 'policy',\n  })\n  removePolicy(\n    @Args('where') where: PolicyWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.policyService.remove(where, select);\n  }\n}\n","import { UseGuards } from '@nestjs/common';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Args, Info, Mutation, Query, Resolver } from '@nestjs/graphql';\n\nimport { Policy } from '@koj/generated/policy/policy.model';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { FindManyPolicyArgs } from '@koj/generated/policy/find-many-policy.args';\nimport { PolicyWhereUniqueInput } from '@koj/generated/policy/policy-where-unique.input';\n\nimport { PolicyMutations } from './policy.type';\nimport { PolicyService } from './policy.service';\nimport { Permissions } from '../permisions.decorator';\nimport { PolicyFindByRoleResourceInput } from './dto/find-by-role.dto';\n\n@Resolver(() => Policy)\nexport class PolicyResolver {\n  constructor(private readonly policyService: PolicyService) {}\n  @Mutation(() => PolicyMutations, { name: 'policy', nullable: true })\n  async casbinPolicyMutations() {\n    return {};\n  }\n\n  @Query(() => [Policy], { name: 'policies' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'policy',\n    noUniqueInput: true,\n  })\n  findMany(@Args() args: FindManyPolicyArgs, @Info() info: GraphQLResolveInfo) {\n    const { select } = new PrismaSelect(info).value;\n    return this.policyService.findMany(args, select);\n  }\n\n  @Query(() => Policy, { name: 'policy' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'policy',\n  })\n  findUnique(\n    @Args('where') where: PolicyWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.policyService.findUnique(where, select);\n  }\n\n  @Query(() => Boolean)\n  z_checkValidPolicyCondition(@Args('data') data: string) {\n    return this.policyService.checkValidPolicyCondition(data);\n  }\n  @Query(() => [Policy])\n  z_policyByRoleResource(\n    @Args('where') where: PolicyFindByRoleResourceInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.policyService.findByRoleResource(where, select);\n  }\n}\n","import * as casbin from 'casbin';\nimport { Prisma } from '@prisma/client';\nimport { compile } from 'expression-eval';\nimport { PrismaService } from 'nestjs-prisma';\nimport {\n  BadRequestException,\n  Inject,\n  Injectable,\n  NotFoundException,\n  NotImplementedException,\n} from '@nestjs/common';\n\nimport { Policy } from '@koj/generated/policy/policy.model';\nimport { ADAPTER_ENFORCER } from '@/modules/casbin/casbin.constant';\nimport { PolicyCreateInput } from '@koj/generated/policy/policy-create.input';\nimport { PolicyUpdateInput } from '@koj/generated/policy/policy-update.input';\nimport { FindManyPolicyArgs } from '@koj/generated/policy/find-many-policy.args';\nimport { PolicyWhereUniqueInput } from '@koj/generated/policy/policy-where-unique.input';\nimport { PolicyFindByRoleResourceInput } from './dto/find-by-role.dto';\nimport { policyByRoleResourceQuery } from './query/policy.query';\nimport { HttpStatus } from '@nestjs/common';\n\n@Injectable()\nexport class PolicyService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(ADAPTER_ENFORCER)\n    private readonly enforcer: casbin.Enforcer,\n  ) {}\n\n  async createPolicy(data: PolicyCreateInput) {\n    const casbinResult = await this.enforcer.addPolicy(\n      ...this.transformPolicyInput(data),\n    );\n\n    if (!casbinResult) {\n      throw new BadRequestException({\n        message: `Can't create policy`,\n        statusCode: HttpStatus.BAD_REQUEST,\n      });\n    }\n\n    return this.prisma.policy.create({ data });\n  }\n\n  async createPolicies(data: PolicyCreateInput[]) {\n    const policies = [];\n\n    data.forEach((policy) => {\n      policies.push(this.transformPolicyInput(policy));\n    });\n\n    const casbinResult = await this.enforcer.addPolicies(policies);\n\n    if (!casbinResult) {\n      throw new BadRequestException({\n        message: `Can't create policy`,\n        statusCode: HttpStatus.BAD_REQUEST,\n      });\n    }\n\n    return this.prisma.policy.createMany({ data });\n  }\n\n  findMany(args: FindManyPolicyArgs, select: object) {\n    return this.prisma.policy.findMany({ ...args, select });\n  }\n\n  findUnique(where: PolicyWhereUniqueInput, select: object) {\n    return this.prisma.policy.findUnique({ where, select });\n  }\n\n  findByRoleResource(where: PolicyFindByRoleResourceInput, select: object) {\n    const query = policyByRoleResourceQuery(where, select);\n    return this.prisma.$queryRawUnsafe(query);\n  }\n\n  async update(data: PolicyUpdateInput, where: PolicyWhereUniqueInput, select: object) {\n    const policy = await this.prisma.policy.findUnique({ where });\n\n    if (!policy) {\n      throw new NotFoundException();\n    }\n\n    const { oldData, newData } = this.getOldNewPolicyData(<Policy>policy, <Policy>data);\n    const updatePolicyResult = await this.enforcer.updatePolicy(oldData, newData);\n\n    if (!updatePolicyResult) {\n      throw new BadRequestException({\n        message: `Can't update policy`,\n        statusCode: HttpStatus.BAD_REQUEST,\n      });\n    }\n\n    try {\n      return await this.prisma.policy.update({ data, where, select });\n    } catch (error) {\n      await this.enforcer.updatePolicy(newData, oldData);\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        throw new NotImplementedException((<any>error.meta)?.cause);\n      }\n      throw error;\n    }\n  }\n\n  remove(where: PolicyWhereUniqueInput, select: object) {\n    return this.prisma.policy.delete({ where, select }).catch((e) => {\n      if (e instanceof Prisma.PrismaClientKnownRequestError) {\n        if (e.code === 'P2025') {\n          throw new NotFoundException();\n        }\n      }\n      throw new NotImplementedException(e.meta?.cause);\n    });\n  }\n\n  transformPolicyInput(p: PolicyCreateInput) {\n    return [\n      p.subject,\n      p.object,\n      p.action,\n      p.effect,\n      p.effectWith,\n      p.condition,\n      p.domainId?.toString(),\n    ];\n  }\n\n  transformPolicyToObject(policy: string[]) {\n    const obj: Policy | unknown = {};\n    policy.forEach((value, i) => (obj[i] = value));\n    return obj;\n  }\n\n  checkValidPolicyCondition(condition: string) {\n    if (condition == '') return true;\n\n    try {\n      const mockData = {\n        subject: { username: 'username', role: 'role', type: 'type', level: 'level' },\n      };\n\n      const resultCompile = compile(condition)(mockData);\n\n      return typeof resultCompile !== 'undefined';\n    } catch (err) {\n      return false;\n    }\n  }\n\n  getOldNewPolicyData(policy: Policy, data: Policy) {\n    const { subject, object, action, effect, effectWith, domainId } = policy;\n    const condition = (policy.condition ||= '');\n    const oldData = [\n      subject,\n      object,\n      action,\n      effect,\n      effectWith,\n      condition,\n      domainId.toString(),\n    ];\n    const newData = [\n      data.subject || subject,\n      data.object || object,\n      data.action || action,\n      data.effect || effect,\n      data.effectWith || effectWith,\n      data.condition || condition,\n      data.domainId?.toString() || domainId.toString(),\n    ];\n\n    return { oldData, newData };\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class PolicyMutations {}\n","import { transformObjectToQuery } from '@/utils/database-query';\n\nexport const policyByRoleResourceQuery = ({ roleId, resource }: any, select: any) => {\n  const transformSelect = transformObjectToQuery(select, 'cp');\n  return `\n    select\n      ${transformSelect}\n    from\n      casbin_policy cp\n    where\n      cp.subject in (\n        select\n          cr.\"rule\"\n        from\n          role r\n        join casbin_role cr on\n          r.key = cr.role\n        where\n          r.\"id\" = '${roleId}'\n      )\n      and cp.\"object\" = '${resource}'\n    order by cp.id desc \n`;\n};\n","import { UseGuards } from '@nestjs/common';\nimport { Args, Context, Int, ResolveField, Resolver } from '@nestjs/graphql';\n\nimport { GqlAuthGuard } from '@koj/common/guards';\nimport { RoleGroup } from '@koj/generated/role-group/role-group.model';\nimport { RoleGroupCreateInput } from '@koj/generated/role-group/role-group-create.input';\nimport { RoleGroupUpdateInput } from '@koj/generated/role-group/role-group-update.input';\nimport { RoleGroupWhereUniqueInput } from '@koj/generated/role-group/role-group-where-unique.input';\n\nimport { RoleMutations } from './role.type';\nimport { RoleGroupService } from './role.service';\n\n@Resolver(() => RoleMutations)\nexport class RoleGroupMutationResolver {\n  constructor(private readonly roleService: RoleGroupService) {}\n\n  @ResolveField(() => Boolean)\n  @UseGuards(GqlAuthGuard)\n  createRoleGroup(@Args('data') data: RoleGroupCreateInput, @Context() context) {\n    data.domainId = context.req.user.domainId;\n    return this.roleService.createRole(data);\n  }\n\n  @ResolveField(() => RoleGroup)\n  updateRoleGroup(\n    @Args('data') data: RoleGroupUpdateInput,\n    @Args('where') where: RoleGroupWhereUniqueInput,\n  ) {\n    return this.roleService.update(data, where);\n  }\n\n  @ResolveField(() => RoleGroup)\n  removeRoleGroup(@Args('id', { type: () => Int }) id: number) {\n    return this.roleService.remove(id);\n  }\n}\n","import path = require('path');\nimport { Module } from '@nestjs/common';\n\nimport { AdapterService } from '@koj/adapter';\n\nimport { CasbinModule } from '../casbin.module';\nimport { RoleGroupService } from './role.service';\nimport { RoleGroupResolver } from './role.resolver';\nimport { enforcerProvider } from '../enforcer.provider';\nimport { RoleGroupMutationResolver } from './ role.mutation';\n\n@Module({\n  imports: [\n    CasbinModule.register({\n      model: path.resolve('apps/koj/model.conf'),\n      policy: AdapterService.newAdapter(),\n      userFromContext: (ctx) => {\n        const request = ctx.switchToHttp().getRequest();\n        return request.user && request.createdById;\n      },\n      enforcerProvider: enforcerProvider,\n    }),\n  ],\n  providers: [RoleGroupResolver, RoleGroupMutationResolver, RoleGroupService],\n  exports: [RoleGroupResolver, RoleGroupMutationResolver, RoleGroupService],\n})\nexport class RoleGroupModule {}\n","import { Mutation, Resolver } from '@nestjs/graphql';\n\nimport { RoleGroup } from '@koj/generated/role-group/role-group.model';\n\nimport { RoleMutations } from './role.type';\nimport { RoleGroupService } from './role.service';\n\n@Resolver(() => RoleGroup)\nexport class RoleGroupResolver {\n  constructor(private readonly roleService: RoleGroupService) {}\n  @Mutation(() => RoleMutations, { name: 'role', nullable: true })\n  async casbinPolicyMutations() {\n    return {};\n  }\n}\n","import * as casbin from 'casbin';\nimport { PrismaService } from 'nestjs-prisma';\nimport { Inject, Injectable } from '@nestjs/common';\n\nimport { ADAPTER_ENFORCER } from '../casbin.constant';\nimport { RoleGroupCreateInput } from '@koj/generated/role-group/role-group-create.input';\nimport { RoleGroupUpdateInput } from '@koj/generated/role-group/role-group-update.input';\nimport { RoleGroupWhereUniqueInput } from '@koj/generated/role-group/role-group-where-unique.input';\n\n@Injectable()\nexport class RoleGroupService {\n  constructor(\n    private prisma: PrismaService,\n    @Inject(ADAPTER_ENFORCER)\n    private readonly enforcer: casbin.Enforcer,\n  ) {}\n\n  async createRole(data: RoleGroupCreateInput, select?: object) {\n    const result = await this.enforcer.addPolicy(...this.transformRoleInput(data));\n\n    if (result) {\n      await this.prisma.roleGroup.create({ data, select });\n      return true;\n    }\n    return false;\n  }\n\n  async createRoles(data: RoleGroupCreateInput[]) {\n    const policies = [];\n\n    data.forEach((policy) => {\n      policies.push(this.transformRoleInput(policy));\n    });\n\n    const result = await this.enforcer.addPolicies(policies);\n\n    if (result)\n      this.prisma.roleGroup.createMany({ data }).catch((e) => {\n        throw e;\n      });\n    return true;\n  }\n\n  findMany() {\n    return this.prisma.roleGroup.findMany();\n  }\n\n  findUnique(where: RoleGroupWhereUniqueInput) {\n    return this.prisma.roleGroup.findUnique({ where });\n  }\n\n  update(data: RoleGroupUpdateInput, where: RoleGroupWhereUniqueInput) {\n    return this.prisma.roleGroup.update({ data, where });\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} roleGroup`;\n  }\n\n  transformRoleInput(p: RoleGroupCreateInput) {\n    return [p.role, p.rule, p.domainId?.toString()];\n  }\n\n  transformRoleArrayToObject(p: Array<unknown>) {\n    return { role: p[0], rule: p[1], domainId: p[2] };\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class RoleMutations {}\n","import { ExecutionContext, Module } from \"@nestjs/common\";\n\nimport { ChallengeService } from \"./challenge.service\";\nimport { CasbinModule } from \"../casbin/casbin.module\";\nimport { ChallengeResolver } from \"./challenge.resolver\";\nimport { enforcerProvider } from \"../casbin/enforcer.provider\";\nimport { ChallengeMutationsResolver } from \"./challenge.mutation\";\nimport { natsConfig } from \"@/configs/nats.config\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { LoggerModule } from \"@/logger/logger.module\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: \"CHALLENGE_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"challenge_queue\"\n        }\n      },\n      {\n        name: \"SUBMISSION_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"submission_queue\"\n        }\n      }\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error(\"Function not implemented.\");\n      }\n    }),\n    LoggerModule\n  ],\n  providers: [\n    ChallengeResolver,\n    ChallengeMutationsResolver,\n    ChallengeService,\n    RPCTraceClientProxy\n  ]\n})\nexport class ChallengeModule {}\n","import { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { Inject, UseGuards } from \"@nestjs/common\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Args, Info, ResolveField, Resolver } from \"@nestjs/graphql\";\n\nimport {\n  CHALLENGE_CREATE,\n  CHALLENGE_DELETE,\n  CHALLENGE_SUBMIT,\n  CHALLENGE_UPDATE,\n  SUBMISSION_SUBMIT\n} from \"@koj/common/constants\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { Challenge } from \"@koj/generated/challenge/challenge.model\";\nimport { ChallengeCreateInput } from \"@koj/generated/challenge/challenge-create.input\";\nimport { ChallengeUpdateInput } from \"@koj/generated/challenge/challenge-update.input\";\n\nimport { GqlContext } from \"@/decorators/gql-context.decorator\";\n\nimport { ChallengeMutations } from \"./challenge.type\";\nimport { Permissions } from \"../casbin/permisions.decorator\";\nimport {\n  ChallengeSubmitInput,\n  ChallengeSubmitResult,\n  KChallengeWhereUniqueInput\n} from \"@koj/common/dto\";\n\n@Resolver(() => ChallengeMutations)\nexport class ChallengeMutationsResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"CHALLENGE_SERVICE\") private readonly commentClient: ClientNats,\n    @Inject(\"SUBMISSION_SERVICE\") private readonly submissionClient: ClientNats\n  ) {}\n\n  @ResolveField(() => Challenge)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"create\", resource: \"challenge\" })\n  createChallenge(\n    @Args(\"data\") data: ChallengeCreateInput,\n    @Info() info,\n    @GqlContext() context\n  ) {\n    const select = new PrismaSelect(info).value;\n    Object.assign(data, context.data);\n    return this.traceClient.send(this.commentClient, CHALLENGE_CREATE, {\n      data,\n      select\n    });\n  }\n\n  @ResolveField(() => Challenge)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"edit\", resource: \"challenge\" })\n  updateChallenge(\n    @Args(\"data\") data: ChallengeUpdateInput,\n    @Args(\"where\") where: KChallengeWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n    @GqlContext() context\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    const payload = { data, where, select };\n    Object.assign(data, context.data);\n    return this.traceClient.send(this.commentClient, CHALLENGE_UPDATE, payload);\n  }\n\n  @ResolveField(() => Challenge)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"delete\", resource: \"challenge\" })\n  removeChallenge(\n    @Args(\"where\") where: KChallengeWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(this.commentClient, CHALLENGE_DELETE, {\n      where,\n      select\n    });\n  }\n\n  @ResolveField(() => ChallengeSubmitResult)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"read\", resource: \"challenge\" })\n  submitChallenge(\n    @Args(\"data\") data: ChallengeSubmitInput,\n    @GqlContext() context\n  ) {\n    Object.assign(data, context.data);\n    return this.traceClient.send(this.submissionClient, SUBMISSION_SUBMIT, {\n      data,\n      context: { data: context.data }\n    });\n  }\n}\n","import { Inject } from \"@nestjs/common\";\nimport { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Resolver, Query, Mutation, Args, Info } from \"@nestjs/graphql\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { KChallengeWhereUniqueInput } from \"@koj/common/dto\";\nimport { Challenge } from \"@koj/generated/challenge/challenge.model\";\nimport {\n  CHALLENGE_FIND_UNIQUE,\n  CHALLENGE_FIND_MANY,\n  CHALLENGE_FIND_MANY_PUBLIC,\n  CHALLENGE_FIND_UNIQUE_PUBLIC\n} from \"@koj/common/constants\";\nimport { FindManyChallengeArgs } from \"@koj/generated/challenge/find-many-challenge.args\";\n\nimport { DomainId } from \"@/decorators/gql-domain-id.decorator\";\n\nimport { ChallengeMutations } from \"./challenge.type\";\nimport { GqlContext } from \"@/decorators/gql-context.decorator\";\n\n@Resolver(() => Challenge)\nexport class ChallengeResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"CHALLENGE_SERVICE\") private readonly challengeClient: ClientNats\n  ) {}\n\n  @Mutation(() => ChallengeMutations, { name: \"challenge\", nullable: true })\n  challengeMutations() {\n    return {};\n  }\n\n  @Query(() => [Challenge], { name: \"challenges\" })\n  findMany(\n    @Args() args: FindManyChallengeArgs,\n    @Info() info: GraphQLResolveInfo,\n    @DomainId() domainId\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    args.where = args.where || {};\n    args.where.domainId = domainId;\n    return this.traceClient.send(this.challengeClient, CHALLENGE_FIND_MANY, {\n      args,\n      select\n    });\n  }\n\n  @Query(() => Challenge, { name: \"challenge\" })\n  findUnique(\n    @Args(\"where\") where: KChallengeWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n    @DomainId() domainId\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    where.domainId = domainId;\n    return this.traceClient.send(this.challengeClient, CHALLENGE_FIND_UNIQUE, {\n      where,\n      select\n    });\n  }\n\n  @Query(() => Challenge, { name: \"challenge_public\" })\n  findUniquePublic(\n    @Args(\"where\") where: KChallengeWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n    @DomainId() domainId\n  ) {\n    console.log(\n      \"🚀 ~ file: challenge.resolver.ts ~ line 70 ~ ChallengeResolver ~ domainId\",\n      domainId\n    );\n    const { select } = new PrismaSelect(info).value;\n    where.domainId = domainId;\n    return this.traceClient.send(\n      this.challengeClient,\n      CHALLENGE_FIND_UNIQUE_PUBLIC,\n      {\n        where,\n        select\n      }\n    );\n  }\n}\n","import {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException\n} from \"@nestjs/common\";\n\nimport slugify from \"slugify\";\nimport { Prisma } from \"@prisma/client\";\nimport { performance } from \"perf_hooks\";\nimport { PinoLogger } from \"nestjs-pino\";\nimport { HttpStatus } from \"@nestjs/common\";\nimport { PrismaService } from \"nestjs-prisma\";\n\nimport { Input } from \"@koj/code-gen\";\nimport { CodeExecutor } from \"@koj/code-executor\";\nimport { ChallengeCreateInput } from \"@koj/generated/challenge/challenge-create.input\";\nimport { ChallengeUpdateInput } from \"@koj/generated/challenge/challenge-update.input\";\n\nimport {\n  FindManyChallengeArgs,\n  KChallengeWhereUniqueInput,\n  ChallengeSubmitInput\n} from \"@koj/common/dto\";\n\nimport saveFolder from \"./save-folder.util\";\nimport saveTestcases from \"./save-testcase.util\";\nimport { languageConfigs } from \"./language.config\";\n\nconst codeExecutor = new CodeExecutor(\"myExecutor\", \"redis://127.0.0.1:6379\");\n\nexport interface ChallengeWhereCondition {\n  id?: number;\n  slug_domainId: { slug: string; domainId: number };\n}\n\n@Injectable()\nexport class ChallengeService {\n  constructor(\n    private prisma: PrismaService,\n    private readonly logger: PinoLogger\n  ) {}\n  async create(data: ChallengeCreateInput, select: object) {\n    const { domainId, title } = data;\n    const slug = slugify(title).toLowerCase();\n\n    data.slug = slug;\n\n    await this.saveCode(data, domainId, slug);\n\n    return this.prisma.challenge.create({ data, ...select });\n  }\n\n  findMany(args: FindManyChallengeArgs, select: object) {\n    return this.prisma.challenge.findMany({ ...args, select });\n  }\n\n  async findUnique(where: KChallengeWhereUniqueInput, select: object) {\n    const whereCondition = this.getChallengeWhereUnique(where);\n\n    return this.prisma.challenge\n      .findUnique({ where: whereCondition, select })\n      .then((data) => {\n        if (!data) {\n          throw new NotFoundException({\n            message: \"Challenge not exists\",\n            statusCode: HttpStatus.NOT_FOUND\n          });\n        }\n        return data;\n      });\n  }\n\n  async update(\n    data: ChallengeUpdateInput,\n    where: KChallengeWhereUniqueInput,\n    select: object\n  ) {\n    const { domainId, title } = data;\n    const slug = slugify(title).toLowerCase();\n\n    data.updatedAt = new Date().toISOString();\n\n    const checkExistResult = await this.prisma.challenge.findFirst({\n      where: {\n        NOT: where.id ? { id: where.id } : { slug: where.slug },\n        slug,\n        domainId\n      },\n      select: { id: true, title: true, inputs: true, structs: true }\n    });\n\n    if (checkExistResult) {\n      throw new ConflictException({\n        message: \"Challenge is exists\",\n        statusCode: HttpStatus.CONFLICT\n      });\n    }\n\n    await this.saveCode(data, domainId, slug);\n\n    const whereCondition = this.getChallengeWhereUnique(where);\n    return this.prisma.challenge.update({\n      data,\n      where: whereCondition,\n      select\n    });\n  }\n\n  async remove(where: KChallengeWhereUniqueInput, select: object) {\n    return this.prisma.challenge.delete({ where, select }).catch((error) => {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === \"P2025\") {\n          throw new NotFoundException();\n        }\n      }\n      throw error;\n    });\n  }\n\n  // Todo convert to microservice\n  async saveCode(data, domainId, slug) {\n    const inputSchema = {\n      name: data.functionName,\n      inputs: data.inputs.set,\n      structs: data.structs.set,\n      output: { type: data.output }\n    };\n    const inputData = Input.formJson(<any>inputSchema);\n\n    try {\n      const basePath = \"/mnt/Data/code1/code-executor1\";\n      const path = `${basePath}/challenges/${domainId}/${slug}`;\n      await saveFolder(path);\n\n      const promiseWriteCode = data.languages.set\n        .filter((language) => [\"cplusplus\", \"javascript\"].includes(language.id))\n        .map((language) =>\n          languageConfigs[language.id].gen({ inputData, domainId, slug, path })\n        );\n      promiseWriteCode.push(\n        languageConfigs[\"output\"].gen({ inputData, domainId, slug, path })\n      );\n      const promiseWriteTestCase = (data.testcases?.set || []).map(\n        (testcase, index) => {\n          return saveTestcases({\n            inputSchema: inputData,\n            path,\n            testcase,\n            index\n          });\n        }\n      );\n\n      await Promise.all([...promiseWriteCode, ...promiseWriteTestCase]);\n    } catch (error) {\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async submit(data: ChallengeSubmitInput) {\n    const { content, functionName, languageId, slug, domainId } = data;\n    try {\n      const basePath = process.env.BASE_PATH;\n      const userId = \"hieunguyen-123\";\n      const challengePath = `${basePath}/challenges/${domainId}/${slug}`;\n      const userSolvePath = `${basePath}/user-solve/${slug}/${userId}`;\n      const time = performance.now();\n      const result = await codeExecutor.runCode({\n        code: languageConfigs[languageId].genSolution(content, functionName),\n        language: languageId,\n        userSolvePath,\n        challengePath\n      });\n      if (result.error) {\n        return {\n          result: null,\n          error: result.error\n        };\n      }\n      this.logger.info(result);\n      this.logger.info(`time take : ${(performance.now() - time) / 1000}s`);\n\n      return { result: result.data.tests };\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  getChallengeWhereUnique({ id, slug, domainId }: KChallengeWhereUniqueInput) {\n    if (id) return { id };\n    return { slug_domainId: { slug, domainId } };\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class ChallengeMutations {}\n","export default function decodeBase64(code: string): string {\n  return Buffer.from(code, 'base64').toString('ascii');\n}\n","import {\n  genCplusplus,\n  genPython,\n  genJavascript,\n  genJavascriptSolution,\n  genCplusplusModule,\n  genCplusplusSolution,\n  genOutput,\n} from '@koj/code-gen';\nimport saveCode from './save-code.util';\nimport path from 'path';\n\nexport const languageConfigs = {\n  javascript: {\n    gen: genJavascriptFile,\n    genSolution: genJavascriptSolution,\n    name: 'javascript',\n    extension: 'js',\n  },\n  python: {\n    gen: genPython,\n    name: 'python',\n    extension: 'py',\n  },\n  cplusplus: {\n    gen: genCplusPlusFile,\n    genModule: genCplusplusModule,\n    genSolution: genCplusplusSolution,\n    name: 'cplusplus',\n    extension: 'cpp',\n  },\n  output: {\n    gen: genOutputFile,\n    name: 'output',\n    extension: 'js',\n  },\n};\n\nfunction genJavascriptFile({ inputData, domainId, slug, path }) {\n  const codegen = genJavascript(inputData);\n  return saveCode(path, `main.js`, codegen, false);\n}\n\nfunction genCplusPlusFile({ inputData, domainId, slug, path }) {\n  const codegen = genCplusplus(inputData);\n\n  return Promise.all([\n    saveCode(path, `main.cpp`, codegen.main, false),\n    saveCode(path, 'solution.h', codegen.lib, false),\n  ]);\n}\n\nfunction genOutputFile({ inputData, domainId, slug, path }) {\n  const codegen = genOutput(inputData);\n  return saveCode(path, `output.js`, codegen, false);\n}\n","import path from 'path';\n\nimport { mkdir, writeFile } from 'fs/promises';\n\nimport decodeBase64 from './decode-base64';\n\nexport default async function saveCode(\n  folderPath: string,\n  fileName: string,\n  code: string,\n  base64: boolean,\n) {\n  const folderPromises: Array<Promise<string>> = [];\n  folderPromises.push(mkdir(`${folderPath}`, { recursive: true }));\n  const folders = ['input', 'output'];\n  const status = ['show', 'hide'];\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true })),\n    ),\n  );\n\n  await Promise.all(folderPromises);\n  const promisesToKeep = [];\n  promisesToKeep.push(\n    base64\n      ? writeFile(path.join(folderPath, fileName), decodeBase64(code))\n      : writeFile(path.join(folderPath, fileName), code),\n  );\n\n  await Promise.all(promisesToKeep);\n  Promise.resolve();\n}\n","import del from 'del';\nimport { mkdir } from 'fs/promises';\n\nexport default async function saveFolder(folderPath: string) {\n  await del(`${folderPath}/*`, { force: true });\n  const folderPromises: Array<Promise<string>> = [];\n  folderPromises.push(mkdir(`${folderPath}`, { recursive: true }));\n  const folders = ['input', 'output'];\n  const status = ['show', 'hide'];\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true })),\n    ),\n  );\n\n  await Promise.all(folderPromises);\n}\n","import { writeFile } from 'fs/promises';\n\nimport { transformInput } from './transform-input.util';\n\nexport default async function saveTestcases({ inputSchema, path, testcase, index }) {\n  console.log('save testcase');\n  const transformInputResult = transformInput(inputSchema, testcase);\n\n  const inputPath = `${path}/input/${testcase.type || 'show'}/${index}.in`;\n  const outputPath = `${path}/output/${testcase.type || 'show'}/${index}.out`;\n\n  return Promise.all([\n    writeFile(inputPath, transformInputResult),\n    writeFile(outputPath, testcase.expectedOutput),\n  ]);\n}\n","import fs from 'fs';\nconst ws = fs.createWriteStream('./newtransform.in');\n\nconst inputSchema = {\n  name: 'custom',\n  structs: [\n    {\n      name: 'a struct',\n      comment: 'A struct for the example',\n      fields: [\n        {\n          name: 'listt',\n          comment: 'an listt',\n          type: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n          formatStyle: 'DEFAULT',\n        },\n      ],\n    },\n  ],\n  inputs: [\n    {\n      name: 'size',\n      comment: 'size',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'a struct',\n      comment: 'a struct',\n      type: { main: 'OBJECT', structName: 'a struct' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'sizex',\n      comment: 'sizex',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'list',\n      comment: 'a list of structs',\n      type: {\n        main: 'ARRAY',\n        encapsulated: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n      },\n      formatStyle: 'DEFAULT',\n    },\n  ],\n  output: {\n    name: 'output',\n    comment: 'a list of structs',\n    type: {\n      main: 'ARRAY',\n      encapsulated: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n    },\n    formatStyle: 'DEFAULT',\n  },\n};\n\nconst testcases = [\n  {\n    inputs: [\n      { value: 5, key: '1' },\n      { value: { listt: [1, 2, 3] }, key: '2' },\n      { value: 5, key: '3' },\n      {\n        value: [\n          [1, 2, 3],\n          [1, 4, 5],\n        ],\n        key: '4',\n      },\n    ],\n    output: '',\n  },\n];\n\nexport function transformInput(inputSchema, testcase) {\n  const resultLine = [];\n  function canBeInlined(type) {\n    const canBeInlinedType = ['INTEGER', 'CHAR'];\n    return canBeInlinedType.includes(type?.main);\n  }\n\n  function fitsInOneLine({ data, inputSchema, structs = [] }) {\n    const fitsInOneLineType = ['INTEGER', 'CHAR', 'STRING'];\n    if (fitsInOneLineType.includes(inputSchema.type.main)) return [true, data];\n\n    if (inputSchema.type.main === 'ARRAY') {\n      const isFit = canBeInlined(inputSchema.type.encapsulated);\n      if (isFit) {\n        return [true, data.join(' ')];\n      }\n      //   ws.write((data.length || inputSchema.size) + '\\n');\n      resultLine.push(data.length || inputSchema.size);\n      return [false, null];\n    }\n\n    if (inputSchema.type.main === 'OBJECT') {\n      const struct = structs.find(\n        (struct) => struct.name === inputSchema.type.structName,\n      );\n      if (!struct) {\n        throw new Error('khong co struct');\n        return [false, null];\n      }\n\n      for (let i = 0; i < struct.fields.length; i++) {\n        if (!canBeInlined(struct.fields[i].type)) {\n          return [false, null];\n        }\n      }\n      return [true, Object.values(data).join(' ')];\n    }\n\n    throw new Error('khong phai type');\n    return [false, null];\n  }\n\n  function getData2(data, inputSchema, structs?) {\n    console.log(\n      '🚀 ~ file: transform-input.util.ts ~ line 123 ~ getData2 ~ inputSchema',\n      inputSchema,\n    );\n    const [isFit, result] = fitsInOneLine({ data, inputSchema, structs });\n    if (isFit) {\n      //   ws.write(result + '\\n')\n      resultLine.push(result);\n      return;\n    }\n    if (inputSchema.type.main === 'ARRAY') {\n      // ws.write((data.length || inputSchema.size) + '\\n');\n      data.forEach((arr) => {\n        const inputSchema$ = {} as any;\n        inputSchema$.type = inputSchema.type.encapsulated;\n        console.log('inputSchema$', inputSchema$);\n\n        getData2(arr, inputSchema$);\n      });\n    }\n    if (inputSchema.type.main === 'OBJECT') {\n      const struct = structs.find((struct) => struct.name == inputSchema.type.structName);\n      console.log('struct', struct);\n      if (!struct) {\n        throw new Error('khong co struct');\n        return [false, null];\n      }\n      Object.entries(data)\n        .sort()\n        .forEach(([key, value], index) => {\n          const inputSchema$ = struct.fields[index];\n          // console.log(\"inputSchema$\",inputSchema$)\n          getData2(value, inputSchema$);\n        });\n    }\n  }\n\n  function getData(inputs, inputSchema) {\n    console.log(\n      '🚀 ~ file: transform-input.util.ts ~ line 161 ~ getData ~ inputs',\n      inputs,\n    );\n    inputs.forEach((value, index) => {\n      getData2(value, inputSchema.inputs[index], inputSchema.structs);\n    });\n    ws.end();\n  }\n\n  const inputMapping = testcase.inputs.map((input) => input.value);\n  getData(inputMapping, inputSchema);\n  console.log('resultLine', resultLine);\n  return resultLine.join('\\n');\n}\n\n// const result = transformInput(inputSchema, testcases[0]);\n// console.log(result);\nconst inputSchemaTest = {\n  structs: [\n    {\n      name: 'STRUCT1',\n      fields: [{ name: 'a', type: { main: 'INTEGER' }, formatStyle: 'DEFAULT' }],\n    },\n  ],\n  inputs: [\n    {\n      name: 'input1',\n      type: { main: 'OBJECT', structName: 'STRUCT1' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'input2',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n  ],\n  output: {\n    name: '__output__',\n    type: { main: 'OBJECT', structName: 'STRUCT1' },\n    formatStyle: 'DEFAULT',\n  },\n};\nconst testcaseTest = [\n  {\n    inputs: [\n      { value: { a: 1 }, key: '3' },\n      {\n        value: 2,\n        key: '4',\n      },\n    ],\n    output: '',\n  },\n];\nconst result = transformInput(inputSchemaTest, testcaseTest[0]);\nconsole.log(result);\n","import {\n  BadRequestException,\n  Inject,\n  Injectable,\n  OnModuleInit\n} from \"@nestjs/common\";\n\nimport { SagaProcessor } from \"@/saga/saga-processor\";\nimport { SagaDefinitionBuilder } from \"@/saga/saga-builder\";\nimport { ConsumerService } from \"@/kafka/consumer.service\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { COMMENT_CREATE, COMMENT_DELETE } from \"@koj/common/constants\";\n\n@Injectable()\nexport class CommentCreateTransaction implements OnModuleInit {\n  private sagaBuilder: SagaProcessor;\n  constructor(\n    @Inject(\"COMMENT_SERVICE\") private readonly commentClient: ClientNats,\n    private readonly consumerService: ConsumerService,\n    private readonly traceClient: RPCTraceClientProxy\n  ) {}\n\n  async createCommentTransaction() {\n    const sagaDefinitionBuilder = new SagaDefinitionBuilder()\n      .step(\"CreateComment\")\n      .onReply(\n        async (payload) => {\n          const result = await this.traceClient.send(\n            this.commentClient,\n            COMMENT_CREATE,\n            payload\n          );\n          console.log(\n            \"🚀 ~ file: comment-create.transaction.ts ~ line 29 ~ CommentCreateTransaction ~ result\",\n            result\n          );\n          return { _id: result._id };\n        },\n        { passResult: true }\n      )\n      .withCompensation(async (payload) => {\n        // invoke Flight Booking Service API to roll back previosly reserved ticket\n        const _id = payload.result[\"CreateComment\"]._id;\n        await this.traceClient.send(this.commentClient, COMMENT_DELETE, {\n          _id\n        });\n        console.log(\"delete ok\");\n      })\n      .step(\"IncreaseCommentCount\")\n      .onReply(async (payload) => {\n        // throw new BadRequestException('khong the increase');\n      })\n      .withCompensation(async () => {\n        console.log(\"STEP1.2 COMPENSATION\");\n      });\n\n    const sagaProcessor = await sagaDefinitionBuilder.build();\n    return sagaProcessor;\n  }\n\n  async run(payload) {\n    return this.sagaBuilder.start(payload);\n  }\n\n  async onModuleInit() {\n    this.sagaBuilder = await this.createCommentTransaction();\n  }\n}\n","import { Field, ID, Int, ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class Author {\n  @Field(() => Int, { nullable: true })\n  id: number;\n  @Field(() => String, { nullable: true })\n  username?: string;\n  @Field(() => String, { nullable: true })\n  name?: string;\n  @Field(() => String, { nullable: true })\n  avatar?: string;\n}\n\n@ObjectType()\nexport class Vote {\n  @Field(() => Int, { nullable: true })\n  userId?: number;\n  @Field(() => Int, { nullable: true })\n  vote?: number;\n}\n\n@ObjectType()\nexport class Comment {\n  @Field(() => ID, { nullable: false })\n  _id!: string;\n  @Field(() => Int, { nullable: true })\n  challengeId!: number;\n  @Field(() => String, { nullable: true })\n  parentId!: string;\n  @Field(() => Int, { nullable: true })\n  depth?: number;\n  @Field(() => String, { nullable: true })\n  content?: string;\n  @Field(() => [Vote], { nullable: true })\n  votes?: Vote[];\n  @Field(() => Author, { nullable: true })\n  author?: Author;\n  @Field(() => Int, { nullable: true })\n  replyCount: number;\n  @Field(() => Int, { nullable: true })\n  votePoint: number;\n  @Field(() => Int, { nullable: true })\n  currentVote: number;\n}\n","import { natsConfig } from \"@/configs/nats.config\";\nimport { ExecutionContext, Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { CasbinModule } from \"../casbin/casbin.module\";\nimport { enforcerProvider } from \"../casbin/enforcer.provider\";\nimport { PasswordService } from \"../user/password.service\";\nimport { CommentMutationResolver } from \"./comment.mutation\";\nimport { CommentResolver } from \"./comment.resolver\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { CommentCreateTransaction } from \"./comment-create.transaction\";\nimport { KafkaModule } from \"@/kafka/kafka.module\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: \"COMMENT_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"comment_queue\"\n        }\n      },\n      {\n        name: \"USER_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"user_queue\"\n        }\n      }\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error(\"Function not implemented.\");\n      }\n    }),\n    KafkaModule\n  ],\n\n  providers: [\n    CommentResolver,\n    CommentMutationResolver,\n    PasswordService,\n    RPCTraceClientProxy,\n    CommentCreateTransaction\n  ]\n})\nexport class CommentModule {}\n","import { Span, TraceService } from \"nestjs-otel\";\n// import { Span } from '@koj/instrumentation';\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Args, Resolver, ResolveField } from \"@nestjs/graphql\";\nimport { Inject, UseGuards, BadRequestException } from \"@nestjs/common\";\n\nimport {\n  COMMENT_CREATE,\n  COMMENT_UNVOTE,\n  COMMENT_VOTE,\n  USER_FIND_MANY,\n  USER_FIND_UNIQUE\n} from \"@koj/common/constants\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\n\nimport { Comment } from \"./comment.model\";\nimport { CommentMutations } from \"./comment.types\";\nimport { Permissions } from \"../casbin/permisions.decorator\";\nimport { CommentCreateInput } from \"./dto/comment-create.input\";\nimport { CommentVoteInput } from \"./dto/comment-vote.input\";\nimport { CommentCreateResult } from \"./dto/comment-create.model\";\nimport { CommentCreateTransaction } from \"./comment-create.transaction\";\nimport { GqlContext } from \"@/decorators/gql-context.decorator\";\n\n@Resolver(() => CommentMutations)\nexport class CommentMutationResolver {\n  constructor(\n    @Inject(\"COMMENT_SERVICE\") private readonly commentClient: ClientNats,\n    @Inject(\"USER_SERVICE\") private readonly userClient: ClientNats,\n    private traceClient: RPCTraceClientProxy,\n    private commentCreateTransaction: CommentCreateTransaction,\n    private readonly traceService: TraceService\n  ) {}\n\n  @ResolveField(() => CommentCreateResult, { nullable: true })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: \"create\",\n    resource: \"challenge\"\n  })\n  @Span()\n  async create(@Args(\"data\") data: CommentCreateInput, @GqlContext() context) {\n    const { createdById, createdByUsername, createdByName, domainId } =\n      context.data;\n\n    const user = await this.traceClient.send(\n      this.userClient,\n      USER_FIND_UNIQUE,\n      {\n        where: { id: createdById },\n        select: {\n          avatar: true\n        }\n      }\n    );\n\n    const author = {\n      id: createdById,\n      username: createdByUsername,\n      name: createdByName,\n      avatar: user.avatar\n    };\n\n    data.author = author;\n    data.domainId = domainId;\n\n    // case root comment and increase comment count of post service\n    if (typeof data.challengeId !== \"undefined\") {\n      const result: any = await this.commentCreateTransaction.run(data);\n      return result.result?.[\"CreateComment\"];\n    }\n\n    // case internal comment servivices\n    return this.traceClient.send(this.commentClient, COMMENT_CREATE, data);\n  }\n\n  @ResolveField(() => Comment)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: \"create\",\n    resource: \"challenge\"\n  })\n  @Span()\n  async vote(@Args(\"data\") data: CommentVoteInput, @GqlContext() context) {\n    Object.assign(data, context.data);\n    data.userId = context.data?.createdById;\n    return this.traceClient.send(this.commentClient, COMMENT_VOTE, data);\n  }\n\n  @ResolveField(() => Boolean)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: \"create\",\n    resource: \"challenge\"\n  })\n  @Span()\n  async unVote(@Args(\"data\") data: CommentVoteInput, @GqlContext() context) {\n    Object.assign(data, context.data);\n    data.userId = context.data?.createdById;\n    return this.traceClient.send(this.commentClient, COMMENT_UNVOTE, data);\n  }\n}\n","import { Inject, UseGuards } from \"@nestjs/common\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Resolver, Mutation, Query, Args } from \"@nestjs/graphql\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { COMMENT_FIND_MANY_BY_ID } from \"@koj/common/constants\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { Permissions } from \"@/modules/casbin/permisions.decorator\";\n\nimport { Comment } from \"./comment.model\";\nimport { CommentMutations } from \"./comment.types\";\nimport { CommentWhereInput } from \"./dto/comment-where.input\";\nimport { DomainId } from \"@/decorators/gql-domain-id.decorator\";\n\n@Resolver(() => Comment)\nexport class CommentResolver {\n  constructor(\n    @Inject(\"COMMENT_SERVICE\") private readonly commentClient: ClientNats,\n    private traceClient: RPCTraceClientProxy\n  ) {}\n\n  @Mutation(() => CommentMutations, { name: \"comment\", nullable: true })\n  userMutation() {\n    return {};\n  }\n\n  @Query(() => [Comment], { name: \"comments\" })\n  // @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  // @Permissions({\n  //   action: \"read\",\n  //   resource: \"challenge\"\n  // })\n  getComment(@Args(\"where\") where: CommentWhereInput, @DomainId() domainId) {\n    return this.traceClient.send(this.commentClient, COMMENT_FIND_MANY_BY_ID, {\n      ...where,\n      domainId\n    });\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class CommentMutations {}\n","import { Field, Int } from \"@nestjs/graphql\";\nimport { InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class CommentCreateInput {\n  @Field(() => String)\n  content?: string;\n\n  @Field(() => Int, { nullable: true })\n  challengeId?: number;\n\n  @Field(() => String, { nullable: true })\n  parentId?: string;\n\n  @Field(() => Int)\n  depth?: number;\n\n  author: {\n    id: number;\n    username?: string;\n    name?: string;\n    avatar?: string;\n  };\n  domainId: number;\n}\n","import { Field, ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class CommentCreateResult {\n  @Field(() => String)\n  _id?: string;\n}\n","import { Field, Int } from \"@nestjs/graphql\";\nimport { InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class CommentVoteInput {\n  @Field(() => Int, { nullable: true })\n  vote?: number;\n\n  @Field(() => String)\n  commentId: string;\n\n  userId?: number;\n\n  domainId: number;\n}\n","import { Field, InputType, Int } from \"@nestjs/graphql\";\n\n@InputType()\nexport class CommentWhereInput {\n  @Field(() => Int, { nullable: true })\n  challengeId?: number;\n\n  @Field(() => String, { nullable: true })\n  parentId?: string;\n\n  @Field(() => Int, { nullable: true })\n  userId?: number;\n\n  domainId: {\n    equals: number;\n  };\n}\n","import { Module } from '@nestjs/common';\nimport { DomainService } from './domain.service';\n\n@Module({\n  providers: [DomainService],\n  exports: [DomainService],\n})\nexport class DomainModule {}\n","import { Injectable } from '@nestjs/common';\nimport { InjectRedis } from '@liaoliaots/nestjs-redis';\nimport Redis from 'ioredis';\nimport { Domain } from '@koj/generated/domain/domain.model';\nimport { PrismaService } from 'nestjs-prisma';\n\n@Injectable()\nexport class DomainService {\n  constructor(\n    @InjectRedis() private readonly redis: Redis,\n    private prisma: PrismaService,\n  ) {}\n\n  async getDomainFromHost(host: string): Promise<Domain | null> {\n    if (!host) return null;\n\n    const domainCahe = await this.redis.get('domain:' + host);\n    if (domainCahe) return JSON.parse(domainCahe);\n\n    const domain = await this.prisma.domain.findFirst({ where: { domain: host } });\n    await this.redis.setex('domain:' + host, 3600, JSON.stringify(domain));\n    return domain;\n  }\n}\n","import { ExecutionContext, Module } from '@nestjs/common';\n\nimport { GroupService } from './group.service';\nimport { GroupResolver } from './group.resolver';\nimport { CasbinModule } from '../casbin/casbin.module';\nimport { GroupMutationResolver } from './group.mutation';\nimport { enforcerProvider } from '../casbin/enforcer.provider';\n\n@Module({\n  imports: [\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error('Function not implemented.');\n      },\n    }),\n  ],\n  providers: [GroupResolver, GroupMutationResolver, GroupService],\n})\nexport class GroupModule {}\n","import { UseGuards } from '@nestjs/common';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Args, Info, Resolver, ResolveField } from '@nestjs/graphql';\n\nimport { Group } from '@koj/generated/group/group.model';\nimport { GroupCreateInput } from '@koj/generated/group/group-create.input';\nimport { GroupUpdateInput } from '@koj/generated/group/group-update.input';\nimport { GroupWhereUniqueInput } from '@koj/generated/group/group-where-unique.input';\n\nimport { GroupMutations } from './group.type';\nimport { GroupService } from './group.service';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { Permissions } from '../casbin/permisions.decorator';\n\n@Resolver(() => GroupMutations)\nexport class GroupMutationResolver {\n  constructor(private readonly groupService: GroupService) {}\n\n  @ResolveField(() => Group)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'create',\n    resource: 'group',\n    noUniqueInput: true,\n  })\n  createGroup(@Args('data') data: GroupCreateInput) {\n    return this.groupService.create(data);\n  }\n  @ResolveField(() => Group)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'edit',\n    resource: 'group',\n  })\n  async updateGroup(\n    @Args('data') data: GroupUpdateInput,\n    @Args('where') where: GroupWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.groupService.update(data, where, select);\n  }\n\n  @ResolveField(() => Group)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'delete',\n    resource: 'group',\n  })\n  removeGroup(@Args('where') where: GroupWhereUniqueInput) {\n    return this.groupService.remove(where);\n  }\n}\n","import { UseGuards } from '@nestjs/common';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Args, Info, Mutation, Query, Resolver } from '@nestjs/graphql';\n\nimport { Group } from '@koj/generated/group/group.model';\nimport { FindManyGroupArgs } from '@koj/generated/group/find-many-group.args';\nimport { Permissions } from '@/modules/casbin/permisions.decorator';\nimport { GroupWhereUniqueInput } from '@koj/generated/group/group-where-unique.input';\n\nimport { GroupMutations } from './group.type';\nimport { GroupService } from './group.service';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\n\n@Resolver(() => Group)\nexport class GroupResolver {\n  constructor(private readonly groupService: GroupService) {}\n\n  @Mutation(() => GroupMutations, { name: 'group', nullable: true })\n  groupMutations() {\n    return {};\n  }\n\n  @Query(() => [Group], { name: 'groups' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'group',\n    noUniqueInput: true,\n  })\n  groups(@Args() args: FindManyGroupArgs, @Info() info: GraphQLResolveInfo) {\n    const { select } = new PrismaSelect(info).value;\n    return this.groupService.findMany(args, select);\n  }\n\n  @Query(() => Group, { name: 'group' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'group',\n  })\n  findUnique(\n    @Args('where') where: GroupWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.groupService.findUnique(where, select);\n  }\n}\n","import { GroupCreateInput } from '@koj/generated/group/group-create.input';\nimport { GroupUpdateInput } from '@koj/generated/group/group-update.input';\nimport { Injectable } from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\nimport { FindManyGroupArgs } from '@koj/generated/group/find-many-group.args';\nimport { GroupWhereUniqueInput } from '@koj/generated/group/group-where-unique.input';\nimport { GroupWhereInput } from '@koj/generated/group/group-where.input';\n\n@Injectable()\nexport class GroupService {\n  constructor(private prisma: PrismaService) {}\n\n  create(data: GroupCreateInput) {\n    return this.prisma.group.create({ data });\n  }\n\n  findMany(args: FindManyGroupArgs, select: object) {\n    return this.prisma.group.findMany({ ...args, select });\n  }\n\n  findUnique(where: GroupWhereUniqueInput, select: object) {\n    return this.prisma.group.findUnique({ where, select });\n  }\n\n  findFist(where: GroupWhereInput, select: object) {\n    return this.prisma.group.findFirst({ where, select });\n  }\n\n  update(data: GroupUpdateInput, where: GroupWhereUniqueInput, select: object) {\n    return this.prisma.group.update({ data, where, select });\n  }\n\n  remove(where: GroupWhereUniqueInput) {\n    return this.prisma.group.update({ data: { status: 'deleted' }, where });\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class GroupMutations {}\n","import { InputType, Int, Field } from '@nestjs/graphql';\n\n@InputType()\nexport class CreatePostInput {\n  @Field(() => Int, { description: 'Example field (placeholder)' })\n  exampleField: number;\n}\n","import { CreatePostInput } from './create-post.input';\nimport { InputType, Field, Int, PartialType } from '@nestjs/graphql';\n\n@InputType()\nexport class UpdatePostInput extends PartialType(CreatePostInput) {\n  @Field(() => Int)\n  id: number;\n}\n","import { Module } from '@nestjs/common';\nimport { PrismaService } from 'nestjs-prisma';\n\nimport { PostService } from './post.service';\nimport { PostResolver } from './post.resolver';\nimport { PostMutationsResolver } from './post.mutation';\n\n@Module({\n  providers: [PostResolver, PostMutationsResolver, PostService, PrismaService],\n})\nexport class PostModule {}\n","import { Args, Int, ResolveField, Resolver } from '@nestjs/graphql';\n\nimport { Post } from '@koj/generated/post/post.model';\n\nimport { PostMutations } from './post.type';\nimport { PostService } from './post.service';\nimport { CreatePostInput } from './dto/create-post.input';\nimport { UpdatePostInput } from './dto/update-post.input';\n\n@Resolver(() => PostMutations)\nexport class PostMutationsResolver {\n  constructor(private readonly postService: PostService) {}\n\n  @ResolveField(() => Post)\n  createPost(@Args('createPostInput') createPostInput: CreatePostInput) {\n    return this.postService.create(createPostInput);\n  }\n\n  @ResolveField(() => Post)\n  updatePost(@Args('updatePostInput') updatePostInput: UpdatePostInput) {\n    return this.postService.update(updatePostInput.id, updatePostInput);\n  }\n\n  @ResolveField(() => Post)\n  removePost(@Args('id', { type: () => Int }) id: number) {\n    return this.postService.remove(id);\n  }\n}\n","import { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Resolver, Query, Mutation, Args, Info } from '@nestjs/graphql';\n\nimport { Post } from '@koj/generated/post/post.model';\nimport { FindManyPostArgs } from '@koj/generated/post/find-many-post.args';\nimport { FindUniquePostArgs } from '@koj/generated/post/find-unique-post.args';\n\nimport { PostMutations } from './post.type';\nimport { PostService } from './post.service';\n\n@Resolver(() => Post)\nexport class PostResolver {\n  constructor(private readonly postService: PostService) {}\n\n  @Mutation(() => PostMutations, { name: 'post', nullable: true })\n  postMutations() {\n    return {};\n  }\n\n  @Query(() => [Post], { name: 'posts' })\n  findMany(@Args() args: FindManyPostArgs, @Info() info: GraphQLResolveInfo) {\n    const select = new PrismaSelect(info).value;\n    return this.postService.findMany(args, select);\n  }\n\n  @Query(() => Post, { name: 'post' })\n  findUnique(@Args() args: FindUniquePostArgs, @Info() info: GraphQLResolveInfo) {\n    const select = new PrismaSelect(info).value;\n    return this.postService.findUnique(args, select);\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { CreatePostInput } from './dto/create-post.input';\nimport { UpdatePostInput } from './dto/update-post.input';\nimport { FindUniquePostArgs } from '@koj/generated/post/find-unique-post.args';\nimport { FindManyPostArgs } from '@koj/generated/post/find-many-post.args';\nimport { PrismaService } from 'nestjs-prisma';\n\n@Injectable()\nexport class PostService {\n  constructor(private prisma: PrismaService) {}\n  create(createPostInput: CreatePostInput) {\n    return 'This action adds a new post';\n  }\n\n  findMany(args: FindManyPostArgs, select: object) {\n    return this.prisma.post.findMany({ ...args, ...select });\n  }\n\n  findUnique(args: FindUniquePostArgs, select: object) {\n    return this.prisma.post.findUnique({ ...args, ...select });\n  }\n\n  update(id: number, updatePostInput: UpdatePostInput) {\n    return `This action updates a #${id} post`;\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} post`;\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class PostMutations {}\n","import { InputType, Field, PartialType } from '@nestjs/graphql';\nimport { RoleCreateInput as RoleCreateInputGenerated } from '@koj/generated/role/role-create.input';\n\n@InputType()\nexport class RoleCreateInput extends PartialType(RoleCreateInputGenerated) {\n  @Field(() => [RolePolicies], { description: 'Example field (placeholder)' })\n  policies: RolePolicies[];\n}\n\n@InputType()\nexport class RolePolicies {\n  @Field(() => String, { nullable: true })\n  object: string;\n\n  @Field(() => String, { nullable: true })\n  effect: string;\n\n  @Field(() => String, { nullable: true })\n  action: string;\n\n  @Field(() => String, { nullable: true })\n  effectWith: string;\n\n  @Field(() => String, { nullable: true })\n  condition?: string;\n}\n","import { Controller, Get, Req, Headers, Scope } from '@nestjs/common';\nimport { REQUEST } from '@nestjs/core';\nimport { PinoLogger } from 'nestjs-pino';\n\n@Controller('/role')\nexport class RoleController {\n  constructor(private readonly logger: PinoLogger) {}\n\n  @Get()\n  getData() {\n    this.logger.info('hihi');\n  }\n}\n","import { ExecutionContext, Module } from '@nestjs/common';\n\nimport { LoggerModule } from '@/logger/logger.module';\nimport { RoleGroupModule } from '@/modules/casbin/role/role.module';\nimport { PolicyModule } from '@/modules/casbin/policy/policy.module';\n\nimport { RoleService } from './role.service';\nimport { RoleResolver } from './role.resolver';\nimport { CasbinModule } from '../casbin/casbin.module';\nimport { RoleMutationsResolver } from './role.mutation';\nimport { enforcerProvider } from '../casbin/enforcer.provider';\nimport { ClientsModule, Transport } from '@nestjs/microservices';\nimport { natsConfig } from '@/configs/nats.config';\nimport { RPCTraceClientProxy } from '@koj/instrumentation';\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: 'ROLE_SERVICE',\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: 'role_queue',\n        },\n      },\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error('Function not implemented.');\n      },\n    }),\n    PolicyModule,\n    RoleGroupModule,\n    LoggerModule,\n  ],\n\n  providers: [RoleResolver, RoleMutationsResolver, RoleService, RPCTraceClientProxy],\n  exports: [RoleResolver, RoleMutationsResolver, RoleService],\n})\nexport class RoleModule {}\n","import { TraceService } from 'nestjs-otel';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { ClientNats } from '@nestjs/microservices';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { Args, Resolver, ResolveField, Info } from '@nestjs/graphql';\n\nimport { RoleMutations } from '@/modules/casbin/role/role.type';\nimport { Permissions } from '@/modules/casbin/permisions.decorator';\n\nimport { Role } from '@koj/generated/role/role.model';\nimport { RPCTraceClientProxy } from '@koj/instrumentation';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { RoleUpdateInput } from '@koj/generated/role/role-update.input';\nimport { ROLE_CREATE, ROLE_DELETE, ROLE_UPDATE } from '@koj/common/constants';\nimport { RoleWhereUniqueInput } from '@koj/generated/role/role-where-unique.input';\n\nimport { RoleService } from './role.service';\nimport { RoleCreateInput } from './dto/role-create.input';\n\n@Resolver(() => RoleMutations)\nexport class RoleMutationsResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    private readonly roleService: RoleService,\n    private readonly traceService: TraceService,\n    @Inject('ROLE_SERVICE') private readonly commentClient: ClientNats,\n  ) {}\n\n  @ResolveField(() => Role)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'create', resource: 'role' })\n  createRole(@Args('data') data: RoleCreateInput, @Info() info: GraphQLResolveInfo) {\n    const select = new PrismaSelect(info).value;\n    return this.traceClient.send(this.commentClient, ROLE_CREATE, { data, select });\n  }\n\n  @ResolveField(() => Role)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'edit', resource: 'role' })\n  updateRole(\n    @Args('data') data: RoleUpdateInput,\n    @Args('where') where: RoleWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    const payload = { data, where, select };\n    return this.traceClient.send(this.commentClient, ROLE_UPDATE, payload);\n  }\n\n  @ResolveField(() => Role)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'delete', resource: 'role' })\n  removeRole(\n    @Args('where') where: RoleWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(this.commentClient, ROLE_DELETE, { where, select });\n  }\n}\n","// import { Logger } from '@nestjs/common';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { GraphQLResolveInfo } from 'graphql';\nimport { PrismaSelect } from '@paljs/plugins';\nimport { Resolver, Query, Mutation, Args, Info } from '@nestjs/graphql';\n\nimport { Role } from '@koj/generated/role/role.model';\nimport { RoleMutations } from '@/modules/casbin/role/role.type';\nimport { Permissions } from '@/modules/casbin/permisions.decorator';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { FindManyRoleArgs } from '@koj/generated/role/find-many-role.args';\nimport { RoleWhereUniqueInput } from '@koj/generated/role/role-where-unique.input';\n\nimport { RoleService } from './role.service';\nimport { Logger } from '@/logger/logger.service';\nimport { RPCTraceClientProxy } from '@koj/instrumentation';\nimport { ClientNats } from '@nestjs/microservices';\nimport { ROLE_FIND_MANY, ROLE_FIND_UNIQUE } from '@koj/common/constants';\n\n@Resolver(() => Role)\nexport class RoleResolver {\n  constructor(\n    private readonly roleService: RoleService,\n    private readonly logger: Logger,\n    @Inject('ROLE_SERVICE') private readonly roleClient: ClientNats,\n    private traceClient: RPCTraceClientProxy,\n  ) {\n    // this.logger.setContext(RoleResolver.name);\n  }\n\n  @Mutation(() => RoleMutations, { name: 'role', nullable: true })\n  roleMutations() {\n    return {};\n  }\n\n  @Query(() => [Role], { name: 'roles' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'role',\n  })\n  async findMany(@Args() args: FindManyRoleArgs, @Info() info: GraphQLResolveInfo) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(this.roleClient, ROLE_FIND_MANY, { args, select });\n  }\n\n  @Query(() => Role, { name: 'role' })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: 'read',\n    resource: 'role',\n  })\n  findUnique(\n    @Args('where') where: RoleWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(this.roleClient, ROLE_FIND_UNIQUE, { where, select });\n  }\n}\n","import slugify from 'slugify';\nimport { Prisma } from '@prisma/client';\nimport { PrismaService } from 'nestjs-prisma';\nimport {\n  ConflictException,\n  Injectable,\n  NotFoundException,\n  NotImplementedException,\n} from '@nestjs/common';\n\nimport { RoleCreateInput } from './dto/role-create.input';\nimport { RoleUpdateInput } from '@koj/generated/role/role-update.input';\nimport { FindManyRoleArgs } from '@koj/generated/role/find-many-role.args';\nimport { RoleWhereUniqueInput } from '@koj/generated/role/role-where-unique.input';\n\nimport { RoleGroupService } from '../casbin/role/role.service';\nimport { PolicyService } from '../casbin/policy/policy.service';\nimport { Logger } from '@/logger/logger.service';\nimport { context, trace } from '@opentelemetry/api';\nimport { HttpStatus } from '@nestjs/common';\n\n@Injectable()\nexport class RoleService {\n  constructor(\n    private readonly casbinPolicyService: PolicyService,\n    private readonly roleGroupService: RoleGroupService,\n    private readonly prisma: PrismaService,\n  ) {}\n\n  async createRole(data: RoleCreateInput, select?: object) {\n    const { createdById, createdByName, domainId } = data;\n    const key = slugify(data.name);\n\n    const checkExist = await this.prisma.role.findFirst({\n      where: { key, domainId },\n      select: { id: true },\n    });\n    if (checkExist) {\n      throw new ConflictException({\n        message: 'Role already exists',\n        statusCode: HttpStatus.CONFLICT,\n      });\n    }\n\n    data.policies.forEach((element) => {\n      Object.assign(element, {\n        domainId,\n        createdById,\n        createdByName,\n        subject: key,\n      });\n    });\n\n    await this.casbinPolicyService.createPolicies(data.policies);\n\n    // TODO handle when inherit- multiple role\n    await this.roleGroupService.createRole(\n      {\n        domainId,\n        rule: key,\n        role: key,\n      },\n      { id: true },\n    );\n\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const { policies, ...dataCreate } = data;\n    dataCreate.key = key;\n\n    return this.prisma.role.create({ data: dataCreate, ...select });\n  }\n\n  findMany(args: FindManyRoleArgs, select: object) {\n    return this.prisma.role.findMany({ ...args, select });\n  }\n\n  async findUnique(where: RoleWhereUniqueInput, select: Prisma.RoleSelect) {\n    return this.prisma.role.findUnique({ where, select }).then((data) => {\n      if (!data) {\n        throw new NotFoundException({\n          message: 'Role not exists',\n          statusCode: HttpStatus.NOT_FOUND,\n        });\n      }\n      return data;\n    });\n  }\n\n  async update(data: RoleUpdateInput, where: RoleWhereUniqueInput, select: object) {\n    const { domainId } = data;\n    const key = slugify(data.name);\n\n    const checkExistResult = await this.prisma.role.findFirst({\n      where: { key, domainId },\n      select: { id: true, name: true },\n    });\n    if (checkExistResult && data.name === checkExistResult.name) {\n      throw new ConflictException({\n        message: 'Role is exists',\n        statusCode: HttpStatus.CONFLICT,\n      });\n    }\n\n    data.updatedAt = new Date().toISOString();\n    return this.prisma.role.update({ data, where, select });\n    // return this.prisma.role.update({ data, where, select }).catch((error) => {\n    //   if (error instanceof Prisma.PrismaClientKnownRequestError) {\n    //     if (error.code === 'P2025') {\n    //       throw new NotFoundException({\n    //         message: 'Role not exists',\n    //         statusCode: HttpStatus.NOT_FOUND,\n    //       });\n    //     }\n    //   }\n    //   throw error;\n    // });\n  }\n\n  remove(where: RoleWhereUniqueInput, select: object) {\n    return this.prisma.role.delete({ where, select }).catch((error) => {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === 'P2025') {\n          throw new NotFoundException();\n        }\n      }\n      throw error;\n    });\n  }\n}\n","import { ExecutionContext, Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\n\nimport { natsConfig } from \"@/configs/nats.config\";\nimport { LoggerModule } from \"@/logger/logger.module\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\n\nimport { CasbinModule } from \"../casbin/casbin.module\";\nimport { SubmissionStatisticResolver } from \"./submission-statistic.resolver\";\nimport { enforcerProvider } from \"../casbin/enforcer.provider\";\nimport { SubmissionStatisticMutationsResolver } from \"./submission-statistic.mutation\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: \"SUBMISSION_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"submissionStatistic_queue\"\n        }\n      }\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error(\"Function not implemented.\");\n      }\n    }),\n    LoggerModule\n  ],\n  providers: [\n    SubmissionStatisticResolver,\n    SubmissionStatisticMutationsResolver,\n    RPCTraceClientProxy\n  ]\n})\nexport class SubmissionStatisticModule {}\n","import { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { Inject, UseGuards } from \"@nestjs/common\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Args, Info, ResolveField, Resolver } from \"@nestjs/graphql\";\n\nimport { SUBMISSION_DELETE } from \"@koj/common/constants\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { SubmissionStatistic } from \"@koj/generated/submission-statistic/submission-statistic.model\";\n\nimport { SubmissionStatisticMutations } from \"./submission-statistic.type\";\nimport { Permissions } from \"../casbin/permisions.decorator\";\nimport { SubmissionStatisticWhereUniqueInput } from \"@koj/generated/submission-statistic/submission-statistic-where-unique.input\";\n\n@Resolver(() => SubmissionStatisticMutations)\nexport class SubmissionStatisticMutationsResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"SUBMISSION_SERVICE\")\n    private readonly submissionStatisticClient: ClientNats\n  ) {}\n\n  @ResolveField(() => SubmissionStatistic)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"delete\", resource: \"submissionStatistic\" })\n  removeSubmissionStatistic(\n    @Args(\"where\") where: SubmissionStatisticWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(\n      this.submissionStatisticClient,\n      SUBMISSION_DELETE,\n      {\n        where,\n        select\n      }\n    );\n  }\n}\n","import { Inject } from \"@nestjs/common\";\nimport { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Resolver, Query, Mutation, Args, Info } from \"@nestjs/graphql\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { SubmissionStatistic } from \"@koj/generated/submission-statistic/submission-statistic.model\";\nimport {\n  SUBMISSION_FIND_MANY_BY_USER,\n  SUBMISSION_STATISTIC_FIND_MANY\n} from \"@koj/common/constants\";\nimport { FindManySubmissionStatisticArgs } from \"@koj/generated/submission-statistic/find-many-submission-statistic.args\";\n\nimport { DomainId } from \"@/decorators/gql-domain-id.decorator\";\n\nimport { SubmissionStatisticMutations } from \"./submission-statistic.type\";\n\n@Resolver(() => SubmissionStatistic)\nexport class SubmissionStatisticResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"SUBMISSION_SERVICE\")\n    private readonly submissionStatisticClient: ClientNats\n  ) {}\n\n  @Mutation(() => SubmissionStatisticMutations, {\n    name: \"submissionStatistic\",\n    nullable: true\n  })\n  submissionStatisticMutations() {\n    return {};\n  }\n\n  @Query(() => [SubmissionStatistic], { name: \"submissions_rank\" })\n  findMany(\n    @Args() args: FindManySubmissionStatisticArgs,\n    @Info() info: GraphQLResolveInfo,\n    @DomainId() domainId\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    args.where = args.where || {};\n    args.where.domainId = domainId;\n    return this.traceClient.send(\n      this.submissionStatisticClient,\n      SUBMISSION_STATISTIC_FIND_MANY,\n      {\n        args,\n        select\n      }\n    );\n  }\n}\n","import { ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class SubmissionStatisticMutations {}\n","import { ExecutionContext, Module } from \"@nestjs/common\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\n\nimport { natsConfig } from \"@/configs/nats.config\";\nimport { LoggerModule } from \"@/logger/logger.module\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\n\nimport { CasbinModule } from \"../casbin/casbin.module\";\nimport { SubmissionResolver } from \"./submission.resolver\";\nimport { enforcerProvider } from \"../casbin/enforcer.provider\";\nimport { SubmissionMutationsResolver } from \"./submission.mutation\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: \"SUBMISSION_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"submission_queue\"\n        }\n      }\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error(\"Function not implemented.\");\n      }\n    }),\n    LoggerModule\n  ],\n  providers: [\n    SubmissionResolver,\n    SubmissionMutationsResolver,\n    RPCTraceClientProxy\n  ]\n})\nexport class SubmissionModule {}\n","import { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { Inject, UseGuards } from \"@nestjs/common\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Args, Info, ResolveField, Resolver } from \"@nestjs/graphql\";\n\nimport { SUBMISSION_DELETE } from \"@koj/common/constants\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { Submission } from \"@koj/generated/submission/submission.model\";\n\nimport { SubmissionMutations } from \"./submission.type\";\nimport { Permissions } from \"../casbin/permisions.decorator\";\nimport { SubmissionWhereUniqueInput } from \"@koj/generated/submission/submission-where-unique.input\";\n\n@Resolver(() => SubmissionMutations)\nexport class SubmissionMutationsResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"SUBMISSION_SERVICE\") private readonly submissionClient: ClientNats\n  ) {}\n\n  @ResolveField(() => Submission)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"delete\", resource: \"submission\" })\n  removeSubmission(\n    @Args(\"where\") where: SubmissionWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(this.submissionClient, SUBMISSION_DELETE, {\n      where,\n      select\n    });\n  }\n}\n","import { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Inject, UseGuards } from \"@nestjs/common\";\nimport { Resolver, Query, Mutation, Args, Info } from \"@nestjs/graphql\";\n\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { SUBMISSION_FIND_MANY_BY_USER } from \"@koj/common/constants\";\nimport { Submission } from \"@koj/generated/submission/submission.model\";\nimport { FindManySubmissionArgs } from \"@koj/generated/submission/find-many-submission.args\";\n\nimport { DomainId } from \"@/decorators/gql-domain-id.decorator\";\n\nimport { SubmissionMutations } from \"./submission.type\";\nimport { Permissions } from \"../casbin/permisions.decorator\";\nimport { GqlContext } from \"@/decorators/gql-context.decorator\";\n\n@Resolver(() => Submission)\nexport class SubmissionResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject(\"SUBMISSION_SERVICE\") private readonly submissionClient: ClientNats\n  ) {}\n\n  @Mutation(() => SubmissionMutations, { name: \"submission\", nullable: true })\n  submissionMutations() {\n    return {};\n  }\n\n  @Query(() => [Submission], { name: \"submissions_by_user\" })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({\n    action: \"read\",\n    resource: \"challenge\"\n  })\n  findMany(\n    @Args() args: FindManySubmissionArgs,\n    @Info() info: GraphQLResolveInfo,\n    @GqlContext() context\n  ) {\n    const { where } = context;\n    const { select } = new PrismaSelect(info).value;\n    args.where = args.where || {};\n    args.where.domainId = where.domainId;\n    args.where.createdById = where.createdById;\n    return this.traceClient.send(\n      this.submissionClient,\n      SUBMISSION_FIND_MANY_BY_USER,\n      {\n        args,\n        select\n      }\n    );\n  }\n}\n","import { ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class SubmissionMutations {}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class UserPublic {\n  @Field(() => String, { nullable: false })\n  email!: string;\n\n  @Field(() => String, { nullable: false, defaultValue: '' })\n  username!: string;\n\n  @Field(() => String, { nullable: false, defaultValue: '' })\n  firstname!: string;\n\n  @Field(() => String, { nullable: false, defaultValue: '' })\n  lastname!: string;\n\n  @Field(() => Date, { nullable: false })\n  createdAt!: Date;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\n\n@InputType()\nexport class KUserWhereUniqueInput {\n  @Field(() => String, { nullable: true })\n  username?: string;\n}\n","import { Injectable } from '@nestjs/common';\nimport { ConfigService } from '@nestjs/config';\nimport { hash, compare } from 'bcrypt';\nimport { SecurityConfig } from '@/interfaces/config.interface';\n\n@Injectable()\nexport class PasswordService {\n  get bcryptSaltRounds(): string | number {\n    const securityConfig = this.configService.get<SecurityConfig>('security');\n    const saltOrRounds = securityConfig.bcryptSaltOrRound;\n\n    return Number.isInteger(Number(saltOrRounds))\n      ? Number(saltOrRounds)\n      : saltOrRounds;\n  }\n\n  constructor(private configService: ConfigService) {}\n\n  validatePassword(password: string, hashedPassword: string): Promise<boolean> {\n    return compare(password, hashedPassword);\n  }\n\n  hashPassword(password: string): Promise<string> {\n    return hash(password, this.bcryptSaltRounds);\n  }\n}\n","import { ExecutionContext, Module } from \"@nestjs/common\";\n\nimport { UserService } from \"./user.service\";\nimport { UserResolver } from \"./user.resolver\";\nimport { PasswordService } from \"./password.service\";\nimport { UserMutationResolver } from \"./user.mutation\";\nimport { CasbinModule } from \"../casbin/casbin.module\";\nimport { enforcerProvider } from \"../casbin/enforcer.provider\";\nimport { ClientsModule, Transport } from \"@nestjs/microservices\";\nimport { natsConfig } from \"@/configs/nats.config\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\n\n@Module({\n  imports: [\n    ClientsModule.register([\n      {\n        name: \"USER_SERVICE\",\n        transport: Transport.NATS,\n        options: {\n          servers: natsConfig.servers,\n          queue: \"user_queue\"\n        }\n      }\n    ]),\n    CasbinModule.register({\n      enforcerProvider: enforcerProvider,\n      userFromContext: function (context: ExecutionContext): string {\n        throw new Error(\"Function not implemented.\");\n      }\n    })\n  ],\n  providers: [\n    UserResolver,\n    UserMutationResolver,\n    UserService,\n    PasswordService,\n    RPCTraceClientProxy\n  ]\n})\nexport class UserModule {}\n","import { PrismaSelect } from '@paljs/plugins';\nimport { ClientNats } from '@nestjs/microservices';\nimport { Inject, UseGuards } from '@nestjs/common';\nimport { Args, Int, Resolver, ResolveField, Info } from '@nestjs/graphql';\n\nimport { USER_CREATE } from '@koj/common/constants';\nimport { User } from '@koj/generated/user/user.model';\nimport { RPCTraceClientProxy } from '@koj/instrumentation';\nimport { GqlAuthGuard, GqlPolicyGuard } from '@koj/common/guards';\nimport { Permissions } from '@/modules/casbin/permisions.decorator';\nimport { UserCreateInput } from '@koj/generated/user/user-create.input';\nimport { UserUpdateInput } from '@koj/generated/user/user-update.input';\nimport { UserWhereUniqueInput } from '@koj/generated/user/user-where-unique.input';\n\nimport { GqlContext } from '@/decorators/gql-context.decorator';\n\nimport { UserMutations } from './user.type';\nimport { GraphQLResolveInfo } from 'graphql';\n\n@Resolver(() => UserMutations)\nexport class UserMutationResolver {\n  constructor(\n    private traceClient: RPCTraceClientProxy,\n    @Inject('USER_SERVICE') private readonly userClient: ClientNats,\n  ) {}\n\n  @ResolveField(() => User)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'create', resource: 'user' })\n  createUser(\n    @Args('data') data: UserCreateInput,\n    @Info() info: GraphQLResolveInfo,\n    @GqlContext() context,\n  ) {\n    const defaultFields = { User: { id: true } };\n    const { select } = new PrismaSelect(info, { defaultFields }).value;\n    Object.assign(data, context.data);\n    return this.traceClient.send(this.userClient, USER_CREATE, { data, select });\n  }\n\n  @ResolveField(() => User)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'edit', resource: 'user' })\n  updateUser(\n    @Args('data') data: UserUpdateInput,\n    @Args('where') where: UserWhereUniqueInput,\n    @GqlContext() context,\n  ) {\n    Object.assign(data, context.data);\n    return this.traceClient.send(this.userClient, USER_CREATE, { data, where });\n  }\n\n  @ResolveField(() => User)\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: 'delete', resource: 'user' })\n  removeUser(@Args('id', { type: () => Int }) id: number) {\n    return this.traceClient.send(this.userClient, USER_CREATE, { id });\n  }\n}\n","import { GraphQLResolveInfo } from \"graphql\";\nimport { PrismaSelect } from \"@paljs/plugins\";\nimport { ClientNats } from \"@nestjs/microservices\";\nimport { Inject, UseGuards } from \"@nestjs/common\";\nimport { Resolver, Query, Mutation, Args, Info } from \"@nestjs/graphql\";\n\nimport { User } from \"@koj/generated/user/user.model\";\nimport { RPCTraceClientProxy } from \"@koj/instrumentation\";\nimport { GqlAuthGuard, GqlPolicyGuard } from \"@koj/common/guards\";\nimport { Permissions } from \"@/modules/casbin/permisions.decorator\";\nimport { FindManyUserArgs } from \"@koj/generated/user/find-many-user.args\";\nimport {\n  USER_FIND_MANY,\n  USER_FIND_UNIQUE_BY_USERNAME\n} from \"@koj/common/constants\";\n\nimport { GqlContext } from \"@/decorators/gql-context.decorator\";\nimport { DomainId } from \"@/decorators/gql-domain-id.decorator\";\n\nimport { UserMutations } from \"./user.type\";\nimport { UserService } from \"./user.service\";\nimport { UserPublic } from \"./dto/user-public.model\";\nimport { KUserWhereUniqueInput } from \"./dto/user-where-unique.input\";\n\n@Resolver(() => User)\nexport class UserResolver {\n  constructor(\n    @Inject(\"USER_SERVICE\") private readonly userClient: ClientNats,\n    private traceClient: RPCTraceClientProxy,\n    private readonly userService: UserService\n  ) {}\n\n  @Mutation(() => UserMutations, { name: \"user\", nullable: true })\n  userMutation() {\n    return {};\n  }\n\n  @Query(() => [User], { name: \"users\" })\n  @UseGuards(GqlAuthGuard, GqlPolicyGuard)\n  @Permissions({ action: \"read\", resource: \"user\" })\n  users(\n    @Args() args: FindManyUserArgs,\n    @Info() info: GraphQLResolveInfo,\n    @GqlContext() context\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    args.where = args.where || {};\n    args.where.domainId = context.where.domainId;\n    return this.traceClient.send(this.userClient, USER_FIND_MANY, {\n      args,\n      select\n    });\n  }\n\n  @Query(() => UserPublic, { name: \"user_public\", nullable: true })\n  getUserByUsername(\n    @Args(\"where\") where: KUserWhereUniqueInput,\n    @Info() info: GraphQLResolveInfo,\n    @DomainId() domainId\n  ) {\n    const { select } = new PrismaSelect(info).value;\n    return this.traceClient.send(\n      this.userClient,\n      USER_FIND_UNIQUE_BY_USERNAME,\n      {\n        where: { username_domainId: { username: where.username, domainId } },\n        select\n      }\n    );\n  }\n}\n","import { nanoid } from \"nanoid\";\nimport { Prisma } from \"@prisma/client\";\nimport { BadRequestException, Injectable } from \"@nestjs/common\";\nimport { PrismaService } from \"nestjs-prisma\";\nimport { UserInputError } from \"apollo-server-express\";\n\nimport { User } from \"@koj/generated/user/user.model\";\nimport { UserCreateInput } from \"@koj/generated/user/user-create.input\";\nimport { UserUpdateInput } from \"@koj/generated/user/user-update.input\";\nimport { FindManyUserArgs } from \"@koj/generated/user/find-many-user.args\";\nimport { UserWhereUniqueInput } from \"@koj/generated/user/user-where-unique.input\";\n\nimport { PasswordService } from \"./password.service\";\nimport { UserEmailDomainIdCompoundUniqueInput } from \"@koj/generated/user/user-email-domain-id-compound-unique.input\";\nimport { UserUsernameDomainIdCompoundUniqueInput } from \"@koj/generated/user/user-username-domain-id-compound-unique.input\";\n\n@Injectable()\nexport class UserService {\n  constructor(\n    private prisma: PrismaService,\n    private passwordService: PasswordService\n  ) {}\n  async create(data: UserCreateInput, select?: object): Promise<User> {\n    const isExisted = await this.getUserByEmail(\n      { email: data.email, domainId: data.domainId },\n      { id: true }\n    );\n    if (isExisted) {\n      throw new BadRequestException(\"User with that email already exists\");\n    }\n\n    try {\n      const hashedPassword = await this.passwordService.hashPassword(\n        data.password || nanoid(8)\n      );\n      const user = (await this.prisma.user.create({\n        data: { ...data, password: hashedPassword },\n        select\n      })) as User;\n\n      return user;\n    } catch (error) {\n      throw new BadRequestException(\"Fail when create user\");\n    }\n  }\n\n  async createByUsername(\n    data: UserCreateInput,\n    select?: object\n  ): Promise<User> {\n    let username = data.username;\n    const users: any = await this.prisma.user.findMany({\n      where: {\n        username: { startsWith: data.username },\n        domainId: data.domainId\n      },\n      select: { username: true },\n      orderBy: { username: \"desc\" }\n    });\n\n    if (users.findIndex((user) => user.username === data.username) > -1) {\n      const [string, digit] = users[0].username.split(/(\\d+)(?!.*\\d)/);\n      username = `${string}${Number(digit) + 1}`;\n    }\n    console.log(username);\n    try {\n      const hashedPassword = await this.passwordService.hashPassword(\n        data.password || nanoid(8)\n      );\n\n      const user = (await this.prisma.user.create({\n        data: { ...data, password: hashedPassword, username },\n        select\n      })) as User;\n\n      return user;\n    } catch (error) {\n      throw new BadRequestException(\"Fail when create user\");\n    }\n  }\n\n  findMany(args: FindManyUserArgs, select: object, context?: any) {\n    const { where = {}, ...args$ } = args;\n    where.domainId = context.where.domainId;\n    return this.prisma.user.findMany({ where, ...args$, ...select });\n  }\n\n  findUnique(where: UserWhereUniqueInput, select?: Prisma.UserSelect) {\n    return this.prisma.user.findUnique({ where, select });\n  }\n\n  getUserById(id: number, select?: Prisma.UserSelect) {\n    return this.prisma.user.findUnique({ where: { id }, select });\n  }\n\n  getUserByUsername(\n    username_domainId: UserUsernameDomainIdCompoundUniqueInput,\n    select?: Prisma.UserSelect\n  ) {\n    const whereCondition = { username_domainId };\n    return this.prisma.user.findUnique({ where: whereCondition, select });\n  }\n\n  getUserByEmail(\n    email_domainId: UserEmailDomainIdCompoundUniqueInput,\n    select?: Prisma.UserSelect\n  ) {\n    const whereCondition: UserWhereUniqueInput = { email_domainId };\n    return this.prisma.user.findUnique({ where: whereCondition, select });\n  }\n\n  update(data: UserUpdateInput, where: UserWhereUniqueInput): Promise<User> {\n    return this.prisma.user.update({ data, where });\n  }\n\n  remove(id: number) {\n    return `This action removes a #${id} user`;\n  }\n}\n","import { ObjectType } from '@nestjs/graphql';\n\n@ObjectType()\nexport class UserMutations {}\n","import { SagaProcessor } from './saga-processor';\n\nexport enum STEP_PHASE {\n  STEP_FORWARD = 'STEP_FORWARD',\n  STEP_BACKWARD = 'STEP_BACKWARD',\n}\n\nexport type SagaMessage<P = any> = {\n  payload: P;\n  saga: {\n    index: number;\n    phase: STEP_PHASE;\n  };\n};\n\nexport type Command<P = any, RES = any> = (payload?: P) => Promise<RES>;\n\nexport type SagaDefinition = {\n  channelName: string;\n  phases: { [key in STEP_PHASE]?: { command: Command; options? } };\n};\n\nexport class SagaDefinitionBuilder {\n  index: number | null = null;\n  sagaDefinitions: SagaDefinition[] = [];\n\n  step(channelName: string): SagaDefinitionBuilder {\n    this.index = this.index === null ? 0 : this.index + 1;\n    this.sagaDefinitions = [...this.sagaDefinitions, { channelName, phases: {} }];\n    return this;\n  }\n\n  onReply(command: Command, options?): SagaDefinitionBuilder {\n    this.checkIndex();\n    this.sagaDefinitions[this.index!].phases[STEP_PHASE.STEP_FORWARD] = {\n      command,\n      options,\n    };\n    return this;\n  }\n\n  withCompensation(command: Command): SagaDefinitionBuilder {\n    this.checkIndex();\n    this.sagaDefinitions[this.index!].phases[STEP_PHASE.STEP_BACKWARD] = {\n      command,\n    };\n    return this;\n  }\n\n  private checkIndex() {\n    if (this.index === null) {\n      throw new Error(\n        'before build saga definition, you need to invoke step function before',\n      );\n    }\n  }\n\n  async build(): Promise<SagaProcessor> {\n    const sagaProcessor = new SagaProcessor(this.sagaDefinitions);\n    await sagaProcessor.init();\n    return sagaProcessor;\n  }\n}\n","import { Kafka, ITopicConfig, Consumer } from 'kafkajs';\nimport { Subject, lastValueFrom, take } from 'rxjs';\nimport { SagaDefinition, SagaMessage, STEP_PHASE } from './saga-builder';\n\nconst kafka = new Kafka({ brokers: ['localhost:29092'] });\nconst admin = kafka.admin();\n\nexport class SagaProcessor {\n  producer = kafka.producer();\n  consumer = kafka.consumer({ groupId: 'saga' });\n  myObservable$ = new Subject();\n\n  constructor(private sagaDefinitions: SagaDefinition[]) {}\n\n  async init() {\n    await admin.connect();\n    await this.producer.connect();\n    await this.consumer.connect();\n\n    const stepTopics = this.sagaDefinitions.map((definition) => definition.channelName);\n\n    // create all channles (topics) for all saga steps\n    // const kafkaTopics = stepTopics.map((topic): ITopicConfig => ({ topic }));\n    // await admin.createTopics({ topics: kafkaTopics });\n    console.log('Saga topics created successfully');\n\n    // subscribe to all created channels of all saga steps\n    for (const topic of stepTopics) {\n      await this.consumer.subscribe({ topic });\n    }\n\n    await this.consumer.run({\n      eachMessage: async ({ topic, message, partition }) => {\n        console.log({\n          value: message.value.toString(),\n          topic: topic.toString(),\n          partition: partition.toString(),\n        });\n        const sagaMessage = JSON.parse(message.value?.toString()) as SagaMessage;\n\n        const { saga, payload } = sagaMessage;\n        const { index, phase } = saga;\n\n        console.log('=== message recived', saga, payload);\n\n        switch (phase) {\n          case STEP_PHASE.STEP_FORWARD: {\n            const { command, options = {} } =\n              this.sagaDefinitions[index].phases[STEP_PHASE.STEP_FORWARD];\n            try {\n              const result = await command(payload);\n              if (options.passResult)\n                payload.result[`${this.sagaDefinitions[index].channelName}`] = result;\n              await this.makeStepForward(index + 1, payload);\n            } catch (e) {\n              console.log(\n                '🚀 ~ file: saga-processor.ts ~ line 54 ~ SagaProcessor ~ eachMessage: ~ e',\n                e,\n              );\n              await this.makeStepBackward(index - 1, payload);\n            }\n            return;\n          }\n          case STEP_PHASE.STEP_BACKWARD: {\n            const stepBackward =\n              this.sagaDefinitions[index].phases[STEP_PHASE.STEP_BACKWARD].command;\n            await stepBackward(payload);\n            await this.makeStepBackward(index - 1, payload);\n            return;\n          }\n          default: {\n            console.log('UNAVAILBLE SAGA PHASE');\n          }\n        }\n      },\n    });\n  }\n\n  async makeStepForward(index: number, payload: any) {\n    if (index >= this.sagaDefinitions.length) {\n      console.log('====> Saga finished and transaction successful');\n      return this.myObservable$.next(payload);\n      // return payload;\n    }\n    const message = {\n      payload,\n      saga: { index, phase: STEP_PHASE.STEP_FORWARD },\n    };\n    await this.producer.send({\n      topic: this.sagaDefinitions[index].channelName,\n      messages: [{ value: JSON.stringify(message) }],\n    });\n  }\n\n  async makeStepBackward(index: number, payload: any) {\n    if (index < 0) {\n      console.log('===> Saga finished and transaction rolled back');\n      return;\n    }\n    await this.producer.send({\n      topic: this.sagaDefinitions[index].channelName,\n      messages: [\n        {\n          value: JSON.stringify({\n            payload,\n            saga: { index, phase: STEP_PHASE.STEP_BACKWARD },\n          }),\n        },\n      ],\n    });\n  }\n\n  async start(payload: any) {\n    console.log('Saga started');\n    payload.result = {};\n    this.makeStepForward(0, payload);\n    return lastValueFrom(this.myObservable$.pipe(take(1)));\n  }\n}\n","import { trace } from '@opentelemetry/api';\n\nexport const tracer = trace.getTracer('graphql-api-gateway', '2.2.2');\nconsole.log('🚀 ~ file: tracer.ts ~ line 4 ~ tracer', tracer);\n","import * as crypto from 'crypto';\n\n/**\n * initialization vector must 16 byte for 128, 192, 256\n * key must 32 byte\n */\n\nexport interface encryptedData {\n  iv: string;\n  data: string;\n}\n\nconst algorithm = 'aes-256-cbc';\nconst initVector = crypto.randomBytes(16);\nconst defaultSecret = process.env.CRYPTO_AUTH_SECRET || 'defaultSecret!';\nconst defaultKey = crypto.scryptSync(defaultSecret, 'salt', 32);\n\nexport function encrypt(data: string, securitykey: Buffer = defaultKey) {\n  const cipher = crypto.createCipheriv(algorithm, securitykey, initVector);\n  let encryptedData = cipher.update(data, 'utf-8', 'hex');\n  encryptedData += cipher.final('hex');\n  return { iv: initVector.toString('hex'), data: encryptedData };\n  [];\n}\n\nexport function decrypt(encryptedData: encryptedData, securitykey: Buffer = defaultKey) {\n  const { iv, data } = encryptedData;\n  const initVector = Buffer.from(iv, 'hex');\n  const decipher = crypto.createDecipheriv(algorithm, securitykey, initVector);\n  let decryptedData = decipher.update(data, 'hex', 'utf-8');\n  decryptedData += decipher.final('utf-8');\n  return decryptedData;\n}\n","import { camelToSnakeCase } from './string.util';\n\nexport function transformObjectToQuery(object, prefix) {\n  return Object.keys(object)\n    .map((obj) => {\n      console.log('🚀 ~ file: database-query.ts ~ line 6 ~ .map ~ obj', obj);\n      const column = camelToSnakeCase(obj);\n      return prefix ? `${prefix}.\"${column}\"` : column;\n    })\n    .join(', ');\n}\n","export function getValueAfterLastChar(string: string, char: string) {\n  return string.substring(string.lastIndexOf(char) + 1);\n}\n\nexport function camelToSnakeCase(str) {\n  return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class ChallengeCount {\n\n    @Field(() => Int, {nullable:false})\n    topicTags?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { ChallengeCreateacceptedLanguagesInput } from '../prisma/challenge-createaccepted-languages.input';\nimport { GraphQLJSON } from 'graphql-type-json';\nimport { Float } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { ChallengeCreatecompanyTagsInput } from '../prisma/challenge-createcompany-tags.input';\nimport { TopicTagCreateNestedManyWithoutChallengesInput } from '../topic-tag/topic-tag-create-nested-many-without-challenges.input';\n\n@InputType()\nexport class ChallengeCreateInput {\n\n    @Field(() => String, {nullable:false})\n    title!: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => ChallengeCreateacceptedLanguagesInput, {nullable:true})\n    acceptedLanguages?: ChallengeCreateacceptedLanguagesInput;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    languages?: any;\n\n    @Field(() => Float, {nullable:true})\n    rate?: number;\n\n    @Field(() => String, {nullable:true})\n    audience?: string;\n\n    @Field(() => String, {nullable:true})\n    functionName?: string;\n\n    @HideField()\n    commentCount?: number;\n\n    @Field(() => Int, {nullable:true})\n    contestId?: number;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => Int, {nullable:true})\n    categoryId?: number;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @Field(() => ChallengeCreatecompanyTagsInput, {nullable:true})\n    companyTags?: ChallengeCreatecompanyTagsInput;\n\n    @Field(() => TopicTagCreateNestedManyWithoutChallengesInput, {nullable:true})\n    topicTags?: TopicTagCreateNestedManyWithoutChallengesInput;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    contributors?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    examples?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    inputs?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    structs?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    types?: any;\n\n    @Field(() => String, {nullable:false})\n    output!: string;\n\n    @Field(() => Int, {nullable:true})\n    highlightSolutionCount?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    hint?: any;\n\n    @Field(() => Boolean, {nullable:true})\n    isFavorited?: boolean;\n\n    @Field(() => Int, {nullable:true})\n    officalSolutionCount?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    testcases?: any;\n\n    @Field(() => String, {nullable:true})\n    difficulty?: string;\n\n    @Field(() => Int, {nullable:true})\n    likes?: number;\n\n    @Field(() => Int, {nullable:true})\n    dislikes?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    solutions?: any;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { ChallengeWhereInput } from './challenge-where.input';\n\n@InputType()\nexport class ChallengeListRelationFilter {\n\n    @Field(() => ChallengeWhereInput, {nullable:true})\n    every?: ChallengeWhereInput;\n\n    @Field(() => ChallengeWhereInput, {nullable:true})\n    some?: ChallengeWhereInput;\n\n    @Field(() => ChallengeWhereInput, {nullable:true})\n    none?: ChallengeWhereInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\nimport { TopicTagOrderByRelationAggregateInput } from '../topic-tag/topic-tag-order-by-relation-aggregate.input';\n\n@InputType()\nexport class ChallengeOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    title?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    slug?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    acceptedLanguages?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    languages?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    rate?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    audience?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    functionName?: keyof typeof SortOrder;\n\n    @HideField()\n    commentCount?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    contestId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    status?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    categoryId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    description?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    companyTags?: keyof typeof SortOrder;\n\n    @Field(() => TopicTagOrderByRelationAggregateInput, {nullable:true})\n    topicTags?: TopicTagOrderByRelationAggregateInput;\n\n    @Field(() => SortOrder, {nullable:true})\n    contributors?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    examples?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    inputs?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    structs?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    types?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    output?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    highlightSolutionCount?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    hint?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    isFavorited?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    officalSolutionCount?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    testcases?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    difficulty?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    likes?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    dislikes?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    solutions?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdByName?: keyof typeof SortOrder;\n\n    @HideField()\n    createdAt?: keyof typeof SortOrder;\n\n    @HideField()\n    updatedAt?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum ChallengeScalarFieldEnum {\n    id = \"id\",\n    title = \"title\",\n    slug = \"slug\",\n    acceptedLanguages = \"acceptedLanguages\",\n    languages = \"languages\",\n    rate = \"rate\",\n    audience = \"audience\",\n    functionName = \"functionName\",\n    commentCount = \"commentCount\",\n    contestId = \"contestId\",\n    status = \"status\",\n    categoryId = \"categoryId\",\n    description = \"description\",\n    companyTags = \"companyTags\",\n    contributors = \"contributors\",\n    examples = \"examples\",\n    inputs = \"inputs\",\n    structs = \"structs\",\n    types = \"types\",\n    output = \"output\",\n    highlightSolutionCount = \"highlightSolutionCount\",\n    hint = \"hint\",\n    isFavorited = \"isFavorited\",\n    officalSolutionCount = \"officalSolutionCount\",\n    testcases = \"testcases\",\n    difficulty = \"difficulty\",\n    likes = \"likes\",\n    dislikes = \"dislikes\",\n    solutions = \"solutions\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdByName = \"createdByName\",\n    createdAt = \"createdAt\",\n    updatedAt = \"updatedAt\"\n}\n\n\nregisterEnumType(ChallengeScalarFieldEnum, { name: 'ChallengeScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class ChallengeSlugDomainIdCompoundUniqueInput {\n\n    @Field(() => String, {nullable:false})\n    slug!: string;\n\n    @HideField()\n    domainId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { ChallengeUpdateacceptedLanguagesInput } from '../prisma/challenge-updateaccepted-languages.input';\nimport { GraphQLJSON } from 'graphql-type-json';\nimport { Float } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { ChallengeUpdatecompanyTagsInput } from '../prisma/challenge-updatecompany-tags.input';\nimport { TopicTagUpdateManyWithoutChallengesNestedInput } from '../topic-tag/topic-tag-update-many-without-challenges-nested.input';\n\n@InputType()\nexport class ChallengeUpdateInput {\n\n    @Field(() => String, {nullable:true})\n    title?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => ChallengeUpdateacceptedLanguagesInput, {nullable:true})\n    acceptedLanguages?: ChallengeUpdateacceptedLanguagesInput;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    languages?: any;\n\n    @Field(() => Float, {nullable:true})\n    rate?: number;\n\n    @Field(() => String, {nullable:true})\n    audience?: string;\n\n    @Field(() => String, {nullable:true})\n    functionName?: string;\n\n    @HideField()\n    commentCount?: number;\n\n    @Field(() => Int, {nullable:true})\n    contestId?: number;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => Int, {nullable:true})\n    categoryId?: number;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @Field(() => ChallengeUpdatecompanyTagsInput, {nullable:true})\n    companyTags?: ChallengeUpdatecompanyTagsInput;\n\n    @Field(() => TopicTagUpdateManyWithoutChallengesNestedInput, {nullable:true})\n    topicTags?: TopicTagUpdateManyWithoutChallengesNestedInput;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    contributors?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    examples?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    inputs?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    structs?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    types?: any;\n\n    @Field(() => String, {nullable:true})\n    output?: string;\n\n    @Field(() => Int, {nullable:true})\n    highlightSolutionCount?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    hint?: any;\n\n    @Field(() => Boolean, {nullable:true})\n    isFavorited?: boolean;\n\n    @Field(() => Int, {nullable:true})\n    officalSolutionCount?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    testcases?: any;\n\n    @Field(() => String, {nullable:true})\n    difficulty?: string;\n\n    @Field(() => Int, {nullable:true})\n    likes?: number;\n\n    @Field(() => Int, {nullable:true})\n    dislikes?: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    solutions?: any;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { ChallengeSlugDomainIdCompoundUniqueInput } from './challenge-slug-domain-id-compound-unique.input';\n\n@InputType()\nexport class ChallengeWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => ChallengeSlugDomainIdCompoundUniqueInput, {nullable:true})\n    slug_domainId?: ChallengeSlugDomainIdCompoundUniqueInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { IntNullableListFilter } from '../prisma/int-nullable-list-filter.input';\nimport { JsonNullableFilter } from '../prisma/json-nullable-filter.input';\nimport { Float } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { TopicTagListRelationFilter } from '../topic-tag/topic-tag-list-relation-filter.input';\n\n@InputType()\nexport class ChallengeWhereInput {\n\n    @Field(() => [ChallengeWhereInput], {nullable:true})\n    AND?: Array<ChallengeWhereInput>;\n\n    @Field(() => [ChallengeWhereInput], {nullable:true})\n    OR?: Array<ChallengeWhereInput>;\n\n    @Field(() => [ChallengeWhereInput], {nullable:true})\n    NOT?: Array<ChallengeWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    title?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => IntNullableListFilter, {nullable:true})\n    acceptedLanguages?: IntNullableListFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    languages?: JsonNullableFilter;\n\n    @Field(() => Float, {nullable:true})\n    rate?: number;\n\n    @Field(() => String, {nullable:true})\n    audience?: string;\n\n    @Field(() => String, {nullable:true})\n    functionName?: string;\n\n    @HideField()\n    commentCount?: number;\n\n    @Field(() => Int, {nullable:true})\n    contestId?: number;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => Int, {nullable:true})\n    categoryId?: number;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @Field(() => IntNullableListFilter, {nullable:true})\n    companyTags?: IntNullableListFilter;\n\n    @Field(() => TopicTagListRelationFilter, {nullable:true})\n    topicTags?: TopicTagListRelationFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    contributors?: JsonNullableFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    examples?: JsonNullableFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    inputs?: JsonNullableFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    structs?: JsonNullableFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    types?: JsonNullableFilter;\n\n    @Field(() => String, {nullable:true})\n    output?: string;\n\n    @Field(() => Int, {nullable:true})\n    highlightSolutionCount?: number;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    hint?: JsonNullableFilter;\n\n    @Field(() => Boolean, {nullable:true})\n    isFavorited?: boolean;\n\n    @Field(() => Int, {nullable:true})\n    officalSolutionCount?: number;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    testcases?: JsonNullableFilter;\n\n    @Field(() => String, {nullable:true})\n    difficulty?: string;\n\n    @Field(() => Int, {nullable:true})\n    likes?: number;\n\n    @Field(() => Int, {nullable:true})\n    dislikes?: number;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    solutions?: JsonNullableFilter;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\nimport { Float } from '@nestjs/graphql';\nimport { TopicTag } from '../topic-tag/topic-tag.model';\nimport { HideField } from '@nestjs/graphql';\nimport { ChallengeCount } from './challenge-count.output';\n\n@ObjectType()\nexport class Challenge {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false})\n    title!: string;\n\n    @Field(() => String, {nullable:false})\n    slug!: string;\n\n    @Field(() => [Int], {nullable:true})\n    acceptedLanguages!: Array<number>;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    languages!: any | null;\n\n    @Field(() => Float, {nullable:true})\n    rate!: number | null;\n\n    @Field(() => String, {nullable:false,defaultValue:'onlyme'})\n    audience!: string;\n\n    @Field(() => String, {nullable:true})\n    functionName!: string | null;\n\n    @Field(() => Int, {nullable:true})\n    commentCount!: number | null;\n\n    @Field(() => Int, {nullable:true})\n    contestId!: number | null;\n\n    @Field(() => String, {nullable:false,defaultValue:'disabled'})\n    status!: string;\n\n    @Field(() => Int, {nullable:true})\n    categoryId!: number | null;\n\n    @Field(() => String, {nullable:true})\n    description!: string | null;\n\n    @Field(() => [Int], {nullable:true})\n    companyTags!: Array<number>;\n\n    @Field(() => [TopicTag], {nullable:true})\n    topicTags?: Array<TopicTag>;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    contributors!: any | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    examples!: any | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    inputs!: any | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    structs!: any | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    types!: any | null;\n\n    @Field(() => String, {nullable:false})\n    output!: string;\n\n    @Field(() => Int, {nullable:true})\n    highlightSolutionCount!: number | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    hint!: any | null;\n\n    @Field(() => Boolean, {nullable:false,defaultValue:false})\n    isFavorited!: boolean;\n\n    @Field(() => Int, {nullable:true})\n    officalSolutionCount!: number | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    testcases!: any | null;\n\n    @Field(() => String, {nullable:false,defaultValue:'easy'})\n    difficulty!: string;\n\n    @Field(() => Int, {nullable:false,defaultValue:0})\n    likes!: number;\n\n    @Field(() => Int, {nullable:false,defaultValue:0})\n    dislikes!: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    solutions!: any | null;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => String, {nullable:true})\n    createdByName!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n\n    @Field(() => Date, {nullable:true})\n    updatedAt!: Date | null;\n\n    @Field(() => ChallengeCount, {nullable:false})\n    _count?: ChallengeCount;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { ChallengeWhereInput } from './challenge-where.input';\nimport { ChallengeOrderByWithRelationInput } from './challenge-order-by-with-relation.input';\nimport { ChallengeWhereUniqueInput } from './challenge-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { ChallengeScalarFieldEnum } from './challenge-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyChallengeArgs {\n\n    @Field(() => ChallengeWhereInput, {nullable:true})\n    where?: ChallengeWhereInput;\n\n    @Field(() => [ChallengeOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<ChallengeOrderByWithRelationInput>;\n\n    @Field(() => ChallengeWhereUniqueInput, {nullable:true})\n    cursor?: ChallengeWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [ChallengeScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof ChallengeScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { GroupWhereInput } from './group-where.input';\nimport { GroupOrderByWithRelationInput } from './group-order-by-with-relation.input';\nimport { GroupWhereUniqueInput } from './group-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { GroupScalarFieldEnum } from './group-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyGroupArgs {\n\n    @Field(() => GroupWhereInput, {nullable:true})\n    where?: GroupWhereInput;\n\n    @Field(() => [GroupOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<GroupOrderByWithRelationInput>;\n\n    @Field(() => GroupWhereUniqueInput, {nullable:true})\n    cursor?: GroupWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [GroupScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof GroupScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class GroupCreateInput {\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class GroupOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    name?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    key?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    status?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    description?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdByName?: keyof typeof SortOrder;\n\n    @HideField()\n    createdAt?: keyof typeof SortOrder;\n\n    @HideField()\n    updatedAt?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum GroupScalarFieldEnum {\n    id = \"id\",\n    name = \"name\",\n    key = \"key\",\n    status = \"status\",\n    description = \"description\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdByName = \"createdByName\",\n    createdAt = \"createdAt\",\n    updatedAt = \"updatedAt\"\n}\n\n\nregisterEnumType(GroupScalarFieldEnum, { name: 'GroupScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class GroupUpdateInput {\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class GroupWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class GroupWhereInput {\n\n    @Field(() => [GroupWhereInput], {nullable:true})\n    AND?: Array<GroupWhereInput>;\n\n    @Field(() => [GroupWhereInput], {nullable:true})\n    OR?: Array<GroupWhereInput>;\n\n    @Field(() => [GroupWhereInput], {nullable:true})\n    NOT?: Array<GroupWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Group {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    name!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    key!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'disabled'})\n    status!: string;\n\n    @Field(() => String, {nullable:true})\n    description!: string | null;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => String, {nullable:true})\n    createdByName!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n\n    @Field(() => Date, {nullable:true})\n    updatedAt!: Date | null;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { PolicyWhereInput } from './policy-where.input';\nimport { PolicyOrderByWithRelationInput } from './policy-order-by-with-relation.input';\nimport { PolicyWhereUniqueInput } from './policy-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { PolicyScalarFieldEnum } from './policy-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyPolicyArgs {\n\n    @Field(() => PolicyWhereInput, {nullable:true})\n    where?: PolicyWhereInput;\n\n    @Field(() => [PolicyOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<PolicyOrderByWithRelationInput>;\n\n    @Field(() => PolicyWhereUniqueInput, {nullable:true})\n    cursor?: PolicyWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [PolicyScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof PolicyScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyCreateInput {\n\n    @HideField()\n    ptype?: string;\n\n    @Field(() => String, {nullable:true})\n    subject?: string;\n\n    @Field(() => String, {nullable:true})\n    object?: string;\n\n    @Field(() => String, {nullable:true})\n    action?: string;\n\n    @Field(() => String, {nullable:true})\n    effect?: string;\n\n    @Field(() => String, {nullable:true})\n    effectWith?: string;\n\n    @Field(() => String, {nullable:true})\n    condition?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @HideField()\n    ptype?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    subject?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    object?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    action?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    effect?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    effectWith?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    condition?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdByName?: keyof typeof SortOrder;\n\n    @HideField()\n    createdAt?: keyof typeof SortOrder;\n\n    @HideField()\n    updatedAt?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum PolicyScalarFieldEnum {\n    id = \"id\",\n    ptype = \"ptype\",\n    subject = \"subject\",\n    object = \"object\",\n    action = \"action\",\n    effect = \"effect\",\n    effectWith = \"effectWith\",\n    condition = \"condition\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdByName = \"createdByName\",\n    createdAt = \"createdAt\",\n    updatedAt = \"updatedAt\"\n}\n\n\nregisterEnumType(PolicyScalarFieldEnum, { name: 'PolicyScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyUpdateInput {\n\n    @HideField()\n    ptype?: string;\n\n    @Field(() => String, {nullable:true})\n    subject?: string;\n\n    @Field(() => String, {nullable:true})\n    object?: string;\n\n    @Field(() => String, {nullable:true})\n    action?: string;\n\n    @Field(() => String, {nullable:true})\n    effect?: string;\n\n    @Field(() => String, {nullable:true})\n    effectWith?: string;\n\n    @Field(() => String, {nullable:true})\n    condition?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class PolicyWhereInput {\n\n    @Field(() => [PolicyWhereInput], {nullable:true})\n    AND?: Array<PolicyWhereInput>;\n\n    @Field(() => [PolicyWhereInput], {nullable:true})\n    OR?: Array<PolicyWhereInput>;\n\n    @Field(() => [PolicyWhereInput], {nullable:true})\n    NOT?: Array<PolicyWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @HideField()\n    ptype?: string;\n\n    @Field(() => String, {nullable:true})\n    subject?: string;\n\n    @Field(() => String, {nullable:true})\n    object?: string;\n\n    @Field(() => String, {nullable:true})\n    action?: string;\n\n    @Field(() => String, {nullable:true})\n    effect?: string;\n\n    @Field(() => String, {nullable:true})\n    effectWith?: string;\n\n    @Field(() => String, {nullable:true})\n    condition?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Policy {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @HideField()\n    ptype!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    subject!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    object!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    action!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'allow'})\n    effect!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'organize'})\n    effectWith!: string;\n\n    @Field(() => String, {nullable:true})\n    condition!: string | null;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => String, {nullable:true})\n    createdByName!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n\n    @Field(() => Date, {nullable:true})\n    updatedAt!: Date | null;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { PostWhereInput } from './post-where.input';\nimport { PostOrderByWithRelationInput } from './post-order-by-with-relation.input';\nimport { PostWhereUniqueInput } from './post-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { PostScalarFieldEnum } from './post-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyPostArgs {\n\n    @Field(() => PostWhereInput, {nullable:true})\n    where?: PostWhereInput;\n\n    @Field(() => [PostOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<PostOrderByWithRelationInput>;\n\n    @Field(() => PostWhereUniqueInput, {nullable:true})\n    cursor?: PostWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [PostScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof PostScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { PostWhereUniqueInput } from './post-where-unique.input';\n\n@ArgsType()\nexport class FindUniquePostArgs {\n\n    @Field(() => PostWhereUniqueInput, {nullable:false})\n    where!: PostWhereUniqueInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\n\n@InputType()\nexport class PostOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    title?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    content?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    published?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    authorId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    domainId?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum PostScalarFieldEnum {\n    id = \"id\",\n    title = \"title\",\n    content = \"content\",\n    published = \"published\",\n    authorId = \"authorId\",\n    domainId = \"domainId\"\n}\n\n\nregisterEnumType(PostScalarFieldEnum, { name: 'PostScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class PostWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class PostWhereInput {\n\n    @Field(() => [PostWhereInput], {nullable:true})\n    AND?: Array<PostWhereInput>;\n\n    @Field(() => [PostWhereInput], {nullable:true})\n    OR?: Array<PostWhereInput>;\n\n    @Field(() => [PostWhereInput], {nullable:true})\n    NOT?: Array<PostWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    title?: string;\n\n    @Field(() => String, {nullable:true})\n    content?: string;\n\n    @Field(() => Boolean, {nullable:true})\n    published?: boolean;\n\n    @Field(() => Int, {nullable:true})\n    authorId?: number;\n\n    @Field(() => Int, {nullable:true})\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Post {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false})\n    title!: string;\n\n    @Field(() => String, {nullable:true})\n    content!: string | null;\n\n    @Field(() => Boolean, {nullable:true,defaultValue:false})\n    published!: boolean | null;\n\n    @Field(() => Int, {nullable:true})\n    authorId!: number | null;\n\n    @Field(() => Int, {nullable:false,defaultValue:0})\n    domainId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class ChallengeCreateacceptedLanguagesInput {\n\n    @Field(() => [Int], {nullable:false})\n    set!: Array<number>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class ChallengeCreatecompanyTagsInput {\n\n    @Field(() => [Int], {nullable:false})\n    set!: Array<number>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class ChallengeUpdateacceptedLanguagesInput {\n\n    @Field(() => [Int], {nullable:true})\n    set?: Array<number>;\n\n    @Field(() => [Int], {nullable:true})\n    push?: Array<number>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class ChallengeUpdatecompanyTagsInput {\n\n    @Field(() => [Int], {nullable:true})\n    set?: Array<number>;\n\n    @Field(() => [Int], {nullable:true})\n    push?: Array<number>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class IntNullableListFilter {\n\n    @Field(() => [Int], {nullable:true})\n    equals?: Array<number>;\n\n    @Field(() => Int, {nullable:true})\n    has?: number;\n\n    @Field(() => [Int], {nullable:true})\n    hasEvery?: Array<number>;\n\n    @Field(() => [Int], {nullable:true})\n    hasSome?: Array<number>;\n\n    @Field(() => Boolean, {nullable:true})\n    isEmpty?: boolean;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\n\n@InputType()\nexport class JsonNullableFilter {\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    equals?: any;\n\n    @Field(() => [String], {nullable:true})\n    path?: Array<string>;\n\n    @Field(() => String, {nullable:true})\n    string_contains?: string;\n\n    @Field(() => String, {nullable:true})\n    string_starts_with?: string;\n\n    @Field(() => String, {nullable:true})\n    string_ends_with?: string;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    array_contains?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    array_starts_with?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    array_ends_with?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    lt?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    lte?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    gt?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    gte?: any;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    not?: any;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum SortOrder {\n    asc = \"asc\",\n    desc = \"desc\"\n}\n\n\nregisterEnumType(SortOrder, { name: 'SortOrder', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleGroupCreateInput {\n\n    @Field(() => String, {nullable:true})\n    ptype?: string;\n\n    @Field(() => String, {nullable:true})\n    role?: string;\n\n    @Field(() => String, {nullable:true})\n    rule?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleGroupUpdateInput {\n\n    @Field(() => String, {nullable:true})\n    ptype?: string;\n\n    @Field(() => String, {nullable:true})\n    role?: string;\n\n    @Field(() => String, {nullable:true})\n    rule?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleGroupWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@ObjectType()\nexport class RoleGroup {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false,defaultValue:'g'})\n    ptype!: string;\n\n    @Field(() => String, {nullable:true})\n    role!: string | null;\n\n    @Field(() => String, {nullable:true})\n    rule!: string | null;\n\n    @HideField()\n    domainId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { RoleWhereInput } from './role-where.input';\nimport { RoleOrderByWithRelationInput } from './role-order-by-with-relation.input';\nimport { RoleWhereUniqueInput } from './role-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { RoleScalarFieldEnum } from './role-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyRoleArgs {\n\n    @Field(() => RoleWhereInput, {nullable:true})\n    where?: RoleWhereInput;\n\n    @Field(() => [RoleOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<RoleOrderByWithRelationInput>;\n\n    @Field(() => RoleWhereUniqueInput, {nullable:true})\n    cursor?: RoleWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [RoleScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof RoleScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleCreateInput {\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    key?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    name?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    description?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdByName?: keyof typeof SortOrder;\n\n    @HideField()\n    createdAt?: keyof typeof SortOrder;\n\n    @HideField()\n    updatedAt?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum RoleScalarFieldEnum {\n    id = \"id\",\n    key = \"key\",\n    name = \"name\",\n    description = \"description\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdByName = \"createdByName\",\n    createdAt = \"createdAt\",\n    updatedAt = \"updatedAt\"\n}\n\n\nregisterEnumType(RoleScalarFieldEnum, { name: 'RoleScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleUpdateInput {\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class RoleWhereInput {\n\n    @Field(() => [RoleWhereInput], {nullable:true})\n    AND?: Array<RoleWhereInput>;\n\n    @Field(() => [RoleWhereInput], {nullable:true})\n    OR?: Array<RoleWhereInput>;\n\n    @Field(() => [RoleWhereInput], {nullable:true})\n    NOT?: Array<RoleWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    key?: string;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    description?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Role {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    key!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'none'})\n    name!: string;\n\n    @Field(() => String, {nullable:true})\n    description!: string | null;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => String, {nullable:true})\n    createdByName!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n\n    @Field(() => Date, {nullable:true})\n    updatedAt!: Date | null;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { SubmissionStatisticWhereInput } from './submission-statistic-where.input';\nimport { SubmissionStatisticOrderByWithRelationInput } from './submission-statistic-order-by-with-relation.input';\nimport { SubmissionStatisticWhereUniqueInput } from './submission-statistic-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { SubmissionStatisticScalarFieldEnum } from './submission-statistic-scalar-field.enum';\n\n@ArgsType()\nexport class FindManySubmissionStatisticArgs {\n\n    @Field(() => SubmissionStatisticWhereInput, {nullable:true})\n    where?: SubmissionStatisticWhereInput;\n\n    @Field(() => [SubmissionStatisticOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<SubmissionStatisticOrderByWithRelationInput>;\n\n    @Field(() => SubmissionStatisticWhereUniqueInput, {nullable:true})\n    cursor?: SubmissionStatisticWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [SubmissionStatisticScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof SubmissionStatisticScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionStatisticCreatedByIdChallengeIdCompoundUniqueInput {\n\n    @HideField()\n    createdById!: number;\n\n    @Field(() => Int, {nullable:false})\n    challengeId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionStatisticOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    challengeId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    languageId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    score?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    submitCount?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    info?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    lastSubmitTime?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum SubmissionStatisticScalarFieldEnum {\n    id = \"id\",\n    challengeId = \"challengeId\",\n    languageId = \"languageId\",\n    score = \"score\",\n    submitCount = \"submitCount\",\n    info = \"info\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    lastSubmitTime = \"lastSubmitTime\"\n}\n\n\nregisterEnumType(SubmissionStatisticScalarFieldEnum, { name: 'SubmissionStatisticScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { SubmissionStatisticCreatedByIdChallengeIdCompoundUniqueInput } from './submission-statistic-created-by-id-challenge-id-compound-unique.input';\n\n@InputType()\nexport class SubmissionStatisticWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => SubmissionStatisticCreatedByIdChallengeIdCompoundUniqueInput, {nullable:true})\n    createdById_challengeId?: SubmissionStatisticCreatedByIdChallengeIdCompoundUniqueInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { JsonNullableFilter } from '../prisma/json-nullable-filter.input';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionStatisticWhereInput {\n\n    @Field(() => [SubmissionStatisticWhereInput], {nullable:true})\n    AND?: Array<SubmissionStatisticWhereInput>;\n\n    @Field(() => [SubmissionStatisticWhereInput], {nullable:true})\n    OR?: Array<SubmissionStatisticWhereInput>;\n\n    @Field(() => [SubmissionStatisticWhereInput], {nullable:true})\n    NOT?: Array<SubmissionStatisticWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => Int, {nullable:true})\n    challengeId?: number;\n\n    @Field(() => String, {nullable:true})\n    languageId?: string;\n\n    @Field(() => Int, {nullable:true})\n    score?: number;\n\n    @Field(() => Int, {nullable:true})\n    submitCount?: number;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    info?: JsonNullableFilter;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => Date, {nullable:true})\n    lastSubmitTime?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\nimport { HideField } from '@nestjs/graphql';\n\n@ObjectType()\nexport class SubmissionStatistic {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => Int, {nullable:true})\n    challengeId!: number | null;\n\n    @Field(() => String, {nullable:true})\n    languageId!: string | null;\n\n    @Field(() => Int, {nullable:false,defaultValue:0})\n    score!: number;\n\n    @Field(() => Int, {nullable:false,defaultValue:0})\n    submitCount!: number;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    info!: any | null;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    lastSubmitTime!: Date;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { SubmissionWhereInput } from './submission-where.input';\nimport { SubmissionOrderByWithRelationInput } from './submission-order-by-with-relation.input';\nimport { SubmissionWhereUniqueInput } from './submission-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { SubmissionScalarFieldEnum } from './submission-scalar-field.enum';\n\n@ArgsType()\nexport class FindManySubmissionArgs {\n\n    @Field(() => SubmissionWhereInput, {nullable:true})\n    where?: SubmissionWhereInput;\n\n    @Field(() => [SubmissionOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<SubmissionOrderByWithRelationInput>;\n\n    @Field(() => SubmissionWhereUniqueInput, {nullable:true})\n    cursor?: SubmissionWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [SubmissionScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof SubmissionScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    languageId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    challengeId?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    content?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    result?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    info?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    ip?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    shared?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdAt?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum SubmissionScalarFieldEnum {\n    id = \"id\",\n    languageId = \"languageId\",\n    challengeId = \"challengeId\",\n    content = \"content\",\n    result = \"result\",\n    info = \"info\",\n    ip = \"ip\",\n    shared = \"shared\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdAt = \"createdAt\"\n}\n\n\nregisterEnumType(SubmissionScalarFieldEnum, { name: 'SubmissionScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { JsonNullableFilter } from '../prisma/json-nullable-filter.input';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class SubmissionWhereInput {\n\n    @Field(() => [SubmissionWhereInput], {nullable:true})\n    AND?: Array<SubmissionWhereInput>;\n\n    @Field(() => [SubmissionWhereInput], {nullable:true})\n    OR?: Array<SubmissionWhereInput>;\n\n    @Field(() => [SubmissionWhereInput], {nullable:true})\n    NOT?: Array<SubmissionWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    languageId?: string;\n\n    @Field(() => Int, {nullable:true})\n    challengeId?: number;\n\n    @Field(() => String, {nullable:true})\n    content?: string;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    result?: JsonNullableFilter;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    info?: JsonNullableFilter;\n\n    @Field(() => String, {nullable:true})\n    ip?: string;\n\n    @Field(() => Boolean, {nullable:true})\n    shared?: boolean;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => Date, {nullable:true})\n    createdAt?: Date | string;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\nimport { HideField } from '@nestjs/graphql';\n\n@ObjectType()\nexport class Submission {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:true})\n    languageId!: string | null;\n\n    @Field(() => Int, {nullable:true})\n    challengeId!: number | null;\n\n    @Field(() => String, {nullable:false})\n    content!: string;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    result!: any | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    info!: any | null;\n\n    @Field(() => String, {nullable:true})\n    ip!: string | null;\n\n    @Field(() => Boolean, {nullable:false,defaultValue:false})\n    shared!: boolean;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@ObjectType()\nexport class TopicTagCount {\n\n    @Field(() => Int, {nullable:false})\n    challenges?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagCreateWithoutChallengesInput } from './topic-tag-create-without-challenges.input';\nimport { TopicTagCreateOrConnectWithoutChallengesInput } from './topic-tag-create-or-connect-without-challenges.input';\nimport { TopicTagWhereUniqueInput } from './topic-tag-where-unique.input';\n\n@InputType()\nexport class TopicTagCreateNestedManyWithoutChallengesInput {\n\n    @Field(() => [TopicTagCreateWithoutChallengesInput], {nullable:true})\n    create?: Array<TopicTagCreateWithoutChallengesInput>;\n\n    @Field(() => [TopicTagCreateOrConnectWithoutChallengesInput], {nullable:true})\n    connectOrCreate?: Array<TopicTagCreateOrConnectWithoutChallengesInput>;\n\n    @Field(() => [TopicTagWhereUniqueInput], {nullable:true})\n    connect?: Array<TopicTagWhereUniqueInput>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagWhereUniqueInput } from './topic-tag-where-unique.input';\nimport { TopicTagCreateWithoutChallengesInput } from './topic-tag-create-without-challenges.input';\n\n@InputType()\nexport class TopicTagCreateOrConnectWithoutChallengesInput {\n\n    @Field(() => TopicTagWhereUniqueInput, {nullable:false})\n    where!: TopicTagWhereUniqueInput;\n\n    @Field(() => TopicTagCreateWithoutChallengesInput, {nullable:false})\n    create!: TopicTagCreateWithoutChallengesInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class TopicTagCreateWithoutChallengesInput {\n\n    @Field(() => String, {nullable:false})\n    name!: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagWhereInput } from './topic-tag-where.input';\n\n@InputType()\nexport class TopicTagListRelationFilter {\n\n    @Field(() => TopicTagWhereInput, {nullable:true})\n    every?: TopicTagWhereInput;\n\n    @Field(() => TopicTagWhereInput, {nullable:true})\n    some?: TopicTagWhereInput;\n\n    @Field(() => TopicTagWhereInput, {nullable:true})\n    none?: TopicTagWhereInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\n\n@InputType()\nexport class TopicTagOrderByRelationAggregateInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    _count?: keyof typeof SortOrder;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class TopicTagScalarWhereInput {\n\n    @Field(() => [TopicTagScalarWhereInput], {nullable:true})\n    AND?: Array<TopicTagScalarWhereInput>;\n\n    @Field(() => [TopicTagScalarWhereInput], {nullable:true})\n    OR?: Array<TopicTagScalarWhereInput>;\n\n    @Field(() => [TopicTagScalarWhereInput], {nullable:true})\n    NOT?: Array<TopicTagScalarWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class TopicTagUpdateManyMutationInput {\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagScalarWhereInput } from './topic-tag-scalar-where.input';\nimport { TopicTagUpdateManyMutationInput } from './topic-tag-update-many-mutation.input';\n\n@InputType()\nexport class TopicTagUpdateManyWithWhereWithoutChallengesInput {\n\n    @Field(() => TopicTagScalarWhereInput, {nullable:false})\n    where!: TopicTagScalarWhereInput;\n\n    @Field(() => TopicTagUpdateManyMutationInput, {nullable:false})\n    data!: TopicTagUpdateManyMutationInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagCreateWithoutChallengesInput } from './topic-tag-create-without-challenges.input';\nimport { TopicTagCreateOrConnectWithoutChallengesInput } from './topic-tag-create-or-connect-without-challenges.input';\nimport { TopicTagUpsertWithWhereUniqueWithoutChallengesInput } from './topic-tag-upsert-with-where-unique-without-challenges.input';\nimport { TopicTagWhereUniqueInput } from './topic-tag-where-unique.input';\nimport { TopicTagUpdateWithWhereUniqueWithoutChallengesInput } from './topic-tag-update-with-where-unique-without-challenges.input';\nimport { TopicTagUpdateManyWithWhereWithoutChallengesInput } from './topic-tag-update-many-with-where-without-challenges.input';\nimport { TopicTagScalarWhereInput } from './topic-tag-scalar-where.input';\n\n@InputType()\nexport class TopicTagUpdateManyWithoutChallengesNestedInput {\n\n    @Field(() => [TopicTagCreateWithoutChallengesInput], {nullable:true})\n    create?: Array<TopicTagCreateWithoutChallengesInput>;\n\n    @Field(() => [TopicTagCreateOrConnectWithoutChallengesInput], {nullable:true})\n    connectOrCreate?: Array<TopicTagCreateOrConnectWithoutChallengesInput>;\n\n    @Field(() => [TopicTagUpsertWithWhereUniqueWithoutChallengesInput], {nullable:true})\n    upsert?: Array<TopicTagUpsertWithWhereUniqueWithoutChallengesInput>;\n\n    @Field(() => [TopicTagWhereUniqueInput], {nullable:true})\n    set?: Array<TopicTagWhereUniqueInput>;\n\n    @Field(() => [TopicTagWhereUniqueInput], {nullable:true})\n    disconnect?: Array<TopicTagWhereUniqueInput>;\n\n    @Field(() => [TopicTagWhereUniqueInput], {nullable:true})\n    delete?: Array<TopicTagWhereUniqueInput>;\n\n    @Field(() => [TopicTagWhereUniqueInput], {nullable:true})\n    connect?: Array<TopicTagWhereUniqueInput>;\n\n    @Field(() => [TopicTagUpdateWithWhereUniqueWithoutChallengesInput], {nullable:true})\n    update?: Array<TopicTagUpdateWithWhereUniqueWithoutChallengesInput>;\n\n    @Field(() => [TopicTagUpdateManyWithWhereWithoutChallengesInput], {nullable:true})\n    updateMany?: Array<TopicTagUpdateManyWithWhereWithoutChallengesInput>;\n\n    @Field(() => [TopicTagScalarWhereInput], {nullable:true})\n    deleteMany?: Array<TopicTagScalarWhereInput>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagWhereUniqueInput } from './topic-tag-where-unique.input';\nimport { TopicTagUpdateWithoutChallengesInput } from './topic-tag-update-without-challenges.input';\n\n@InputType()\nexport class TopicTagUpdateWithWhereUniqueWithoutChallengesInput {\n\n    @Field(() => TopicTagWhereUniqueInput, {nullable:false})\n    where!: TopicTagWhereUniqueInput;\n\n    @Field(() => TopicTagUpdateWithoutChallengesInput, {nullable:false})\n    data!: TopicTagUpdateWithoutChallengesInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class TopicTagUpdateWithoutChallengesInput {\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @HideField()\n    domainId?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { TopicTagWhereUniqueInput } from './topic-tag-where-unique.input';\nimport { TopicTagUpdateWithoutChallengesInput } from './topic-tag-update-without-challenges.input';\nimport { TopicTagCreateWithoutChallengesInput } from './topic-tag-create-without-challenges.input';\n\n@InputType()\nexport class TopicTagUpsertWithWhereUniqueWithoutChallengesInput {\n\n    @Field(() => TopicTagWhereUniqueInput, {nullable:false})\n    where!: TopicTagWhereUniqueInput;\n\n    @Field(() => TopicTagUpdateWithoutChallengesInput, {nullable:false})\n    update!: TopicTagUpdateWithoutChallengesInput;\n\n    @Field(() => TopicTagCreateWithoutChallengesInput, {nullable:false})\n    create!: TopicTagCreateWithoutChallengesInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class TopicTagWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { ChallengeListRelationFilter } from '../challenge/challenge-list-relation-filter.input';\n\n@InputType()\nexport class TopicTagWhereInput {\n\n    @Field(() => [TopicTagWhereInput], {nullable:true})\n    AND?: Array<TopicTagWhereInput>;\n\n    @Field(() => [TopicTagWhereInput], {nullable:true})\n    OR?: Array<TopicTagWhereInput>;\n\n    @Field(() => [TopicTagWhereInput], {nullable:true})\n    NOT?: Array<TopicTagWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    name?: string;\n\n    @Field(() => String, {nullable:true})\n    slug?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @Field(() => ChallengeListRelationFilter, {nullable:true})\n    challenges?: ChallengeListRelationFilter;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Challenge } from '../challenge/challenge.model';\nimport { TopicTagCount } from './topic-tag-count.output';\n\n@ObjectType()\nexport class TopicTag {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false})\n    name!: string;\n\n    @Field(() => String, {nullable:false})\n    slug!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'disabled'})\n    status!: string;\n\n    @HideField()\n    domainId!: number;\n\n    @Field(() => [Challenge], {nullable:true})\n    challenges?: Array<Challenge>;\n\n    @Field(() => TopicTagCount, {nullable:false})\n    _count?: TopicTagCount;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ArgsType } from '@nestjs/graphql';\nimport { UserWhereInput } from './user-where.input';\nimport { UserOrderByWithRelationInput } from './user-order-by-with-relation.input';\nimport { UserWhereUniqueInput } from './user-where-unique.input';\nimport { Int } from '@nestjs/graphql';\nimport { UserScalarFieldEnum } from './user-scalar-field.enum';\n\n@ArgsType()\nexport class FindManyUserArgs {\n\n    @Field(() => UserWhereInput, {nullable:true})\n    where?: UserWhereInput;\n\n    @Field(() => [UserOrderByWithRelationInput], {nullable:true})\n    orderBy?: Array<UserOrderByWithRelationInput>;\n\n    @Field(() => UserWhereUniqueInput, {nullable:true})\n    cursor?: UserWhereUniqueInput;\n\n    @Field(() => Int, {nullable:true})\n    take?: number;\n\n    @Field(() => Int, {nullable:true})\n    skip?: number;\n\n    @Field(() => [UserScalarFieldEnum], {nullable:true})\n    distinct?: Array<keyof typeof UserScalarFieldEnum>;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\n\n@InputType()\nexport class UserCreateInput {\n\n    @Field(() => String, {nullable:true})\n    email?: string;\n\n    @Field(() => String, {nullable:true})\n    username?: string;\n\n    @Field(() => String, {nullable:true})\n    password?: string;\n\n    @Field(() => String, {nullable:true})\n    firstname?: string;\n\n    @Field(() => String, {nullable:true})\n    lastname?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    role?: string;\n\n    @Field(() => String, {nullable:true})\n    avatar?: string;\n\n    @Field(() => String, {nullable:true})\n    provider?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    extendData?: any;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class UserEmailDomainIdCompoundUniqueInput {\n\n    @Field(() => String, {nullable:false})\n    email!: string;\n\n    @HideField()\n    domainId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { SortOrder } from '../prisma/sort-order.enum';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class UserOrderByWithRelationInput {\n\n    @Field(() => SortOrder, {nullable:true})\n    id?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    email?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    username?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    password?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    firstname?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    lastname?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    status?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    role?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    avatar?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    provider?: keyof typeof SortOrder;\n\n    @HideField()\n    domainId?: keyof typeof SortOrder;\n\n    @HideField()\n    createdById?: keyof typeof SortOrder;\n\n    @HideField()\n    createdByUsername?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    createdByName?: keyof typeof SortOrder;\n\n    @HideField()\n    createdAt?: keyof typeof SortOrder;\n\n    @HideField()\n    updatedAt?: keyof typeof SortOrder;\n\n    @Field(() => SortOrder, {nullable:true})\n    extendData?: keyof typeof SortOrder;\n}\n","import { registerEnumType } from '@nestjs/graphql';\n\nexport enum UserScalarFieldEnum {\n    id = \"id\",\n    email = \"email\",\n    username = \"username\",\n    password = \"password\",\n    firstname = \"firstname\",\n    lastname = \"lastname\",\n    status = \"status\",\n    role = \"role\",\n    avatar = \"avatar\",\n    provider = \"provider\",\n    domainId = \"domainId\",\n    createdById = \"createdById\",\n    createdByUsername = \"createdByUsername\",\n    createdByName = \"createdByName\",\n    createdAt = \"createdAt\",\n    updatedAt = \"updatedAt\",\n    extendData = \"extendData\"\n}\n\n\nregisterEnumType(UserScalarFieldEnum, { name: 'UserScalarFieldEnum', description: undefined })\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\n\n@InputType()\nexport class UserUpdateInput {\n\n    @Field(() => String, {nullable:true})\n    email?: string;\n\n    @Field(() => String, {nullable:true})\n    username?: string;\n\n    @Field(() => String, {nullable:true})\n    password?: string;\n\n    @Field(() => String, {nullable:true})\n    firstname?: string;\n\n    @Field(() => String, {nullable:true})\n    lastname?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    role?: string;\n\n    @Field(() => String, {nullable:true})\n    avatar?: string;\n\n    @Field(() => String, {nullable:true})\n    provider?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    extendData?: any;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\n\n@InputType()\nexport class UserUsernameDomainIdCompoundUniqueInput {\n\n    @Field(() => String, {nullable:false})\n    username!: string;\n\n    @HideField()\n    domainId!: number;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { UserUsernameDomainIdCompoundUniqueInput } from './user-username-domain-id-compound-unique.input';\nimport { UserEmailDomainIdCompoundUniqueInput } from './user-email-domain-id-compound-unique.input';\n\n@InputType()\nexport class UserWhereUniqueInput {\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => UserUsernameDomainIdCompoundUniqueInput, {nullable:true})\n    username_domainId?: UserUsernameDomainIdCompoundUniqueInput;\n\n    @Field(() => UserEmailDomainIdCompoundUniqueInput, {nullable:true})\n    email_domainId?: UserEmailDomainIdCompoundUniqueInput;\n}\n","import { Field } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { JsonNullableFilter } from '../prisma/json-nullable-filter.input';\n\n@InputType()\nexport class UserWhereInput {\n\n    @Field(() => [UserWhereInput], {nullable:true})\n    AND?: Array<UserWhereInput>;\n\n    @Field(() => [UserWhereInput], {nullable:true})\n    OR?: Array<UserWhereInput>;\n\n    @Field(() => [UserWhereInput], {nullable:true})\n    NOT?: Array<UserWhereInput>;\n\n    @Field(() => Int, {nullable:true})\n    id?: number;\n\n    @Field(() => String, {nullable:true})\n    email?: string;\n\n    @Field(() => String, {nullable:true})\n    username?: string;\n\n    @Field(() => String, {nullable:true})\n    password?: string;\n\n    @Field(() => String, {nullable:true})\n    firstname?: string;\n\n    @Field(() => String, {nullable:true})\n    lastname?: string;\n\n    @Field(() => String, {nullable:true})\n    status?: string;\n\n    @Field(() => String, {nullable:true})\n    role?: string;\n\n    @Field(() => String, {nullable:true})\n    avatar?: string;\n\n    @Field(() => String, {nullable:true})\n    provider?: string;\n\n    @HideField()\n    domainId?: number;\n\n    @HideField()\n    createdById?: number;\n\n    @HideField()\n    createdByUsername?: string;\n\n    @Field(() => String, {nullable:true})\n    createdByName?: string;\n\n    @HideField()\n    createdAt?: Date | string;\n\n    @HideField()\n    updatedAt?: Date | string;\n\n    @Field(() => JsonNullableFilter, {nullable:true})\n    extendData?: JsonNullableFilter;\n}\n","import { Field } from '@nestjs/graphql';\nimport { ObjectType } from '@nestjs/graphql';\nimport { ID } from '@nestjs/graphql';\nimport { HideField } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\nimport { GraphQLJSON } from 'graphql-type-json';\n\n@ObjectType()\nexport class User {\n\n    @Field(() => ID, {nullable:false})\n    id!: number;\n\n    @Field(() => String, {nullable:false,defaultValue:''})\n    email!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:''})\n    username!: string;\n\n    @HideField()\n    password!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:''})\n    firstname!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:''})\n    lastname!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'disabled'})\n    status!: string;\n\n    @Field(() => String, {nullable:false,defaultValue:'user'})\n    role!: string;\n\n    @Field(() => String, {nullable:true})\n    avatar!: string | null;\n\n    @Field(() => String, {nullable:false,defaultValue:'koj'})\n    provider!: string;\n\n    @HideField()\n    domainId!: number;\n\n    @HideField()\n    createdById!: number | null;\n\n    @Field(() => String, {nullable:true})\n    createdByUsername!: string | null;\n\n    @Field(() => String, {nullable:true})\n    createdByName!: string | null;\n\n    @Field(() => Date, {nullable:false})\n    createdAt!: Date;\n\n    @Field(() => Date, {nullable:true})\n    updatedAt!: Date | null;\n\n    @Field(() => GraphQLJSON, {nullable:true})\n    extendData!: any | null;\n}\n","export * from './lib/adapter.module';\nexport * from './lib/adapter.service';\n","import { Module } from '@nestjs/common';\n\n@Module({\n  controllers: [],\n  providers: [],\n  exports: [],\n})\nexport class AdapterModule {}\n","/* eslint-disable @typescript-eslint/no-empty-function */\nimport { Adapter, Helper, Model } from 'casbin';\nimport { Injectable, NotImplementedException } from '@nestjs/common';\nimport { Prisma, PrismaClient } from '@prisma/client';\n\n@Injectable()\nexport class AdapterService implements Adapter {\n  option?: Prisma.PrismaClientOptions;\n  prisma: PrismaClient;\n\n  /**\n   * @param option It should be PrismaClientOptions or PrismaClient.\n   * You should later call open() to activate it.\n   */\n  constructor(option?: Prisma.PrismaClientOptions | PrismaClient) {\n    if (option instanceof PrismaClient) {\n      this.prisma = option;\n    } else {\n      this.option = option;\n    }\n  }\n\n  async loadPolicy(model: Model): Promise<void> {\n    const [policies, roles] = await Promise.all([\n      this.prisma.policy.findMany(),\n      this.prisma.roleGroup.findMany(),\n    ]);\n\n    for (const policy of policies) {\n      this.loadPolicyLine(policy, model);\n    }\n    for (const role of roles) {\n      this.loadRoleLine(role, model);\n    }\n  }\n\n  async close(): Promise<unknown> {\n    return this.prisma.$disconnect();\n  }\n\n  static async newAdapter(\n    option?: Prisma.PrismaClientOptions | PrismaClient,\n  ): Promise<AdapterService> {\n    const a = new AdapterService(option);\n\n    try {\n      await a.open();\n      return a;\n    } catch (error) {\n      console.log(error);\n      // throw new Error('Init Adapter with prisma failed');\n    }\n  }\n\n  open = async (): Promise<void> => {\n    if (!this.option) {\n      this.option = {};\n    }\n    if (!this.prisma) {\n      this.prisma = new PrismaClient(this.option);\n    }\n    await this.prisma.$connect();\n  };\n\n  loadPolicyLine = (line: Prisma.PolicyCreateInput, model: Model): void => {\n    const result =\n      line.ptype +\n      ', ' +\n      [\n        line.subject,\n        line.object,\n        line.action,\n        line.effect,\n        line.effectWith,\n        line.condition,\n        line.domainId,\n      ].join(', ');\n    Helper.loadPolicyLine(result, model);\n  };\n\n  loadRoleLine = (line: Prisma.RoleGroupCreateInput, model: Model): void => {\n    const result =\n      line.ptype +\n      ', ' +\n      [line.role, line.rule, line.domainId].filter((n) => n).join(', ');\n    Helper.loadPolicyLine(result, model);\n  };\n\n  //Place holder\n\n  async addPolicy() {}\n  async addPolicies() {}\n  async updatePolicy() {}\n  async updatePolicies() {}\n  async removePolicy() {}\n  async removeFilteredPolicy() {}\n\n  async savePolicy(): Promise<boolean> {\n    return;\n  }\n}\n","import Docker from 'dockerode';\nimport path from 'path';\nimport logger from './utils/logger';\nimport { extension } from './utils/findExtension';\n\nexport default class Builder {\n  private docker: Docker;\n\n  constructor(docker: Docker) {\n    this.docker = docker;\n  }\n\n  async build(langs?: Array<string>): Promise<void> {\n    const supportedLanguages = Object.keys(extension);\n    const languages = langs || supportedLanguages;\n    const streams: Promise<NodeJS.ReadableStream>[] = [];\n\n    languages.forEach((lang) => {\n      if (supportedLanguages.includes(lang.toLowerCase())) {\n        logger.info(`Building ${lang}...`);\n\n        streams.push(\n          this.docker.buildImage(\n            {\n              context: path.join(__dirname, 'langs', lang),\n              src: ['Dockerfile', 'start.sh'],\n            },\n            {\n              t: `${lang.toLowerCase()}-runnerx`,\n            },\n          ),\n        );\n      } else {\n        logger.error(`${lang} is not supported`);\n      }\n    });\n\n    const progress: Promise<object>[] = [];\n\n    (await Promise.all(streams)).forEach((stream) => {\n      stream.on('data', (chunk) => {\n        logger.debug(chunk);\n        // console.log(chunk.toString());\n      });\n\n      progress.push(\n        new Promise((resolve, reject) => {\n          this.docker.modem.followProgress(stream, (err: Error, res: Array<object>) => {\n            if (err) {\n              console.log(\n                '🚀 ~ file: Builder.ts ~ line 46 ~ Builder ~ progress.push ~ err',\n                err,\n              );\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        }),\n      );\n    });\n\n    await Promise.all(progress);\n    logger.info('Built containers successfully');\n  }\n}\n","import Bull from \"bull\";\nimport { v4 as uuid } from \"uuid\";\n\nimport logger from \"./utils/logger\";\nimport { extension } from \"./utils/findExtension\";\nimport { RunnerOpts, ResponseData } from \"./types\";\n\nconst languages = Object.keys(extension);\n\nexport default class CodeExecutor {\n  private queue: Bull.Queue;\n\n  private jobs: Map<string, { resolve; reject }>;\n\n  constructor(name: string, redis: string) {\n    this.queue = new Bull(name, redis);\n\n    this.jobs = new Map();\n\n    this.queue.on(\"global:completed\", (_job: Bull.Job, result: string) => {\n      const parseResult = <ResponseData>JSON.parse(result);\n\n      logger.info(`Running on complete for id: ${parseResult.data.id}`);\n\n      const currentJob = this.jobs.get(parseResult.data.id);\n      if (currentJob) {\n        currentJob.resolve(parseResult);\n        this.jobs.delete(parseResult.data.id);\n      }\n    });\n  }\n\n  async runCode(codeOptions: RunnerOpts): Promise<{ data: any; error: any }> {\n    const id = uuid();\n    const codeObject = { ...codeOptions, id };\n    logger.info(`Running code with id: ${id}`);\n\n    return new Promise((resolve, reject) => {\n      this.jobs.set(id, { resolve, reject });\n      this.queue.add(codeObject);\n    });\n  }\n\n  stop() {\n    this.queue.close();\n  }\n}\n\nexport { default as Worker } from \"./Worker\";\n\nexport { languages };\n","/* eslint-disable @typescript-eslint/indent */\nimport Docker from \"dockerode\";\nimport { performance } from \"perf_hooks\";\n// import del from 'del';\nimport { Worker as NodeWorker } from \"worker_threads\";\nimport logger from \"./utils/logger\";\nimport { Result, RunnerOpts } from \"./types\";\nimport getOutput from \"./utils/getOutput\";\nimport saveCode from \"./utils/saveCode\";\nimport streams from \"memory-streams\";\nimport { RUN_ALL, RUN_SUBMIT, RUN_TEST } from \"@koj/common/constants\";\n\nexport default class Runner {\n  private docker: Docker;\n  private worker: NodeWorker;\n\n  constructor(docker: Docker, workerPath) {\n    this.docker = docker;\n    this.worker = new NodeWorker(\n      workerPath || `${__dirname}/transform-worker.js`\n    );\n  }\n\n  async run({\n    id,\n    tag,\n    code,\n    language,\n    timeout = 2,\n    userSolvePath,\n    challengePath,\n    type = RUN_TEST\n  }: RunnerOpts): Promise<Result> {\n    await saveCode(userSolvePath, code, language);\n\n    logger.info(`Starting process ${id}`);\n    const t0 = performance.now();\n    const testcaseType = type === RUN_TEST ? \"show\" : \"all\";\n\n    const stdout = new streams.WritableStream();\n    const stderr = new streams.WritableStream();\n    const { error } = await this.docker\n      .run(\n        tag,\n        [\"bash\", \"/start.sh\", `${timeout}`, `${type}`],\n        [stdout, stderr],\n        {\n          Tty: false,\n          HostConfig: {\n            AutoRemove: true,\n            Mounts: [\n              {\n                Source: challengePath,\n                Target: \"/app\",\n                Type: \"bind\"\n              },\n              {\n                Source: userSolvePath,\n                Target: \"/user-solve\",\n                Type: \"bind\"\n              }\n            ]\n          }\n        }\n      )\n      .then(function (data) {\n        const error = stderr.toString();\n        return { error: error || null };\n      })\n      .catch(function (error) {\n        return { error };\n      });\n\n    if (error) {\n      return { id, error };\n    }\n\n    const t1 = performance.now();\n    logger.info(`Process ${id} completed in ${(t1 - t0) / 1000} seconds`);\n    logger.info(language);\n\n    if ([\"cplusplus\"].includes(language.toLowerCase())) {\n      const userOutputs = [];\n      const outputs = await this.getOutPut(userSolvePath, testcaseType);\n\n      outputs.forEach((element: any, index: number) => {\n        if (!element.error) {\n          return userOutputs.push({\n            id: index,\n            value: element.output.split(\"\\n\")\n          });\n        }\n        element.result = false;\n      });\n\n      const transformResult = await this.workerTransform(\n        userOutputs,\n        challengePath\n      );\n\n      transformResult.forEach((element) => {\n        outputs[element.id].output = element.value;\n      });\n\n      const info = this.modifyAndGetInfoResult(outputs);\n      return { id, result: outputs, info };\n    }\n\n    const userOutputs = [];\n    const outputs = await this.getOutPut(userSolvePath, testcaseType);\n\n    outputs.forEach((element: any, index: number) => {\n      if (!element.error) {\n        return userOutputs.push({\n          id: index,\n          value: element.output.split(\"\\n\")\n        });\n      }\n      element.result = false;\n    });\n\n    console.log(\"result \", outputs);\n    const info = this.modifyAndGetInfoResult(outputs);\n    return { id, result: outputs, info };\n  }\n\n  // Mutate data\n  modifyAndGetInfoResult(outputs) {\n    const testcaseCount = outputs.length;\n    let testcasePassCount = 0;\n    let score = 0;\n    let totalScore = 0;\n\n    outputs.forEach((element, index) => {\n      totalScore += element.totalScore || 0;\n      if (element.output === element.expectedOutput) {\n        element.result = true;\n        testcasePassCount++;\n        score += element.score || 0;\n      } else {\n        element.message = \"wrong\";\n        element.result = false;\n      }\n\n      if (element.hidden) {\n        element.expectedOutput = \"\";\n        element.message = \"\";\n      }\n    });\n\n    return { testcaseCount, testcasePassCount, score, totalScore };\n  }\n\n  async getOutPut(userSolvePath, testcaseType) {\n    const outPutPromises = [];\n\n    outPutPromises.push(getOutput(userSolvePath, \"show\"));\n    if (testcaseType === \"all\") {\n      outPutPromises.push(getOutput(userSolvePath, \"hide\"));\n    }\n\n    const result = await Promise.all(outPutPromises);\n    return result.flat(1);\n  }\n\n  workerTransform(outputs: any[], challengePath): any {\n    return new Promise((resolve, reject) => {\n      this.worker.on(\"message\", (result) => {\n        resolve(result);\n      });\n      this.worker.on(\"error\", (error: any) => {\n        reject(error);\n      });\n      this.worker.on(\"exit\", (exitCode: any) => {\n        console.log(exitCode);\n      });\n      this.worker.postMessage({\n        outputs: outputs,\n        path: challengePath\n      });\n    });\n  }\n}\n","import Docker from \"dockerode\";\nimport Bull from \"bull\";\n\nimport Runner from \"./Runner\";\nimport Builder from \"./Builder\";\n\nimport { RunnerOpts, Result } from \"./types\";\nimport logger from \"./utils/logger\";\nimport { ResponseData } from \"./types\";\n\nexport default class Worker {\n  private runner: Runner;\n\n  private docker: Docker;\n\n  private builder: Builder;\n\n  private queue: Bull.Queue;\n\n  private folderPath?: string;\n\n  constructor(\n    name: string,\n    redis: string,\n    folderPath?: string,\n    transformWorkerPath?: string\n  ) {\n    this.docker = new Docker();\n    this.runner = new Runner(this.docker, transformWorkerPath);\n    this.builder = new Builder(this.docker);\n    this.queue = new Bull(name, redis, {\n      defaultJobOptions: { attempts: 3, timeout: 60000 }\n    });\n    this.folderPath = folderPath || \"/tmp/code-exec\";\n  }\n\n  private async work(codeOptions: RunnerOpts): Promise<ResponseData> {\n    const tag = `${codeOptions.language.toLowerCase()}-runnerx`;\n\n    try {\n      const result = await this.runner.run({\n        tag,\n        ...codeOptions\n      });\n\n      return { data: result, error: result.error || null };\n    } catch (error) {\n      return {\n        data: { id: codeOptions.id },\n        error\n      };\n    }\n  }\n\n  async build(langs?: Array<string>) {\n    await this.builder.build(langs);\n  }\n\n  start() {\n    this.queue.process(async (job, done) => {\n      logger.info(`Received: ${job.data.id}`);\n      const result = await this.work(job.data);\n\n      logger.debug(JSON.stringify(result));\n      done(null, result);\n    });\n  }\n\n  pause() {\n    this.queue.pause();\n  }\n\n  resume() {\n    this.queue.resume();\n  }\n\n  stop() {\n    this.queue.close();\n  }\n}\n","export { default as CodeExecutor, languages } from './CodeExecutor';\n\nexport { default as Worker } from './Worker';\n","export const extension = {\n    python: 'py', bash: 'sh', c: 'c', cplusplus: 'cpp', golfscript: 'gs', ruby: 'rb', javascript: 'js', java: 'java', perl: 'pl', swift: 'swift', rust: 'rs', brainfuck: 'bf', o5AB1E: 'abe',\n};\nexport default function findExtension(language: string) {\n    let fileExtension = '';\n    Object.entries(extension).forEach((entry) => {\n        const [key, value] = entry;\n        if (key.toLowerCase() === language.toLowerCase()) {\n            fileExtension = value;\n        }\n    });\n    return fileExtension;\n}\n","import { PathLike } from 'fs';\nimport { readdir, readFile } from 'fs/promises';\n\nexport async function loopFiles(dir: PathLike): Promise<Array<object>> {\n  try {\n    const files = await readdir(dir);\n    const promisesToKeep: Array<Promise<object>> = [];\n    files.forEach((file) =>\n      promisesToKeep.push(\n        readFile(`${dir}/${file}`, { encoding: 'utf8' }).then(JSON.parse),\n      ),\n    );\n    const result = await Promise.all(promisesToKeep);\n    return result;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport default async function getOutput(Path: string, type: string): Promise<any> {\n  switch (type) {\n    case 'show':\n      return loopFiles(`${Path}/result/show`);\n    case 'hide':\n      return loopFiles(`${Path}/result/hide`);\n    default:\n      return Promise.all([\n        loopFiles(`${Path}/result/show`),\n        loopFiles(`${Path}/result/hide`),\n      ]);\n  }\n}\n","import Pino, { Logger } from 'pino';\nimport { LoggerOptions } from 'pino';\nimport pretty from 'pino-pretty';\nconst stream = pretty({\n  colorize: true\n})\nexport const loggerOptions: LoggerOptions = {\n    level: 'info',\n    formatters: {\n        level(label) {\n            return { level: label };\n        }\n    },\n    \n};\n\nconst logger: Logger = Pino(loggerOptions, stream);\n\nexport default logger","import path from \"path\";\nimport { mkdir } from \"fs/promises\";\n\nimport writeToFile from \"./writeToFile\";\nimport findExtension from \"./findExtension\";\n\nexport default async function saveCode(\n  folderPath: string,\n  code: string,\n  language: string\n) {\n  const folderPromises: Array<Promise<string>> = [];\n  const folders = [\"result\", \"error\", \"output\"];\n  const status = [\"show\", \"hide\"];\n\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true }))\n    )\n  );\n\n  await Promise.all(folderPromises);\n  const extension = findExtension(language);\n\n  await writeToFile(path.join(folderPath, `solution.${extension}`), code);\n}\n","import fs from 'fs';\n\nexport default async function writeToFile(path: string, data: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        fs.writeFile(path, data, (err) => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n","export const DEFAULT_OUTPUT_NAME = '__output__';\n","export * from './languages/javascript';\nexport * from './languages/python';\nexport * from './languages/cplusplus';\nexport * from './languages/output';\nexport * from './types';\n","import { cplusplusKeyword } from \"../utils/keywords\";\nimport {\n  pascalCase,\n  snakeCase,\n  IteratorName,\n  snakeCaseWithoutDot\n} from \"../utils/utils\";\nimport { FormatStyle, Input, Type, TypeEnum, Variable } from \"../types\";\n// import * as json from './custom.input.json';\nimport * as json from \"../test/refactor.input.json\";\nimport { DEFAULT_OUTPUT_NAME } from \"../configs/constants\";\n\nfunction varName(name) {\n  const candidate = snakeCaseWithoutDot(name);\n  return cplusplusKeyword.has(candidate) ? candidate + \"_\" : candidate;\n}\n\nfunction structName(name) {\n  /* Transform a class name into a valid one for Python */\n  return pascalCase(name);\n}\n\n/* Create the C++ code to parse an input */\nclass ParserCpp {\n  input: Input;\n  includes: any;\n  main: any[];\n  method: any[];\n  output: any[];\n  indent_lvl: number;\n  indentation: number;\n  iterator: IteratorName;\n\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.includes = new Set();\n    this.main = [];\n    this.method = [];\n    this.output = [];\n    this.iterator = new IteratorName(\n      input_data.inputs.map((variable) => variable.name)\n    );\n    this.indent_lvl = 0;\n    this.indentation = 4;\n  }\n\n  type_str(type: Type) {\n    /* Return the C++ name for a type */\n    if (type.main === TypeEnum.INTEGER) {\n      return \"int\";\n    }\n    if (type.main === TypeEnum.STRING) {\n      this.includes.add(\"string\");\n      return \"string\";\n    }\n    if (type.main === TypeEnum.CHAR) {\n      return \"char\";\n    }\n    if (type.main === TypeEnum.OBJECT) {\n      return structName(type.structName);\n    }\n\n    this.includes.add(\"vector\");\n    return `vector<${this.type_str(type.encapsulated)}>`;\n  }\n\n  /* Read an entire line and store it into the right place(s) */\n  read_line(name: string, type: Type, size: string) {\n    const indent = \" \".repeat(this.indentation * this.indent_lvl);\n    this.includes.add(\"vector\");\n    if ([TypeEnum.INTEGER, TypeEnum.CHAR].includes(type.main)) {\n      this.main.push(indent + `cin >> ${name};`);\n      return;\n    }\n    if (type.main === TypeEnum.STRING) {\n      if (type.can_be_empty) {\n        this.main.push(indent + `if (${size} > 0)`);\n      }\n\n      this.main.push(\n        indent +\n          \" \".repeat(type.can_be_empty ? this.indentation : 0) +\n          `getline(cin >> ws, ${name});`\n      );\n      return;\n    }\n    if (type.main === TypeEnum.ARRAY) {\n      const innerName = this.iterator.new_it();\n      //   this.main.push(\n      //     indent + `for (${this.type_str(type.encapsulated)}& ${innerName} : ${name})`,\n      //   );\n      //   this.main.push(' '.repeat(this.indentation) + indent + `cin >> ${innerName};`);\n      this.main.push(`${this.type_str(type.encapsulated)} ${innerName};`);\n      this.main.push(`${indent}cin >> ws;`);\n      this.main.push(`${indent}getline(cin, buffer);`);\n      this.main.push(`${indent}istringstream ${innerName}_cin(buffer);`);\n      this.main.push(`${indent}while (${innerName}_cin >> ${innerName}){`);\n      this.main.push(\n        `${\" \".repeat(\n          this.indentation * (this.indent_lvl + 1)\n        )}${name}.push_back(${innerName});`\n      );\n      this.main.push(`${indent}}`);\n      // this.iterator.pop_it();\n      return;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      const struct = this.input.getStruct(type.structName);\n      const properties = struct.fields\n        .map((field) => `${name}.${varName(field.name)}`)\n        .join(\" >> \");\n\n      this.main.push(`${indent}cin >> ${properties};`);\n      return;\n    }\n    throw new Error(\"khong co type\");\n  }\n\n  read_lines(name: string, type: Type, size: string, already_resized = false) {\n    if (\n      type.main === TypeEnum.ARRAY &&\n      !already_resized &&\n      !type.encapsulated.canBeInlined()\n    ) {\n      const sizeDeclare = `${varName(name)}_size`;\n      const indent = \" \".repeat(this.indentation * this.indent_lvl);\n\n      this.main.push(`${indent}int ${sizeDeclare};`);\n      this.main.push(`${indent}cin >> ${sizeDeclare};`);\n      this.main.push(`${indent}${snakeCase(name)}.resize(${sizeDeclare});`);\n    }\n\n    if (type.fitsInOneLine(this.input.structs)) {\n      this.read_line(name, type, size);\n      return;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      const struct = this.input.getStruct(type.structName);\n      const structNameTypeSize = struct.fieldsNameTypeSize(\n        `${name}.$$`,\n        varName\n      );\n      structNameTypeSize.forEach(({ name, type, size }) => {\n        this.read_lines(name, type, size);\n      });\n      return;\n    }\n\n    const innerName = this.iterator.new_it();\n\n    this.main.push(\n      `${\" \".repeat(this.indentation * this.indent_lvl)}for (${this.type_str(\n        type.encapsulated\n      )}& ${innerName} : ${name}) {`\n    );\n    this.indent_lvl += 1;\n    this.read_lines(\n      innerName,\n      type.encapsulated,\n      varName(type.encapsulated.size)\n    );\n    this.indent_lvl -= 1;\n    this.main.push(\" \".repeat(this.indentation * this.indent_lvl) + \"}\");\n    this.iterator.pop_it();\n  }\n\n  print_line(name: string, type: Type, indent_lvl: number, style: FormatStyle) {\n    const indent = \" \".repeat(this.indentation * indent_lvl);\n    const endl = style == FormatStyle.NO_ENDLINE ? '\" \"' : \"endl\";\n    if (\n      [TypeEnum.INTEGER, TypeEnum.CHAR, TypeEnum.STRING].includes(type.main)\n    ) {\n      this.output.push(`${indent}cout << ${name} << ${endl};`);\n      return;\n    }\n    if (type.main === TypeEnum.ARRAY) {\n      const innerName = this.iterator.new_it();\n      this.output.push(\n        `${indent}for (size_t ${innerName} = 0; ${innerName} < ${name}.size(); ++${innerName})`\n      );\n      this.output.push(\n        \" \".repeat(this.indentation) +\n          indent +\n          \"cout << \" +\n          `${name}[${innerName}] << (${innerName} < ${name}.size() - 1 ? \"${\n            type.encapsulated.main === TypeEnum.CHAR ? \"\" : \" \"\n          }\" : \"\\\\n\");`\n      );\n      this.output.push(indent + `if (${name}.size() == 0) cout << endl;`);\n      this.iterator.pop_it();\n      return;\n    }\n\n    //Struct\n    const struct = this.input.getStruct(type.structName);\n    const properties = struct.fields\n      .map((field) => `${name}.${varName(field.name)}`)\n      .join(\" << ' ' << \");\n    this.output.push(`${indent}cout << ${properties} << endl;`);\n  }\n\n  print_lines(\n    name: string,\n    type: Type,\n    indent_lvl: number,\n    style: FormatStyle = FormatStyle.DEFAULT\n  ) {\n    if (type.fitsInOneLine(this.input.structs, style)) {\n      this.print_line(name, type, indent_lvl, style);\n      return;\n    }\n\n    // Struct\n    if (type.main === TypeEnum.OBJECT) {\n      this.input.getStruct(type.structName).fields.forEach((field) => {\n        this.print_lines(\n          `${name}.${varName(field.name)}`,\n          field.type,\n          indent_lvl\n        );\n      });\n      return;\n    }\n\n    //Array\n    const inner_name = this.iterator.new_it();\n    this.output.push(\n      `${\" \".repeat(this.indentation)}cout << ${name}.size() << endl;`\n    );\n    this.output.push(\n      `${\" \".repeat(this.indentation * indent_lvl)}for (const ${this.type_str(\n        type.encapsulated\n      )}& ${inner_name} : ${name}) {`\n    );\n    this.print_lines(inner_name, type.encapsulated, indent_lvl + 1);\n    this.output.push(\" \".repeat(this.indentation * indent_lvl) + \"}\");\n    this.iterator.pop_it();\n  }\n\n  /* Read a variable */\n  read_var(variable) {\n    let size = \"\";\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      size = variable.type.size ? `(${varName(variable.type.size)})` : \"\";\n    }\n\n    this.main.push(\n      `${this.type_str(variable.type)} ${varName(variable.name)}${size}; ///< ${\n        variable.comment\n      }`\n    );\n    this.read_lines(\n      varName(variable.name),\n      variable.type,\n      varName(variable.type.size)\n      //   true,\n    );\n  }\n\n  genOutput(output) {\n    this.print_lines(varName(output.name), output.type, 1, output.format_style);\n  }\n\n  placeholder() {\n    const name = this.input.name;\n    const args = [];\n    this.input.inputs.forEach((arg) => {\n      const argName = varName(arg.name);\n      // this.method.push(`/// \\\\param ${arg.name} ${arg.comment}`);\n      if (\n        [TypeEnum.STRING, TypeEnum.OBJECT, TypeEnum.ARRAY].includes(\n          arg.type.main\n        )\n      ) {\n        args.push(`${this.type_str(arg.type)}& ${argName}`);\n        return;\n      }\n      args.push(`${this.type_str(arg.type)} ${argName}`);\n    });\n    this.method.push(\n      `${this.type_str(this.input.output.type)} ${name}(${args.join(\", \")});`\n    );\n  }\n\n  content() {\n    const indent = \" \".repeat(this.indentation);\n    const outputName = this.input.output.name\n      ? varName(this.input.output.name)\n      : DEFAULT_OUTPUT_NAME;\n\n    let output = '#include \"solution.h\"\\n\\n';\n\n    output += \"int main() {\\n\";\n    output += indent + \"string buffer;\\n\";\n\n    this.main.forEach((line) => {\n      output += indent + line + \"\\n\";\n    });\n\n    const argsCall = this.input.inputs\n      .map((variable) => varName(variable.name))\n      .join(\", \");\n\n    output +=\n      indent +\n      `${this.type_str(this.input.output.type)} ${outputName} = ${\n        this.input.name\n      }(${argsCall});\\n`;\n    output += indent + 'cout << \"@result@\" << endl;\\n';\n\n    this.genOutput(this.input.output);\n    this.output.forEach((line) => (output += line + \"\\n\"));\n\n    output += \"}\\n\";\n\n    return output;\n  }\n\n  genLib() {\n    let output = \"#pragma once\\n\";\n    output += \"#include <iostream>\\n\";\n    output += \"#include <string>\\n\";\n    output += \"#include <sstream>\\n\";\n\n    const indent = \" \".repeat(this.indentation);\n\n    this.includes.forEach((line) => (output += `#include <${line}>\\n`));\n\n    output += \"using namespace std;\\n\\n\";\n\n    this.input.structs.forEach((struct) => {\n      // output += `/// ${struct.comment}\\n`;\n      output += `struct ${structName(struct.name)} {\\n`;\n      struct.fields.forEach((field) => {\n        output +=\n          indent + `${this.type_str(field.type)} ${varName(field.name)};\\n`;\n      });\n      output += \"};\\n\\n\";\n    });\n\n    this.method.forEach((line) => (output += line + \"\\n\"));\n    return output;\n  }\n}\n\nexport function genCplusplus(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const parser = new ParserCpp(inputSchema);\n  inputSchema.inputs.forEach((variable) => parser.read_var(variable));\n  parser.placeholder();\n  return { main: parser.content(), lib: parser.genLib() };\n}\n\nexport function genCplusplusModule() {\n  //\n}\n\nexport function genCplusplusSolution(placeholder, functionName) {\n  let result = `#include \"/app/solution.h\"\\n`;\n  result += placeholder;\n  return result;\n}\n","import { jsTemplate } from '../utils/jsTemplate';\nimport { javascriptKeyword } from '../utils/keywords';\nimport { Input, Type, TypeEnum, Variable } from '../types';\nimport { camelCase, IteratorName, WordsName } from '../utils/utils';\n\nconst INDENTATION = '    ';\n\n/**\n * Transform a variable name into a valid one for Javascript\n * @param name\n * @returns\n */\nfunction varName(name) {\n  const candidate = camelCase(name);\n  return javascriptKeyword.has(candidate) ? candidate + '_' : candidate;\n}\n\nfunction typeString(type: Type, inputData: Input) {\n  switch (type.main) {\n    case TypeEnum.INTEGER:\n      return 'number';\n    case TypeEnum.CHAR:\n      return 'string';\n    case TypeEnum.STRING:\n      return 'string';\n    case TypeEnum.ARRAY:\n      return `Array.<${typeString(type.encapsulated, inputData)}>`;\n    case TypeEnum.OBJECT: {\n      const struct = inputData.getStruct(type.structName);\n      const typeStruct = struct.fields.map((field: Variable) => {\n        return `'${field.name}': ${typeString(field.type, inputData)}`;\n      });\n      return `{${typeStruct.join(', ')}}`;\n    }\n    default:\n      throw new Error('khong ton tai type');\n  }\n}\n\nclass ParserJS {\n  inputs: Input;\n  existingName: string[];\n  iterator: IteratorName;\n  words: WordsName;\n\n  /* Create the Javascript code to parse an input */\n  constructor(input_data: Input) {\n    this.inputs = input_data;\n    this.existingName = input_data.inputs\n      .map((element) => varName(element.name))\n      .concat(varName(input_data.name));\n    this.iterator = new IteratorName(this.existingName);\n    this.words = new WordsName(this.existingName);\n  }\n\n  /* Generate the Javascript code to read a line of given type */\n  read_line(decl, name, type, size, indentLvl) {\n    let lines, struct, words;\n    const indent = INDENTATION.repeat(indentLvl);\n    const start = indent + (decl ? 'const ' : '') + name + ' = ';\n\n    if (type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      const sizeName = size;\n\n      // if (!size) {\n      //   sizeName = varName(name) + 'Size';\n      //   lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      // }\n\n      if (type.encapsulated.main === TypeEnum.CHAR) {\n        lines.push(start + 'stdin[line++].split(\"\");');\n      }\n\n      lines.push(start + `stdin[line++].split(\" \", ${sizeName || -1}).map(Number);`);\n      return lines;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      struct = this.inputs.getStruct(type.structName);\n      words = this.words.next_name();\n      lines = [indent + `const ${words} = stdin[line++].split(\" \");`, start + '{'];\n\n      const fields = struct.fields.map((field, index) => {\n        return `${indent}${INDENTATION}\"${varName(field.name)}\": ${\n          field.type.main === TypeEnum.CHAR\n            ? `${words}[${index}]`\n            : `Number(${words}[${index}])`\n        },`;\n      });\n      lines.push(...fields);\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    return [\n      start +\n        {\n          [TypeEnum.INTEGER]: 'Number(stdin[line++]);',\n          [TypeEnum.CHAR]: 'stdin[line++];',\n          [TypeEnum.STRING]: 'stdin[line++];',\n        }[type.main],\n    ];\n  }\n\n  /* Generate the Javascript code to read the lines for a given type */\n  read_lines(decl, variable, size, indentLvl) {\n    if (variable.fitsInOneLine(this.inputs.structs)) {\n      return this.read_line(decl, variable.name, variable.type, size, indentLvl);\n    }\n\n    const indent = INDENTATION.repeat(indentLvl);\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      let sizeName = size;\n      if (!size) {\n        sizeName = varName(variable.name) + 'Size';\n        lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      }\n\n      lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = [];`);\n      const iterator = this.iterator.new_it();\n      const inner_name = this.iterator.new_it();\n      lines.push(\n        indent + `for (let ${iterator} = 0; ${iterator} < ${sizeName}; ${iterator}++) {`,\n      );\n      this.words.push_scope();\n      const readLinesResult = this.read_lines(\n        true,\n        new Variable({ name: inner_name, type: variable.type.encapsulated }),\n        varName(variable.type.encapsulated.size),\n        indentLvl + 1,\n      );\n      lines.push(...readLinesResult);\n      lines.push(indent + INDENTATION + `${variable.name}.push(${inner_name});`);\n      this.words.pop_scope();\n      this.iterator.pop_it();\n      this.iterator.pop_it();\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    const struct = this.inputs.getStruct(variable.type.structName);\n    const lines = [];\n    lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = {};`);\n    const structNameTypeSize = struct.fieldsNameTypeSize(`${variable.name}.$$`, varName);\n    structNameTypeSize.forEach(({ name, type, size }) => {\n      const readLinesResult = this.read_lines(\n        false,\n        new Variable({ name, type }),\n        size,\n        indentLvl,\n      );\n      lines.push(...readLinesResult);\n    });\n    return lines;\n  }\n\n  /* Generate the Javascript code to read all input variables */\n  read_vars() {\n    const lines = [];\n    const allVariable = this.inputs.getAllVars();\n\n    allVariable.forEach((variable$) => {\n      if (variable$.length === 1) {\n        const { name, type, formatStyle }: Variable = variable$[0];\n        const readLinesResult = this.read_lines(\n          true,\n          new Variable({\n            name: varName(name),\n            type: type,\n            formatStyle: formatStyle,\n          }),\n          varName(type.size),\n          1,\n        );\n        lines.push(...readLinesResult);\n      } else {\n        const variable = variable$.map((variable) => varName(variable.name)).join(', ');\n        lines.push(\n          `${INDENTATION}const [${variable}] = stdin[line++].split(\" \").map(Number);`,\n        );\n      }\n    });\n\n    return lines;\n  }\n}\n\nexport function genJavascript(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const args = inputSchema.inputs.map((i) => varName(i.name)).join(', ');\n  const call = `${inputSchema.name}(${args});`;\n\n  const parserJS = new ParserJS(inputSchema);\n  const parser = parserJS.read_vars().join('\\n');\n\n  const result = jsTemplate({\n    call,\n    parser,\n    ind: INDENTATION,\n    outputName: inputSchema.output.name,\n    functionName: inputSchema.name,\n  });\n\n  return result;\n}\n\nexport function genPlaceholderTest(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const args = inputSchema.inputs.map((i) => varName(i.name)).join(', ');\n  const placeholderCall = `function ${inputSchema.name} (${args}) {\\n\\t\\n};`;\n  return placeholderCall;\n}\n\nexport function genJavascriptSolution(placeholder, functionName) {\n  let result = placeholder + '\\n';\n  result += `module.exports = ${functionName}`;\n  return result;\n}\n","import * as json from '../test/custom.input.json';\nimport { javascriptKeyword } from '../utils/keywords';\nimport { DEFAULT_OUTPUT_NAME } from '../configs/constants';\nimport { Input, TypeEnum, Variable } from '../types';\nimport { jsTemplateOutput } from '../utils/jsTemplate';\nimport { camelCase, IteratorName, WordsName } from '../utils/utils';\n\nconst INDENTATION = '    ';\n\n/**\n * Transform a variable name into a valid one for Javascript\n * @param name\n * @returns\n */\nfunction varName(name) {\n  const candidate = camelCase(name);\n\n  if (['process', 'stdin', 'line', 'main'].includes(candidate)) {\n    return candidate + '_';\n  }\n\n  return javascriptKeyword.has(candidate) ? candidate + '_' : candidate;\n}\n\nclass ParserJSOutput {\n  input: Input;\n  existingName: string[];\n  iterator: IteratorName;\n  words: WordsName;\n  /* Create the Javascript code to parse an input */\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.existingName = input_data.inputs\n      .map((element) => varName(element.name))\n      .concat(varName(input_data.name));\n    this.iterator = new IteratorName(this.existingName);\n    this.words = new WordsName(this.existingName);\n  }\n\n  read_line(decl, name, type, size, indentLvl) {\n    /* Generate the Javascript code to read a line of given type */\n    let lines, struct, words;\n    const indent = INDENTATION.repeat(indentLvl);\n    const start = indent + (decl ? 'const ' : '') + name + ' = ';\n\n    if (type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      const sizeName = size;\n\n      if (type.encapsulated.main === TypeEnum.CHAR) {\n        lines.push(start + 'stdin[line++].split(\"\");');\n      }\n\n      lines.push(start + `stdin[line++].split(\" \", ${sizeName}).map(Number);`);\n      return lines;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      struct = this.input.getStruct(type.structName);\n      words = this.words.next_name();\n      lines = [indent + `const ${words} = stdin[line++].split(\" \");`, start + '{'];\n\n      const fields = struct.fields.map((field, index) => {\n        return `${indent}${INDENTATION}\"${varName(field.name)}\": ${\n          field.type.main === TypeEnum.CHAR\n            ? `${words}[${index}]`\n            : `Number(${words}[${index}])`\n        },`;\n      });\n      lines.push(...fields);\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    return [\n      start +\n        {\n          [TypeEnum.INTEGER]: 'Number(stdin[line++]);',\n          [TypeEnum.CHAR]: 'stdin[line++];',\n          [TypeEnum.STRING]: 'stdin[line++];',\n        }[type.main],\n    ];\n  }\n\n  read_lines(decl, variable, size, indentLvl) {\n    /* Generate the Javascript code to read the lines for a given type */\n    if (variable.fitsInOneLine(this.input.structs)) {\n      return this.read_line(decl, variable.name, variable.type, size, indentLvl);\n    }\n\n    const indent = INDENTATION.repeat(indentLvl);\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      let sizeName = size;\n      if (!size) {\n        sizeName = varName(variable.name) + 'Size';\n        lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      }\n\n      lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = [];`);\n      const iterator = this.iterator.new_it();\n      const inner_name = this.iterator.new_it();\n      lines.push(\n        indent + `for (let ${iterator} = 0; ${iterator} < ${sizeName}; ${iterator}++) {`,\n      );\n      this.words.push_scope();\n      const readLinesResult = this.read_lines(\n        true,\n        new Variable({ name: inner_name, type: variable.type.encapsulated }),\n        varName(variable.type.encapsulated.size),\n        indentLvl + 1,\n      );\n      lines.push(...readLinesResult);\n      lines.push(indent + INDENTATION + `${variable.name}.push(${inner_name});`);\n      this.words.pop_scope();\n      this.iterator.pop_it();\n      this.iterator.pop_it();\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    const struct = this.input.getStruct(variable.type.structName);\n    const lines = [];\n    lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = {};`);\n    const structNameTypeSize = struct.fieldsNameTypeSize(`${variable.name}.$$`, varName);\n    structNameTypeSize.forEach(({ name, type, size }) => {\n      const readLinesResult = this.read_lines(\n        false,\n        new Variable({ name, type }),\n        size,\n        indentLvl,\n      );\n      lines.push(...readLinesResult);\n    });\n    return lines;\n  }\n\n  read_vars() {\n    /* Generate the Javascript code to read all input variables */\n    const lines = [];\n    const { name, type, formatStyle } = this.input.output;\n\n    const readLinesResult = this.read_lines(\n      true,\n      new Variable({\n        name: varName(name),\n        type: type,\n        formatStyle: formatStyle,\n      }),\n      varName(type.size),\n      1,\n    );\n    lines.push(...readLinesResult);\n\n    return lines;\n  }\n}\n\nexport function genOutput(inputSchema) {\n  const parserJS = new ParserJSOutput(inputSchema);\n  const parser = parserJS.read_vars().join('\\n');\n  const outputName = inputSchema.output.name\n    ? varName(inputSchema.output.name)\n    : DEFAULT_OUTPUT_NAME;\n\n  return jsTemplateOutput({\n    ind: INDENTATION,\n    parser,\n    outputName,\n  });\n}\n\n// genOutput();\n","import { javascriptKeyword, pythonKeyword } from '../utils/keywords';\nimport { Input, Type, TypeEnum, Variable, FormatStyle } from '../types';\nimport { snakeCase, IteratorName, WordsName, pascalCase } from '../utils/utils';\nimport * as json from '../test/custom.input.json';\nconst INDENTATION = '    ';\n\n/* Transform a variable name into a valid one for Python */\nfunction varName(name) {\n  const candidate = snakeCase(name);\n  return pythonKeyword.has(candidate) || candidate === 'dataclass'\n    ? candidate + '_'\n    : candidate;\n}\n\nfunction className(name) {\n  /* Transform a class name into a valid one for Python */\n  const candidate = pascalCase(name);\n  return candidate === 'List' ? candidate + '_' : candidate;\n}\n\nfunction typeString(type: Type) {\n  switch (type.main) {\n    case TypeEnum.INTEGER:\n      return 'int';\n    case TypeEnum.CHAR:\n      return 'str';\n    case TypeEnum.STRING:\n      return 'str';\n    case TypeEnum.OBJECT:\n      return className(type.structName);\n    case TypeEnum.ARRAY:\n      return `List[${typeString(type.encapsulated)}]`;\n    default:\n      throw new Error('khong ton tai type');\n  }\n}\n\nfunction declareClasses(input_data: Input) {\n  /* Return declarations of structs as data classes */\n  const lines = [];\n  input_data.structs.forEach((struct) => {\n    lines.push('@dataclass');\n    lines.push(`class ${className(struct.name)}:`);\n    lines.push(`${INDENTATION}\"\"\"${struct.comment}\"\"\"`);\n    struct.fields.forEach((field) => {\n      lines.push(\n        `${INDENTATION}${varName(field.name)}: ` +\n          `${typeString(field.type)}  # ${field.comment}`,\n      );\n    });\n  });\n  return lines;\n}\n\nfunction declareImport(input_data: Input) {\n  const lines = ['import json'];\n\n  if (input_data.structs) {\n    lines.push('from dataclasses import dataclass');\n  }\n\n  let hasList = false;\n  input_data.structs.forEach((struct) => {\n    struct.fields.forEach((field) => {\n      if (field.type.main === TypeEnum.ARRAY) {\n        hasList = true;\n      }\n    });\n  });\n  input_data.inputs.forEach((variable) => {\n    if (variable.type.main === TypeEnum.ARRAY) {\n      hasList = true;\n    }\n  });\n\n  if (hasList) {\n    lines.push('from typing import List');\n  }\n  if (lines) {\n    lines.push('');\n  }\n  return lines;\n}\n\n/* Wrap a line of function define/call just like black would do */\nfunction wrapLine(begin: string, end: string, args: string[], indent_lvl = 0) {\n  const max_chars = 88;\n  const args_size = args.join(', ').length;\n\n  if (\n    begin.length + end.length + args_size + INDENTATION.repeat(indent_lvl).length <=\n    max_chars\n  ) {\n    return [`${INDENTATION.repeat(indent_lvl)}${begin}${args.join(', ')}${end}`];\n  }\n\n  if (args_size + INDENTATION.repeat(indent_lvl + 1).length <= max_chars) {\n    return [\n      `${INDENTATION.repeat(indent_lvl)}${begin}`,\n      `${INDENTATION.repeat(indent_lvl + 1)}${args.join(', ')}`,\n      `${INDENTATION.repeat(indent_lvl)}${end}`,\n    ];\n  }\n\n  return [`${INDENTATION.repeat(indent_lvl)}${begin}`]\n    .concat(args.map((line) => `${INDENTATION.repeat(indent_lvl + 1)}${line},`))\n    .concat([`${INDENTATION.repeat(indent_lvl)}${end}`]);\n}\n\nfunction readLine(type: Type, input_data: Input) {\n  if (type.main === TypeEnum.ARRAY) {\n    if (type.encapsulated.main === TypeEnum.CHAR) {\n      return 'list(input())';\n    }\n    return 'list(map(int, input().split()))';\n  }\n  if (type.main === TypeEnum.OBJECT) {\n    const struct = input_data.getStruct(type.structName);\n\n    if (struct.fields.every((field) => field.type.main === TypeEnum.INTEGER)) {\n      return `${className(struct.name)}(*map(int, input().split()))`;\n    }\n    if (struct.fields.every((field) => field.type.main === TypeEnum.CHAR)) {\n      return `${className(struct.name)}(*input().split())`;\n    }\n\n    const lamdaStatment = 'lamda x, y: int(y) if x else y';\n    const mappingStdin = struct.fields\n      .map((field) => (field.type.main === TypeEnum.INTEGER ? 1 : 0))\n      .join(', ');\n\n    return `${className(\n      struct.name,\n    )}(*map(${lamdaStatment}, (${mappingStdin}), input().split()))`;\n  }\n\n  return {\n    [TypeEnum.INTEGER]: 'int(input())',\n    [TypeEnum.CHAR]: 'input()[0]',\n    [TypeEnum.STRING]: 'input()',\n  }[type.main];\n}\n\nfunction readLines(\n  type: Type,\n  size: string,\n  input_data: Input,\n  style: FormatStyle = FormatStyle.DEFAULT,\n) {\n  if (type.fitsInOneLine(input_data.structs, style)) {\n    return [readLine(type, input_data)];\n  }\n  if (type.main == TypeEnum.ARRAY) {\n    let lines = readLines(type.encapsulated, varName(type.encapsulated.size), input_data);\n\n    if (lines.length === 1) {\n      const candidate = `[${lines[0]} for _ in range(int(input()))]`;\n      if (candidate.length <= 75) {\n        return [candidate];\n      }\n    }\n\n    lines.append(`for _ in range(int(input()))`);\n    if (lines[0].length < 5) {\n      lines[0] = '[' + lines[0];\n    }\n\n    lines = ['['].concat(lines.map((i) => INDENTATION + i));\n    lines.append(']');\n    return lines;\n  }\n\n  const struct = input_data.getStruct(type.structName);\n  if (struct.is_sized_struct()) {\n    const inner = 'i';\n    const lines = readLines(struct.fields[1].type, inner, input_data);\n    return [`(lambda ${inner}: ${className(struct.name)}(`, INDENTATION + `${inner},`]\n      .concat(lines.map((i) => INDENTATION + i))\n      .concat(['))(int(input()))']);\n  }\n  const fields = [];\n  struct.fields.forEach((field) => {\n    const lines = readLines(field.type, varName(field.type.size), input_data);\n    lines[lines.length - 1] += ',';\n    const fieldLines = lines.map((i) => INDENTATION + i);\n    fields.push(...fieldLines);\n  });\n  return [`${className(struct.name)}(`].concat(fields).concat([')']);\n}\n\nfunction readVars(input_data: Input) {\n  const lines = [];\n  const allVaraible = input_data.getAllVars();\n  allVaraible.forEach((variables) => {\n    if (variables.length === 1) {\n      const variable: Variable = variables[0];\n      const variableLines = readLines(\n        variable.type,\n        varName(variable.type.size),\n        input_data,\n        variable.formatStyle,\n      );\n      variableLines[0] = `${varName(variable.name)} = ${variableLines[0]}`;\n      lines.push(...variableLines);\n    } else {\n      const variables$ = variables.map((variable) => varName(variable.name)).join(', ');\n      lines.push(variables$);\n      lines.push(` = map(int, input().split())`);\n    }\n  });\n\n  return lines;\n}\n\nclass ParserPython {\n  input: Input;\n  main: any[];\n  method: any[];\n\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.main = [];\n    this.method = [];\n  }\n\n  call(reprint = false) {\n    const functionName = varName(this.input.name);\n    const outputName = varName(this.input.output.name) || '__output__';\n    const argsParam = this.input.inputs.map(\n      (element) => `${varName(element.name)}: ${typeString(element.type)}`,\n    );\n    this.method.push(...wrapLine(`def ${functionName}(`, `) -> None:`, argsParam));\n    //Todo comment\n    // this.method.push(INDENTATION + '\"\"\"')\n    // this.input.inputs.forEach(arg => {\n    //   this.method.push(`${INDENTATION}:param ${varName(arg.name)}: ${arg.comment}`)\n    // })\n    // this.method.push(INDENTATION + '\"\"\"')\n    // if(reprint) {\n\n    // }\n    // else{\n\n    // }\n    this.method.push('\\n');\n    this.method.push(INDENTATION + 'pass');\n    const argsCall = this.input.inputs.map((element) => varName(element.name));\n    this.main.push(\n      ...wrapLine(`${varName(this.input.output.name)} = ${functionName}(`, ')', argsCall),\n    );\n    this.main.push(`print('@@result@@')`);\n    this.main.push(`print(${outputName})`);\n  }\n\n  content() {\n    let output = '';\n    declareImport(this.input).forEach((line) => (output += line + '\\n'));\n    declareClasses(this.input).forEach((line) => (output += line + '\\n'));\n    this.main.push(...readVars(this.input));\n    this.call();\n    this.method.forEach((line) => (output += line + '\\n'));\n    // if (this.method) output += '\\n';\n    output += '\\nif __name__ == \"__main__\":\\n';\n    this.main.forEach((line) => (output += INDENTATION + line + '\\n'));\n    return output;\n  }\n}\n\nexport function genPython(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const result = new ParserPython(inputSchema).content();\n  return result;\n}\n","import { zip } from './utils/utils';\nimport { DEFAULT_OUTPUT_NAME } from './configs/constants';\n\nexport enum TypeEnum {\n  INTEGER = 'INTEGER',\n  CHAR = 'CHAR',\n  STRING = 'STRING',\n  ARRAY = 'ARRAY',\n  OBJECT = 'OBJECT',\n}\n\nexport enum FormatStyle {\n  DEFAULT = 'DEFAULT',\n  NO_ENDLINE = 'NO_ENDLINE', // An integer that has no endline after it (an other follows)\n  FORCE_NEWLINES = 'FORCE_NEWLINES', // A integer list with each int on a new line\n}\n\n/* Represent a struct (like in C) */\nexport class Struct {\n  name: string;\n  comment: string;\n  fields: Variable[];\n\n  constructor(data: Partial<Struct>) {\n    Object.assign(this, data);\n  }\n\n  /* A special kind of struct: first field is the size of the second */\n  is_sized_struct() {\n    return (\n      this.fields.length === 2 &&\n      this.fields[0].type.main === TypeEnum.INTEGER &&\n      [TypeEnum.STRING, TypeEnum.ARRAY].includes(this.fields[1].type.main) &&\n      this.fields[0].name === this.fields[1].type.size\n    );\n  }\n\n  fieldsNameTypeSize(format_spec, varName): { name; type; size }[] {\n    let typeSize = this.fields.map((element) => varName(element.type.size));\n    if (this.is_sized_struct()) {\n      typeSize = ['', format_spec.replace('$$', varName(this.fields[0].name))];\n    }\n    const zipArray = zip(this.fields, typeSize);\n\n    return this.fields.map((field, index) => {\n      return {\n        name: format_spec.replace('$$', varName(zipArray[index][0].name)),\n        type: zipArray[index][0].type,\n        size: zipArray[index][1],\n      };\n    });\n  }\n\n  static formJson({ name, comment, fields }) {\n    if (!name || !fields) {\n      return null;\n    }\n\n    const fieldList = [];\n    fields.forEach((element) => {\n      const variable = Variable.fromJson(element);\n      if (!variable) return null;\n\n      fieldList.push(variable);\n    });\n\n    const customName = name.toUpperCase();\n    return new Struct({ name: customName, comment, fields: fieldList });\n  }\n}\n\n/* Everything there is to know about a variable */\nexport class Variable {\n  name: string;\n  comment: string;\n  type: Type;\n  constraints: any;\n  formatStyle: FormatStyle;\n\n  constructor(data: Partial<Variable> = {}) {\n    Object.assign(this, data);\n  }\n\n  /* Return False if more than one line is needed for this variable */\n  fitsInOneLine(structs: Struct[]) {\n    return this.type.fitsInOneLine(structs, this.formatStyle);\n  }\n\n  static fromJson({ name, comment, type, format }) {\n    if (!name || !type) {\n      return null;\n    }\n\n    const type$ = Type.fromString(type);\n    if (!type$) return null;\n\n    let formatStyle = FormatStyle.DEFAULT;\n    if (format) {\n      if (format === 'no_endlines') {\n        if (type$.main != TypeEnum.INTEGER) {\n          return null;\n        }\n        formatStyle = FormatStyle.NO_ENDLINE;\n      } else if (format === 'force_newlines') {\n        if (\n          type$.main != TypeEnum.ARRAY ||\n          type$.encapsulated === null ||\n          type$.encapsulated.main != TypeEnum.INTEGER\n        ) {\n          return null;\n        }\n        formatStyle = FormatStyle.FORCE_NEWLINES;\n      } else {\n        throw new Error('khong dung format');\n      }\n    }\n\n    return new Variable({ name, comment, type: type$, formatStyle });\n  }\n}\n\n/* Represents the user input, parsed */\nexport class Input {\n  name?: string;\n  structs?: Struct[];\n  inputs?: Variable[];\n  subject?: string;\n  output?: Variable;\n\n  constructor(data: Partial<Input>) {\n    Object.assign(this, data);\n  }\n\n  getStruct(name: string): Struct {\n    /* Get a struct by its name (or throw StopIteration) */\n    return this.structs.find((struct: Struct) => struct.name === name);\n  }\n\n  getAllVars() {\n    const ret = [];\n    let current = [];\n    this.inputs.forEach((element) => {\n      current.push(element);\n      if (element.formatStyle !== FormatStyle.NO_ENDLINE) {\n        ret.push(current);\n        current = [];\n      }\n    });\n    return ret;\n  }\n\n  static formJson({ name, structs, inputs, subject, output }) {\n    const variableLookup = {};\n    const variableDicts = [];\n    const structs$ = [];\n\n    if (structs) {\n      structs.forEach((struct) => {\n        const struct$ = Struct.formJson(struct);\n        if (!struct$) return null;\n        structs$.push(struct$);\n        struct$.fields.forEach((field) => {\n          if (variableLookup[field.name]) {\n            throw new Error('Several struct fields are called' + field.name);\n          }\n          variableLookup[field.name] = field;\n        });\n        variableDicts.concat(struct$.fields);\n      });\n    }\n\n    const variables = [];\n    inputs.forEach((input) => {\n      const variable = Variable.fromJson(input);\n      if (!variable) return null;\n      variables.push(variable);\n      if (variableLookup[variable.name]) {\n        throw new Error('Several variables or struct fields ' + variable.name);\n      }\n      variableLookup[variable.name] = variable;\n      variableDicts.push(input);\n    });\n\n    // Todo check vaild variable name\n\n    if (!output.name) output.name = DEFAULT_OUTPUT_NAME;\n    const output$ = Variable.fromJson(output);\n\n    return new Input({\n      name,\n      structs: structs$,\n      inputs: variables,\n      subject,\n      output: output$,\n    });\n  }\n}\n\n/* Represents the type of a variable */\nexport class Type {\n  main: any;\n  size?: string;\n  can_be_empty?: boolean;\n  encapsulated?: Type;\n  structName?: string;\n\n  constructor(data: Partial<Type>) {\n    Object.assign(this, data);\n  }\n\n  // toString() {\n  //   switch (this.main) {\n  //     case TypeEnum.INTEGER:\n  //       return 'int';\n  //     case TypeEnum.CHAR:\n  //       return 'char';\n  //     case TypeEnum.STRING:\n  //       return `str(${this.size})`;\n  //     case TypeEnum.ARRAY:\n  //       return `Array[${this.encapsulated}](${this.size})`;\n  //     case TypeEnum.OBJECT:\n  //       return `@${this.structName}`;\n  //     default:\n  //       throw new Error('not exist type');\n  //   }\n  // }\n\n  canBeInlined() {\n    /* Can we parse several of this type on a single line */\n    return [TypeEnum.INTEGER, TypeEnum.CHAR].includes(this.main);\n  }\n\n  fitsInOneLine(structs: Array<Struct>, style: FormatStyle = FormatStyle.DEFAULT) {\n    const fitOneLineType = [TypeEnum.INTEGER, TypeEnum.CHAR, TypeEnum.STRING];\n    if (fitOneLineType.includes(this.main)) return true;\n\n    switch (this.main) {\n      case TypeEnum.ARRAY:\n        return this.encapsulated.canBeInlined();\n      case TypeEnum.OBJECT: {\n        const struct = structs.find((struct) => struct.name === this.structName);\n        return struct.fields.every((field: Variable) => {\n          return field.type.canBeInlined();\n        });\n      }\n      default:\n        throw new Error('khong ton tai key');\n    }\n  }\n\n  static fromString(string: string): Type {\n    switch (string) {\n      case TypeEnum.INTEGER:\n        return new Type({ main: TypeEnum.INTEGER });\n      case TypeEnum.CHAR:\n        return new Type({ main: TypeEnum.CHAR });\n      case TypeEnum.STRING:\n        return new Type({ main: TypeEnum.STRING });\n      default: {\n        const parseTypeResult = parseType(string);\n        if (parseTypeResult) {\n          if (parseTypeResult.type === TypeEnum.OBJECT) {\n            return new Type({\n              main: TypeEnum.OBJECT,\n              structName: parseTypeResult.encapsulated.toUpperCase(),\n            });\n          }\n          if (parseTypeResult.type === TypeEnum.ARRAY) {\n            const encapsulated = Type.fromString(parseTypeResult.encapsulated);\n            return new Type({\n              main: TypeEnum.ARRAY,\n              size: parseTypeResult.size,\n              encapsulated,\n            });\n          }\n        }\n        return null;\n      }\n    }\n  }\n}\n\n// (Object|Array)({|[])innerType(]|})(size)\nfunction parseType(string) {\n  const regex =\n    /^(OBJECT|ARRAY)((\\[|{)([A-Za-z][A-Za-z0-9{}[\\]()) ]*)(}|\\]))?(\\(([A-Za-z0-9 ])\\))?$/;\n  const result = string.match(regex);\n  if (result) {\n    return {\n      type: result[1],\n      encapsulated: result[4],\n      size: result[7],\n    };\n  }\n  return null;\n}\n","export function template(strings, ...keys) {\n  return function (...values) {\n    const dict = values[values.length - 1] || {};\n    const result = [strings[0]];\n    keys.forEach(function (key, i) {\n      const value = Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 1]);\n    });\n    return result.join('');\n  };\n}\n\nexport const jsTemplate = template`\n\"use strict\";\nconst ${'functionName'} =  require('/user-solve/solution');\n\nfunction main(stdin) {\n${'ind'}let line = 0;\n\n${'parser'}\n\n${'ind'}const ${'outputName'} = ${'call'}\n${'ind'}console.log('@result@');\n${'ind'}console.log(JSON.stringify(${'outputName'}));\n\n}\n\nlet stdin = \"\";\nprocess.stdin.on(\"data\", data => stdin += data.toString())\n             .on(\"end\", () => main(stdin.split(\"\\\\n\")));\n`;\n\nexport const jsTemplateOutput = template`\nfunction main(stdin) {\n${'ind'}let line = 0;\n${'parser'}\n${'ind'}return JSON.stringify(${'outputName'})\n}\nmodule.exports = { main };\n`;\n\nexport const jsTemplateBackup = template`\n\"use strict\";\n\n${'placeholder'}\n\nfunction main(stdin) {\n${'ind'}let line = 0;\n\n${'parser'}\n${'ind'}${'placeholderCall'}\n}\n\nlet stdin = \"\";\nprocess.stdin.on(\"data\", data => stdin += data.toString())\n             .on(\"end\", () => main(stdin.split(\"\\\\n\")));\n`;\n","export const javascriptKeyword = new Set([\n  \"process\",\n  \"stdin\",\n  \"line\",\n  \"main\",\n  \"abstract\",\n  \"arguments\",\n  \"await\",\n  \"boolean\",\n  \"break\",\n  \"byte\",\n  \"case\",\n  \"catch\",\n  \"char\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"double\",\n  \"else\",\n  \"enum\",\n  \"eval\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"final\",\n  \"finally\",\n  \"float\",\n  \"for\",\n  \"function\",\n  \"goto\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"instanceof\",\n  \"int\",\n  \"interface\",\n  \"let\",\n  \"long\",\n  \"native\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"short\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"synchronized\",\n  \"this\",\n  \"throw\",\n  \"throws\",\n  \"transient\",\n  \"true\",\n  \"try\",\n  \"typeof\",\n  \"var\",\n  \"void\",\n  \"volatile\",\n  \"while\",\n  \"with\",\n  \"yield\"\n]);\n\nexport const pythonKeyword = new Set([\n  \"False\",\n  \"None\",\n  \"True\",\n  \"and\",\n  \"as\",\n  \"assert\",\n  \"async\",\n  \"await\",\n  \"break\",\n  \"class\",\n  \"continue\",\n  \"def\",\n  \"del\",\n  \"elif\",\n  \"else\",\n  \"except\",\n  \"finally\",\n  \"for\",\n  \"from\",\n  \"global\",\n  \"if\",\n  \"import\",\n  \"in\",\n  \"is\",\n  \"lambda\",\n  \"nonlocal\",\n  \"not\",\n  \"or\",\n  \"pass\",\n  \"raise\",\n  \"return\",\n  \"try\",\n  \"while\",\n  \"with\",\n  \"yield\"\n]);\n\nexport const cplusplusKeyword = new Set([\n  \"alignas\",\n  \"alignof\",\n  \"and\",\n  \"and_eq\",\n  \"asm\",\n  \"atomic_cancel\",\n  \"atomic_commit\",\n  \"atomic_noexcept\",\n  \"auto\",\n  \"bitand\",\n  \"bitor\",\n  \"bool\",\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"char\",\n  \"char16_t\",\n  \"char32_t\",\n  \"class\",\n  \"compl\",\n  \"concept\",\n  \"const\",\n  \"constexpr\",\n  \"const_cast\",\n  \"continue\",\n  \"co_await\",\n  \"co_return\",\n  \"co_yield\",\n  \"decltype\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"double\",\n  \"dynamic_cast\",\n  \"else\",\n  \"enum\",\n  \"explicit\",\n  \"export\",\n  \"extern\",\n  \"false\",\n  \"float\",\n  \"for\",\n  \"friend\",\n  \"goto\",\n  \"if\",\n  \"import\",\n  \"inline\",\n  \"int\",\n  \"long\",\n  \"module\",\n  \"mutable\",\n  \"namespace\",\n  \"new\",\n  \"noexcept\",\n  \"not\",\n  \"not_eq\",\n  \"nullptr\",\n  \"operator\",\n  \"or\",\n  \"or_eq\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"reflexpr\",\n  \"register\",\n  \"reinterpret_cast\",\n  \"requires\",\n  \"return\",\n  \"short\",\n  \"signed\",\n  \"sizeof\",\n  \"static\",\n  \"static_assert\",\n  \"static_cast\",\n  \"struct\",\n  \"string\",\n  \"switch\",\n  \"synchronized\",\n  \"template\",\n  \"this\",\n  \"thread_local\",\n  \"throw\",\n  \"true\",\n  \"try\",\n  \"typedef\",\n  \"typeid\",\n  \"typename\",\n  \"union\",\n  \"unsigned\",\n  \"using\",\n  \"virtual\",\n  \"void\",\n  \"volatile\",\n  \"wchar_t\",\n  \"while\",\n  \"xor\",\n  \"xor_eq\"\n]);\n","export function canBeOneLine(type) {\n  const canBeOneLineType = ['int', 'char'];\n  return canBeOneLineType.includes(type);\n}\n\nexport function fitOneLine(input, structs) {\n  const fitOneLineType = ['int', 'char', 'string'];\n\n  if (fitOneLineType.includes(input.type)) return true;\n\n  if (input.type === 'list') {\n    return canBeOneLine(input.encapsulated.type);\n  }\n\n  if (input.type === 'struct') {\n    const struct = structs.find((struct) => struct.name == input.name);\n    for (let i = 0; i < struct.fields.length; i++) {\n      if (!canBeOneLine(struct.fields[i].type)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return 'khong phai type';\n}\n\nexport function camelCase(string = '') {\n  return string.replace(/^([A-Z])|\\W(\\w)/g, function (match, p1, p2, offset) {\n    if (p2) return p2.toUpperCase();\n    return p1.toLowerCase();\n  });\n}\n\n/**\n * 1.2 ==> 1_2\n * @param string\n * @returns\n */\nexport function snakeCaseWithoutDot(string = '') {\n  return string\n    .replace(/\\W+/g, ' ')\n    .split(/ |\\B(?=[A-Z])/)\n    .map((word) => word.toLowerCase())\n    .join('_');\n}\n\n/**\n * 1.2 ==> 1.2\n * @param string\n * @returns\n */\nexport function snakeCase(string = '') {\n  return string\n    .replace(/[^a-zA-Z0-9_.]+/g, ' ')\n    .split(/ |\\B(?=[A-Z])/)\n    .map((word) => word.toLowerCase())\n    .join('_');\n}\n\nexport function specialCaseToCamelCase(string, character) {\n  const pattern = `[${character}][a-z]`;\n  const regex = new RegExp(pattern, 'g');\n  return string.replace(regex, (group) => group.slice(-1).toUpperCase());\n}\nexport function pascalCase(string) {\n  return (' ' + string).toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => {\n    return chr.toUpperCase();\n  });\n}\n\nexport function sortCompareString(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function intToIterator(value = 104) {\n  if (value < 105) {\n    return String.fromCharCode(105);\n  }\n  return String.fromCharCode(value);\n}\n\nexport const zip = (a, b) => a.map((k, i) => [k, b[i]]);\n/**\n * Map a integer to a iterator name (1 -> i, 18 -> z, 19 -> ii, ...)\n * @param value\n * @returns\n */\nfunction intToIteratorName(value = 1) {\n  const charCode = String.fromCharCode(((value - 1) % 18) + 105);\n  return charCode.repeat((value - 1) / 18 + 1);\n}\n\n/**\n * Give valid iterator names, like i, j, k, preventing scope conflicts\n */\nexport class IteratorName {\n  existingNames: Array<string>;\n  private current: number;\n  constructor(existingName: Array<string>) {\n    this.existingNames = existingName.map((element) => element.trim().toLowerCase());\n    this.current = 0;\n  }\n  new_it() {\n    /* Return the name of the next iterator */\n    this.current += 1;\n    while (this.existingNames.includes(intToIteratorName(this.current))) {\n      this.current += 1;\n    }\n    return intToIteratorName(this.current);\n  }\n\n  /* Signal that the scope of the last iterator ended */\n  pop_it() {\n    this.current -= 1;\n\n    while (\n      this.current > 0 &&\n      this.existingNames.includes(intToIteratorName(this.current))\n    ) {\n      this.current -= 1;\n    }\n  }\n}\n\nexport class WordsName {\n  existingNames: string[];\n  current: number;\n  before_scopes: number[];\n  cs_mode: boolean;\n  above_scopes: any[];\n  other_scopes: any[];\n  /* Give valid variable names starting with 'words' */\n  constructor(existingNames, cs_mode = false) {\n    this.existingNames = existingNames.map((element: string) =>\n      element.trim().split(' ').join(''),\n    );\n\n    this.current = -1;\n    this.before_scopes = [-1];\n    this.cs_mode = cs_mode;\n    this.above_scopes = [new Set()];\n    this.other_scopes = [new Set()];\n  }\n\n  next_name() {\n    /* Give the next variable name */\n    let current: number;\n    this.current += 1;\n    current = this.current;\n\n    if (this.cs_mode) {\n      current = 0;\n\n      while (!this._is_possible_value(current)) {\n        current += 1;\n      }\n    }\n\n    const candidate = `words${current !== 0 ? current : ''}`;\n\n    if (this.existingNames.includes(candidate)) {\n      return this.next_name();\n    }\n\n    this.above_scopes.slice(-1)[0].add(current);\n    return candidate;\n  }\n\n  _is_possible_value(value: number) {\n    this.above_scopes.forEach((element) => {\n      if (element.has(value)) {\n        return false;\n      }\n    });\n\n    const lastOtherScope = this.other_scopes[this.other_scopes.length];\n    if (lastOtherScope.has(value) || lastOtherScope.has(this.cs_mode)) {\n      return false;\n    }\n\n    const candidate = `words${value !== 0 ? value : ''}`;\n    return !this.existingNames.includes(candidate);\n  }\n\n  push_scope() {\n    /* Declare a new scope */\n    this.before_scopes.push(this.current);\n    this.above_scopes.push(new Set());\n    this.other_scopes.push(new Set());\n  }\n\n  pop_scope() {\n    /* Declare a scope's end */\n    this.current = this.before_scopes.pop();\n\n    this.other_scopes.slice(-2)[0] = this.other_scopes.pop();\n    this.other_scopes.slice(-1)[0] = this.above_scopes.pop();\n  }\n}\n","export * from \"./lib/runner.constant\";\nexport * from \"./lib/casbin.constant\";\nexport * from \"./lib/message-partern.constant\";\n","export const ADAPTER_MODULE_OPTIONS = 'ADAPTER_MODULE_OPTIONS';\nexport const ADAPTER_ENFORCER = 'ADAPTER_ENFORCER';\nexport const PERMISSIONS_METADATA = '__PERMISSIONS__';\n","export const COMMENT_FIND_MANY_BY_ID = \"comment.find.many.by_id\";\nexport const COMMENT_VOTE = \"comment.vote\";\nexport const COMMENT_UNVOTE = \"comment.unvote\";\nexport const COMMENT_CREATE = \"comment.create\";\nexport const COMMENT_DELETE = \"comment.delete\";\n\n/**\n * ROLE MESSAGE PATTERN\n */\nexport const ROLE_FIND_MANY = \"role.find.many\";\nexport const ROLE_FIND_UNIQUE = \"role.find.unique\";\nexport const ROLE_VOTE = \"role.vote\";\nexport const ROLE_UNVOTE = \"role.unvote\";\nexport const ROLE_CREATE = \"role.create\";\nexport const ROLE_UPDATE = \"role.update\";\nexport const ROLE_DELETE = \"role.delete\";\n\n/**\n * CHALLENGE MESSAGE PATTERN\n */\nexport const CHALLENGE_FIND_MANY = \"challenge.find.many\";\nexport const CHALLENGE_FIND_MANY_PUBLIC = \"challenge.find.many.public\";\nexport const CHALLENGE_FIND_UNIQUE_PUBLIC = \"challenge.find.unique.public\";\nexport const CHALLENGE_FIND_UNIQUE = \"challenge.find.unique\";\nexport const CHALLENGE_CREATE = \"challenge.create\";\nexport const CHALLENGE_UPDATE = \"challenge.update\";\nexport const CHALLENGE_DELETE = \"challenge.delete\";\nexport const CHALLENGE_SUBMIT = \"challenge.submit\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_FIND_MANY = \"submission.find.many\";\nexport const SUBMISSION_FIND_MANY_BY_USER = \"submission.find.many.by_user\";\nexport const SUBMISSION_FIND_UNIQUE = \"submission.find.unique\";\nexport const SUBMISSION_CREATE = \"submission.create\";\nexport const SUBMISSION_UPDATE = \"submission.update\";\nexport const SUBMISSION_DELETE = \"submission.delete\";\nexport const SUBMISSION_SUBMIT = \"submission.submit\";\nexport const SUBMISSION_TEST = \"submission.test\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_STATISTIC_FIND_MANY = \"submission.find.many\";\n\n/**\n * USER MESSAGE PATTERN\n */\nexport const USER_FIND_MANY = \"user.find.many\";\nexport const USER_FIND_UNIQUE_BY_USERNAME = \"user.find.unique.by_username\";\nexport const USER_FIND_UNIQUE = \"user.find.unique\";\nexport const USER_VOTE = \"user.vote\";\nexport const USER_UNVOTE = \"user.unvote\";\nexport const USER_CREATE = \"user.create\";\nexport const USER_UPDATE = \"user.update\";\nexport const USER_DELETE = \"user.delete\";\nexport const USER_SUBMIT = \"user.submit\";\n","export const RUN_TEST = \"run_test\";\nexport const RUN_SUBMIT = \"run_submit\";\nexport const RUN_ALL = \"run_all\";\n\nexport enum RUN_TYPE {\n  TEST = \"run_test\",\n  SUBMIT = \"run_submit\",\n  ALL = \"run_all\"\n}\n","import { Field, OmitType } from '@nestjs/graphql';\nimport { FindManyChallengeArgs as FindManyChallengeArgsGenerated } from '@koj/generated/challenge/find-many-challenge.args';\nimport { KChallengeWhereUniqueInput } from './challenge-where-unique.input';\n\nexport class FindManyChallengeArgs extends FindManyChallengeArgsGenerated {\n  @Field(() => KChallengeWhereUniqueInput, { nullable: true })\n  cursor?: KChallengeWhereUniqueInput;\n}\n","import { Field, InputType, Int, ObjectType } from \"@nestjs/graphql\";\n\n@ObjectType()\nexport class ChallengeResultInfo {\n  @Field(() => Int, { nullable: true })\n  testcaseCount?: number;\n  @Field(() => Int, { nullable: true })\n  testcasePassCount?: number;\n  @Field(() => Int, { nullable: true })\n  score?: number;\n  @Field(() => Int, { nullable: true })\n  totalScore?: number;\n}\n\n@ObjectType()\nexport class ChallengeSubmitResult {\n  @Field(() => ChallengeResultInfo, { nullable: true })\n  info?: ChallengeResultInfo;\n  @Field(() => [ChallengeResult], { nullable: true })\n  result?: [ChallengeResult];\n  @Field(() => String, { nullable: true })\n  error?: string;\n}\n\n@ObjectType()\nexport class ChallengeResult {\n  @Field(() => Int, { nullable: true })\n  time?: number;\n  @Field(() => Int, { nullable: true })\n  memory?: number;\n  @Field(() => String, { nullable: true })\n  errorMessage?: string;\n  @Field(() => String, { nullable: true })\n  message?: string;\n  @Field(() => String, { nullable: true })\n  log?: string;\n  @Field(() => String, { nullable: true })\n  output?: string;\n  @Field(() => String, { nullable: true })\n  expectedOutput?: string;\n  @Field(() => Boolean, { nullable: true })\n  hidden?: boolean;\n  @Field(() => Boolean, { nullable: true })\n  result?: boolean;\n}\n","import { RUN_TYPE } from \"@koj/common/constants\";\nimport { Field, HideField, Int, registerEnumType } from \"@nestjs/graphql\";\nimport { InputType } from \"@nestjs/graphql\";\n\n@InputType()\nexport class ChallengeSubmitInput {\n  @Field(() => String)\n  content?: string;\n\n  @Field(() => String)\n  functionName?: string;\n\n  @Field(() => Int)\n  challengeId?: number;\n\n  @Field(() => String)\n  slug?: string;\n\n  @Field(() => String)\n  type?: string;\n\n  @Field(() => String)\n  languageId?: string;\n\n  @HideField()\n  domainId?: number;\n}\n\n// registerEnumType(RUN_TYPE, {\n//   name: \"RUN_TYPE\"\n// });\n","import { Field, HideField } from '@nestjs/graphql';\nimport { InputType } from '@nestjs/graphql';\nimport { Int } from '@nestjs/graphql';\n\n@InputType()\nexport class KChallengeWhereUniqueInput {\n  @Field(() => Int, { nullable: true })\n  id?: number;\n\n  @Field(() => String, { nullable: true })\n  slug?: string;\n\n  @HideField()\n  domainId?: number;\n}\n","export * from './challenge-find-many.args';\nexport * from './challenge-submit-result.model';\nexport * from './challenge-submit.input';\nexport * from './challenge-where-unique.input';\n","export * from \"./challenge\";\n","export * from './lib/local.guard';\nexport * from './lib/policy.guard';\nexport * from './lib/gql-auth.guard';\nexport * from './lib/refresh-token.guard';\nexport * from './lib/google.guard';\nexport * from './lib/github.guard';\n","import { AuthGuard } from \"@nestjs/passport\";\n\nexport class GithubGuard extends AuthGuard(\"github\") {}\n","import { Injectable } from \"@nestjs/common\";\nimport { AuthGuard } from \"@nestjs/passport\";\n\n@Injectable()\nexport class GoogleOauthGuard extends AuthGuard(\"google\") {}","import { AuthGuard } from '@nestjs/passport';\nimport { GqlExecutionContext } from '@nestjs/graphql';\nimport { Injectable, ExecutionContext } from '@nestjs/common';\n\n@Injectable()\nexport class GqlAuthGuard extends AuthGuard('jwt') {\n  getRequest(context: ExecutionContext) {\n    const ctx = GqlExecutionContext.create(context);\n    return ctx.getContext().req;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n","import * as casbin from \"casbin\";\nimport { Reflector } from \"@nestjs/core\";\nimport { PrismaService } from \"nestjs-prisma\";\nimport { GqlExecutionContext } from \"@nestjs/graphql\";\nimport { ForbiddenException, HttpStatus } from \"@nestjs/common\";\nimport {\n  Injectable,\n  CanActivate,\n  ExecutionContext,\n  Inject\n} from \"@nestjs/common\";\n\n// import { User } from '@koj/generated/user/user.model';\nimport { Permission } from \"@koj/common/interfaces\";\nimport { CasbinModuleOptions } from \"@koj/common/interfaces\";\nimport {\n  ADAPTER_ENFORCER,\n  ADAPTER_MODULE_OPTIONS,\n  PERMISSIONS_METADATA\n} from \"@koj/common/constants\";\nimport { ForbiddenError } from \"apollo-server-express\";\nimport { UserCustom as User } from \"@koj/common/interfaces\";\n\n@Injectable()\nexport class GqlPolicyGuard implements CanActivate {\n  constructor(\n    private readonly reflector: Reflector,\n    private readonly prisma: PrismaService,\n    @Inject(ADAPTER_ENFORCER) private enforcer: casbin.Enforcer,\n    @Inject(ADAPTER_MODULE_OPTIONS) private options: CasbinModuleOptions\n  ) {}\n\n  async canActivate(context: ExecutionContext): Promise<boolean> {\n    const gqlContext = GqlExecutionContext.create(context);\n\n    const permissions: Permission[] = this.reflector.get<Permission[]>(\n      PERMISSIONS_METADATA,\n      gqlContext.getHandler()\n    );\n\n    if (!permissions) {\n      return true;\n    }\n\n    const request = gqlContext.getContext().req;\n    const user = request.user;\n    const polices = [];\n\n    if (!user.role) {\n      throw new ForbiddenError(\"User no have role\");\n    }\n\n    const hasPermission = async (\n      user: User,\n      permission: Permission\n    ): Promise<boolean> => {\n      const { resource, action } = permission;\n\n      // console.log(await this.enforcer.getPolicy());\n      const [isAllow, policy] = await this.enforcer.enforceEx(\n        { role: user.role },\n        resource,\n        action,\n        user.domainId\n      );\n\n      if (!isAllow) {\n        throw new ForbiddenException({\n          message: `Don't have permission`,\n          statusCode: HttpStatus.FORBIDDEN\n        });\n      }\n\n      if (policy.length !== 0) {\n        polices.push(policy);\n        return true;\n      }\n\n      return false;\n    };\n\n    const result = await GqlPolicyGuard.asyncEvery<Permission>(\n      permissions,\n      async (permission) => hasPermission(user, permission)\n    );\n\n    if (result) {\n      const attachCtxWhere = {\n        createdById: user.userId,\n        domainId: user.domainId,\n        effectWith: polices[0].effectWith\n      };\n      const attachCtxData = {\n        createdById: user.userId,\n        domainId: user.domainId,\n        createdByUsername: user.username,\n        createdByName: `${user.firstname}:${user.lastname}`\n      };\n\n      Object.assign(request, {\n        context: { where: attachCtxWhere, data: attachCtxData, polices }\n      });\n    }\n\n    return result;\n  }\n\n  static async asyncSome<T>(\n    array: T[],\n    callback: (value: T, index: number, a: T[]) => Promise<boolean>\n  ): Promise<boolean> {\n    for (let i = 0; i < array.length; i++) {\n      const result = await callback(array[i], i, array);\n      if (result) {\n        return result;\n      }\n    }\n\n    return false;\n  }\n\n  static async asyncEvery<T>(\n    array: T[],\n    callback: (value: T, index: number, a: T[]) => Promise<boolean>\n  ): Promise<boolean> {\n    for (let i = 0; i < array.length; i++) {\n      const result = await callback(array[i], i, array);\n      if (!result) {\n        return result;\n      }\n    }\n\n    return true;\n  }\n}\n","import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtRefreshGuard extends AuthGuard('jwt-refresh-token') {}\n","export * from './lib/types';\nexport * from './lib/jwt.interface';\nexport * from './lib/user.interface';\nexport * from './lib/config.interface';\nexport * from './lib/permission.interface';\nexport * from './lib/auth-module-options.interface';\n","import {\n  ExecutionContext,\n  Provider,\n  DynamicModule,\n  ForwardReference,\n  Type,\n} from '@nestjs/common';\n\nexport interface CasbinModuleOptions<T = any> {\n  model?: string;\n  policy?: string | Promise<T>;\n  userFromContext: (context: ExecutionContext) => string;\n  enforcerProvider?: Provider<any>;\n  /**\n   * Optional list of imported modules that export the providers which are\n   * required in this module.\n   */\n  imports?: Array<Type<any> | DynamicModule | Promise<DynamicModule> | ForwardReference>;\n}\n","export interface Config {\n  app: NestConfig;\n  swagger: SwaggerConfig;\n  graphql: GraphqlConfig;\n  security: SecurityConfig;\n}\n\nexport interface NestConfig {\n  port: number;\n  cors: CorsConfig;\n  globalPrefix: string;\n}\n\nexport interface CorsConfig {\n  enabled: boolean;\n}\n\nexport interface SwaggerConfig {\n  enabled: boolean;\n  title: string;\n  description: string;\n  version: string;\n  path: string;\n}\n\nexport interface GraphqlConfig {\n  path: string;\n  playgroundEnabled: boolean;\n  debug: boolean;\n  schemaDestination: string;\n  sortSchema: boolean;\n}\n\nexport interface SecurityConfig {\n  expiresIn: string;\n  refreshIn: string;\n  bcryptSaltOrRound: string | number;\n}\n","import { encryptedData } from '@koj/common/utils';\n\nexport interface JwtDto {\n  userId: number;\n  domainId: number;\n  private: encryptedData;\n  iat: number;\n  exp: number;\n}\n","import { AuthActionVerb, AuthPossession, CustomAuthActionVerb } from './types';\nimport { ExecutionContext } from '@nestjs/common';\n\nexport interface Permission {\n  resource: string;\n  action: AuthActionVerb | CustomAuthActionVerb;\n  possession?: AuthPossession;\n  noUniqueInput?: boolean;\n  isOwn?: (ctx: ExecutionContext) => boolean;\n}\n","export enum AuthActionVerb {\n  CREATE = 'create',\n  UPDATE = 'update',\n  DELETE = 'delete',\n  READ = 'read',\n}\n\nexport type CustomAuthActionVerb = string;\n\nexport enum AuthPossession {\n  ANY = 'any',\n  OWN = 'own',\n  OWN_ANY = 'own|any',\n}\n\nexport enum AuthAction {\n  CREATE_ANY = 'create:any',\n  CREATE_OWN = 'create:own',\n\n  UPDATE_ANY = 'update:any',\n  UPDATE_OWN = 'update:own',\n\n  DELETE_ANY = 'delete:any',\n  DELETE_OWN = 'delete:own',\n\n  READ_ANY = 'read:any',\n  READ_OWN = 'read:own',\n}\n","import { User } from '@koj/generated/user/user.model';\nexport interface UserCustom extends User {\n  userId?: number;\n}\n","export * from './lib/jwt.strategy';\nexport * from './lib/jwt-refresh.strategy';\nexport * from './lib/google.strategy';\nexport * from './lib/github.strategy';\n\n","import { Injectable } from \"@nestjs/common\";\nimport { Strategy } from \"passport-github2\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\n\n@Injectable()\nexport class Githubstrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      clientID: configService.get<string>(\"GITHUB_CLIENT_ID\"),\n      clientSecret: configService.get<string>(\"GITHUB_CLIENT_SECRET\"),\n      scope: [\"user\"]\n    });\n  }\n\n  validate(_accessToken: string, _refreshToken: string, profile) {\n    return profile;\n  }\n}\n","import { Injectable } from \"@nestjs/common\";\nimport { ConfigService } from \"@nestjs/config\";\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy } from \"passport-google-oauth20\";\n\n@Injectable()\nexport class GoogleAuthStrategy extends PassportStrategy(Strategy) {\n  constructor(configService: ConfigService) {\n    super({\n      // Put config in `.env`\n      clientID: configService.get<string>(\"OAUTH_GOOGLE_ID\"),\n      clientSecret: configService.get<string>(\"OAUTH_GOOGLE_SECRET\"),\n      scope: [\"email\", \"profile\"]\n    });\n  }\n\n  async validate(accessToken: string, refreshToken: string, profile: any) {\n    const { id, name, emails } = profile;\n    console.log(\n      \"🚀 ~ file: google.strategy.ts ~ line 27 ~ GoogleAuthStrategy ~ classGoogleAuthStrategyextendsPassportStrategy ~ profile\",\n      profile\n    );\n\n    return {\n      provider: \"google\",\n      providerId: id,\n      name: name.givenName,\n      username: emails[0].value\n    };\n  }\n}\n","import { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\nimport { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\n\nimport { JwtDto } from '@koj/common/interfaces';\n\n@Injectable()\nexport class JwtRefreshTokenStrategy extends PassportStrategy(\n  Strategy,\n  'jwt-refresh-token',\n) {\n  constructor(readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          const signature = request?.cookies?.['r_sign'];\n          const header = request?.cookies?.['r_header'];\n          const payload = request?.headers?.['x-refresh-payload'];\n          if (!signature || !header || !payload) {\n            throw new UnauthorizedException({\n              message: 'Missing Refresh Token',\n              level: 'warn',\n            });\n          }\n\n          console.log('refresh Token', `${header}.${payload}.${signature}`);\n          return `${header}.${payload}.${signature}`;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_REFRESH_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtDto) {\n    console.log(\n      '🚀 ~ file: jwt-refresh.strategy.ts ~ line 38 ~ validate ~ payload',\n      payload,\n    );\n\n    return payload;\n  }\n}\n","import { Request } from 'express';\nimport { ConfigService } from '@nestjs/config';\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { UnauthorizedException, Injectable } from '@nestjs/common';\n\nimport { decrypt } from '@koj/common/utils';\n\nimport { JwtDto } from '@koj/common/interfaces';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor(readonly configService: ConfigService) {\n    super({\n      jwtFromRequest: ExtractJwt.fromExtractors([\n        (request: Request) => {\n          console.log(\n            '🚀 ~ file: jwt.strategy.ts ~ line 17 ~ JwtStrategy ~ constructor ~ request',\n            request.cookies,\n          );\n          const signature = request?.cookies?.['a_sign'];\n          const header = request?.cookies?.['a_header'];\n          const payload = request?.headers?.['x-access-payload'];\n          if (!signature || !header || !payload) {\n            // throw new UnauthorizedException({\n            //   message: 'Missing Auth Token',\n            //   level: 'warn',\n            // });\n          }\n\n          console.log(`${header}.${payload}.${signature}`);\n          return `${header}.${payload}.${signature}`;\n        },\n      ]),\n      ignoreExpiration: false,\n      secretOrKey: configService.get('JWT_ACCESS_SECRET'),\n    });\n  }\n\n  async validate(payload: JwtDto) {\n    const privateData = JSON.parse(decrypt(payload.private));\n    return { ...payload, ...privateData };\n  }\n}\n","export * from './lib/fs.util';\nexport * from './lib/common.util';\nexport * from './lib/crypto.util';\nexport * from './lib/string.util';\nexport * from './lib/policy.util';\nexport * from './lib/database-query.util';\n","export function template(strings: ReadonlyArray<string>, ...keys) {\n  return function (...values) {\n    const dict: unknown = values[values.length - 1] || {};\n    const result = [strings[0]];\n    keys.forEach(function (key, i) {\n      const value = Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 1]);\n    });\n    return result.join(\"\");\n  };\n}\n\nexport async function fulfillWithTimeLimit(timeLimit, task, failureValue) {\n  let timeout;\n  const timeoutPromise = new Promise((resolve, reject) => {\n    timeout = setTimeout(() => {\n      resolve(failureValue);\n    }, timeLimit);\n  });\n  const response = await Promise.race([task, timeoutPromise]);\n  if (timeout) {\n    //the code works without this but let's be safe and clean up the timeout\n    clearTimeout(timeout);\n  }\n  return response;\n}\n\nexport function decodeBase64(data: string): string {\n  return Buffer.from(data, \"base64\").toString(\"ascii\");\n}\n\nexport function encodeBase64(data: string): string {\n  return Buffer.from(data).toString(\"base64\");\n}\n","import * as crypto from 'crypto';\n\n/**\n * initialization vector must 16 byte for 128, 192, 256\n * key must 32 byte\n */\n\nexport interface encryptedData {\n  iv: string;\n  data: string;\n}\n\nconst algorithm = 'aes-256-cbc';\nconst initVector = crypto.randomBytes(16);\nconst defaultSecret = process.env.CRYPTO_AUTH_SECRET || 'defaultSecret!';\nconst defaultKey = crypto.scryptSync(defaultSecret, 'salt', 32);\n\nexport function encrypt(data: string, securitykey: Buffer = defaultKey) {\n  const cipher = crypto.createCipheriv(algorithm, securitykey, initVector);\n  let encryptedData = cipher.update(data, 'utf-8', 'hex');\n  encryptedData += cipher.final('hex');\n  return { iv: initVector.toString('hex'), data: encryptedData };\n  [];\n}\n\nexport function decrypt(encryptedData: encryptedData, securitykey: Buffer = defaultKey) {\n  const { iv, data } = encryptedData;\n  const initVector = Buffer.from(iv, 'hex');\n  const decipher = crypto.createDecipheriv(algorithm, securitykey, initVector);\n  let decryptedData = decipher.update(data, 'hex', 'utf-8');\n  decryptedData += decipher.final('utf-8');\n  return decryptedData;\n}\n","import { camelToSnakeCase } from './string.util';\n\nexport function transformObjectToQuery(object, prefix) {\n  return Object.keys(object)\n    .map((obj) => {\n      console.log('🚀 ~ file: database-query.ts ~ line 6 ~ .map ~ obj', obj);\n      const column = camelToSnakeCase(obj);\n      return prefix ? `${prefix}.\"${column}\"` : column;\n    })\n    .join(', ');\n}\n","import fs from 'fs/promises';\nimport PATH from 'path';\n\nconst getDirName = PATH.dirname;\n\nexport async function cleanDirectory(directory) {\n  return fs\n    .readdir(directory)\n    .then((files) => Promise.all(files.map((file) => fs.unlink(`${directory}/${file}`))));\n}\n\nexport async function writeFile(path, contents) {\n  await fs.mkdir(getDirName(path), { recursive: true });\n  await fs.writeFile(path, contents);\n}\n","export function transformPolicyParam(policyInput) {\n  return;\n}\n","export function getValueAfterLastChar(string: string, char: string) {\n  return string.substring(string.lastIndexOf(char) + 1);\n}\n\nexport function camelToSnakeCase(str) {\n  return str.replace(/[A-Z]/g, (letter) => `_${letter.toLowerCase()}`);\n}\n","import {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed, TraceState } from '@opentelemetry/core';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`,\n);\n\n/**\n *  Most of the part is same as W3CTraceContextPropagator\n *  Just leave the original code here for debug purpose\n */\nexport class RpcTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    // const spanContext = trace.getSpanContext(context);\n    const spanContext =\n      trace.getSpan(context)?.spanContext() || trace.getSpanContext(context);\n    if (!spanContext || isTracingSuppressed(context) || !isSpanContextValid(spanContext))\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n    spanContext.isRemote = true;\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined,\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n    // return context;\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n","import { context, Span as ApiSpan, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { StoreContext } from '../trace/store-context';\nimport { copyMetadataFromFunctionToFunction } from '../utils';\n\nconst recordException = (span: ApiSpan, error: any) => {\n  span.recordException(error);\n  span.setStatus({ code: SpanStatusCode.ERROR, message: error.message });\n};\n\nexport function Span(name?: string, attributes: any = {}) {\n  return (target: any, propertyKey: string, propertyDescriptor: PropertyDescriptor) => {\n    const originalFunction = propertyDescriptor.value;\n    const wrappedFunction = function PropertyDescriptor(...args: any[]) {\n      console.log(\n        '🚀 ~ file: span.decorator.ts ~ line 14 ~ wrappedFunction ~ args',\n        args,\n      );\n      const tracer = trace.getTracer('default');\n      //   const currentSpan =\n      //   trace.getSpan(context.active()) ?? tracer.startSpan('default');\n\n      const parentCtx = StoreContext?.currentContext?.context;\n\n      const spanName = name || `${target.constructor.name}.${propertyKey}`;\n\n      return tracer.startActiveSpan(spanName, {}, parentCtx, (span) => {\n        // const span = tracer.startSpan(spanName, undefined, parentCtx);\n        span.setAttributes(attributes);\n        if (originalFunction.constructor.name === 'AsyncFunction') {\n          return originalFunction\n            .apply(this, args)\n            .catch((error) => {\n              recordException(span, error);\n              // Throw error to propagate it further\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        }\n\n        try {\n          return originalFunction.apply(this, args);\n        } catch (error) {\n          recordException(span, error);\n          // Throw error to propagate it further\n          throw error;\n        } finally {\n          span.end();\n        }\n      });\n    };\n    // eslint-disable-next-line no-param-reassign\n    propertyDescriptor.value = wrappedFunction;\n\n    copyMetadataFromFunctionToFunction(originalFunction, wrappedFunction);\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  COMPONENT = 'graphql',\n  SOURCE = 'graphql.source',\n  FIELD_NAME = 'graphql.field.name',\n  FIELD_PATH = 'graphql.field.path',\n  FIELD_TYPE = 'graphql.field.type',\n  OPERATION_TYPE = 'graphql.operation.type',\n  OPERATION_NAME = 'graphql.operation.name',\n  VARIABLES = 'graphql.variables.',\n  ERROR_VALIDATION_NAME = 'graphql.validation.error',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AllowedOperationTypes {\n  QUERY = 'query',\n  MUTATION = 'mutation',\n  SUBSCRIPTION = 'subscription',\n}\n\nexport enum TokenKind {\n  SOF = '<SOF>',\n  EOF = '<EOF>',\n  BANG = '!',\n  DOLLAR = '$',\n  AMP = '&',\n  PAREN_L = '(',\n  PAREN_R = ')',\n  SPREAD = '...',\n  COLON = ':',\n  EQUALS = '=',\n  AT = '@',\n  BRACKET_L = '[',\n  BRACKET_R = ']',\n  BRACE_L = '{',\n  PIPE = '|',\n  BRACE_R = '}',\n  NAME = 'Name',\n  INT = 'Int',\n  FLOAT = 'Float',\n  STRING = 'String',\n  BLOCK_STRING = 'BlockString',\n  COMMENT = 'Comment',\n}\n\nexport enum SpanNames {\n  EXECUTE = 'graphql.execute',\n  PARSE = 'graphql.parse',\n  RESOLVE = 'graphql.resolve',\n  VALIDATE = 'graphql.validate',\n  SCHEMA_VALIDATE = 'graphql.validateSchema',\n  SCHEMA_PARSE = 'graphql.parseSchema',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\n\nexport const OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\n  'opentelemetry.graphql_data'\n);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport type * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport { DocumentNode } from 'graphql/language/ast';\nimport { GraphQLFieldResolver, GraphQLTypeResolver } from 'graphql/type/definition';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\n\nexport const OPERATION_NOT_SUPPORTED = 'Operation$operationName$not' + ' supported';\n\nexport interface GraphQLInstrumentationExecutionResponseHook {\n  (span: api.Span, data: graphqlTypes.ExecutionResult): void;\n}\n\nexport interface GraphQLInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * When set to true it will not remove attributes values from schema source.\n   * By default all values that can be sensitive are removed and replaced\n   * with \"*\"\n   *\n   * @default false\n   */\n  allowValues?: boolean;\n  /**\n   * The maximum depth of fields/resolvers to instrument.\n   * When set to 0 it will not instrument fields and resolvers\n   *\n   * @default undefined\n   */\n  depth?: number;\n  /**\n   * Whether to merge list items into a single element.\n   *\n   * @example `users.*.name` instead of `users.0.name`, `users.1.name`\n   *\n   * @default false\n   */\n  mergeItems?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from \"execute\" GraphQL action.\n   *\n   * @default undefined\n   */\n  responseHook?: GraphQLInstrumentationExecutionResponseHook;\n}\n\n/**\n * Merged and parsed config of default instrumentation config and GraphQL\n */\nexport type GraphQLInstrumentationParsedConfig = Required<GraphQLInstrumentationConfig> &\n  InstrumentationConfig;\n\nexport type executeFunctionWithObj = (\n  args: graphqlTypes.ExecutionArgs,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport type executeArgumentsArray = [\n  graphqlTypes.GraphQLSchema,\n  graphqlTypes.DocumentNode,\n  any,\n  any,\n  Maybe<{ [key: string]: any }>,\n  Maybe<string>,\n  Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n];\n\nexport type executeFunctionWithArgs = (\n  schema: graphqlTypes.GraphQLSchema,\n  document: graphqlTypes.DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: Maybe<{ [key: string]: any }>,\n  operationName?: Maybe<string>,\n  fieldResolver?: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  typeResolver?: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport interface OtelExecutionArgs {\n  schema: graphqlTypes.GraphQLSchema;\n  document: DocumentNode & ObjectWithGraphQLData;\n  rootValue?: any;\n  contextValue?: any & ObjectWithGraphQLData;\n  variableValues?: Maybe<{ [key: string]: any }>;\n  operationName?: Maybe<string>;\n  fieldResolver?: Maybe<GraphQLFieldResolver<any, any> & OtelPatched>;\n  typeResolver?: Maybe<GraphQLTypeResolver<any, any>>;\n}\n\nexport type executeType = executeFunctionWithObj | executeFunctionWithArgs;\n\nexport type parseType = (\n  source: string | graphqlTypes.Source,\n  options?: graphqlTypes.ParseOptions,\n) => graphqlTypes.DocumentNode;\n\nexport type validateType = (\n  schema: graphqlTypes.GraphQLSchema,\n  documentAST: graphqlTypes.DocumentNode,\n  rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n  typeInfo?: graphqlTypes.TypeInfo,\n  options?: { maxErrors?: number },\n) => ReadonlyArray<graphqlTypes.GraphQLError>;\n\nexport interface GraphQLField {\n  parent: api.Span;\n  span: api.Span;\n  error: Error | null;\n}\n\ninterface OtelGraphQLData {\n  source?: any;\n  span: api.Span;\n  fields: { [key: string]: GraphQLField };\n}\n\nexport interface ObjectWithGraphQLData {\n  [OTEL_GRAPHQL_DATA_SYMBOL]?: OtelGraphQLData;\n}\n\nexport interface OtelPatched {\n  [OTEL_PATCHED_SYMBOL]?: boolean;\n}\n\nexport interface GraphQLPath {\n  prev: GraphQLPath | undefined;\n  key: string | number;\n  /**\n   * optional as it didn't exist yet in ver 14\n   */\n  typename?: string | undefined;\n}\n\n/**\n * Moving this type from ver 15 of graphql as it is nto available in ver. 14s\n * this way it can compile against ver 14.\n */\nexport type Maybe<T> = null | undefined | T;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable prefer-rest-params */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace } from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport { SpanNames } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL } from './enums/symbols';\n\nimport {\n  executeFunctionWithObj,\n  executeArgumentsArray,\n  executeType,\n  parseType,\n  validateType,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  OtelExecutionArgs,\n  ObjectWithGraphQLData,\n  OPERATION_NOT_SUPPORTED,\n  Maybe,\n} from './enums/types';\nimport {\n  addInputVariableAttributes,\n  addSpanSource,\n  endSpan,\n  getOperation,\n  wrapFieldResolver,\n  wrapFields,\n} from './utils';\n\nimport { VERSION } from './version';\nimport * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\n\nconst DEFAULT_CONFIG: GraphQLInstrumentationConfig = {\n  mergeItems: false,\n  depth: -1,\n  allowValues: false,\n};\n\nconst supportedVersions = ['>=14'];\n\nexport class GraphQLInstrumentation extends InstrumentationBase {\n  constructor(config: GraphQLInstrumentationConfig & InstrumentationConfig = {}) {\n    super(\n      '@opentelemetry/instrumentation',\n      VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config),\n    );\n  }\n\n  private _getConfig(): GraphQLInstrumentationParsedConfig {\n    return this._config as GraphQLInstrumentationParsedConfig;\n  }\n\n  override setConfig(config: GraphQLInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    console.log('init grapqhl instrument');\n    const module = new InstrumentationNodeModuleDefinition<typeof graphqlTypes>(\n      'graphql',\n      supportedVersions,\n    );\n    module.files.push(this._addPatchingExecute());\n    module.files.push(this._addPatchingParser());\n    module.files.push(this._addPatchingValidate());\n\n    return module;\n  }\n\n  private _addPatchingExecute(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    console.log('add patching grapqhl');\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/execution/execute.js',\n      supportedVersions,\n      // cannot make it work with appropriate type as execute function has 2\n      //types and/cannot import function but only types\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'execute');\n        }\n        this._wrap(\n          moduleExports,\n          'execute',\n          this._patchExecute(moduleExports.defaultFieldResolver),\n        );\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'execute');\n        }\n      },\n    );\n  }\n\n  private _addPatchingParser(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/language/parser.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'parse');\n        }\n        this._wrap(moduleExports, 'parse', this._patchParse());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'parse');\n        }\n      },\n    );\n  }\n\n  private _addPatchingValidate(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/validation/validate.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'validate');\n        }\n        this._wrap(moduleExports, 'validate', this._patchValidate());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'validate');\n        }\n      },\n    );\n  }\n\n  private _patchExecute(\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>,\n  ): (original: executeType) => executeType {\n    console.log('execute grapqhl');\n    const instrumentation = this;\n    return function execute(original) {\n      return function patchExecute(\n        this: executeType,\n      ): PromiseOrValue<graphqlTypes.ExecutionResult> {\n        let processedArgs: OtelExecutionArgs;\n\n        // case when apollo server is used for example\n        if (arguments.length >= 2) {\n          const args = arguments as unknown as executeArgumentsArray;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5],\n            args[6] || defaultFieldResolved,\n            args[7],\n          );\n        } else {\n          const args = arguments[0] as graphqlTypes.ExecutionArgs;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args.schema,\n            args.document,\n            args.rootValue,\n            args.contextValue,\n            args.variableValues,\n            args.operationName,\n            args.fieldResolver || defaultFieldResolved,\n            args.typeResolver,\n          );\n        }\n\n        const operation = getOperation(\n          processedArgs.document,\n          processedArgs.operationName,\n        );\n\n        const httpSpan = trace.getSpan(context.active());\n        if (httpSpan) {\n          const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n          httpSpan.setAttributes({\n            type: 'graphql',\n          });\n          httpSpan.updateName(\n            `gql-${\n              operationDefinition.operation\n            }-${operationDefinition.name.value.toLowerCase()}`,\n          );\n        }\n        const span = instrumentation._createExecuteSpan(operation, processedArgs);\n\n        processedArgs.contextValue[OTEL_GRAPHQL_DATA_SYMBOL] = {\n          source: processedArgs.document\n            ? processedArgs.document ||\n              (processedArgs.document as ObjectWithGraphQLData)[OTEL_GRAPHQL_DATA_SYMBOL]\n            : undefined,\n          span,\n          fields: {},\n        };\n\n        return context.with(context.active(), () => {\n          return safeExecuteInTheMiddle<PromiseOrValue<graphqlTypes.ExecutionResult>>(\n            () => {\n              return (original as executeFunctionWithObj).apply(this, [processedArgs]);\n            },\n            (err, result) => {\n              instrumentation._handleExecutionResult(span, err, result);\n            },\n          );\n        });\n      };\n    };\n  }\n\n  private _handleExecutionResult(\n    span: api.Span,\n    err?: Error,\n    result?: PromiseOrValue<graphqlTypes.ExecutionResult>,\n  ) {\n    const config = this._getConfig();\n    if (result === undefined || err) {\n      endSpan(span, err);\n      return;\n    }\n\n    if (result.constructor.name === 'Promise') {\n      (result as Promise<graphqlTypes.ExecutionResult>).then((resultData) => {\n        if (typeof config.responseHook !== 'function') {\n          endSpan(span);\n          return;\n        }\n        this._executeResponseHook(span, resultData);\n      });\n    } else {\n      if (typeof config.responseHook !== 'function') {\n        endSpan(span);\n        return;\n      }\n      this._executeResponseHook(span, result as graphqlTypes.ExecutionResult);\n    }\n  }\n\n  private _executeResponseHook(span: api.Span, result: graphqlTypes.ExecutionResult) {\n    const config = this._getConfig();\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook(span, result);\n      },\n      (err) => {\n        if (err) {\n          api.diag.error('Error running response hook', err);\n        }\n\n        endSpan(span, undefined);\n      },\n      true,\n    );\n  }\n\n  private _patchParse(): (original: parseType) => parseType {\n    const instrumentation = this;\n    return function parse(original) {\n      return function patchParse(\n        this: parseType,\n        source: string | graphqlTypes.Source,\n        options?: graphqlTypes.ParseOptions,\n      ): graphqlTypes.DocumentNode {\n        return instrumentation._parse(this, original, source, options);\n      };\n    };\n  }\n\n  private _patchValidate(): (original: validateType) => validateType {\n    const instrumentation = this;\n    return function validate(original: validateType) {\n      return function patchValidate(\n        this: validateType,\n        schema: graphqlTypes.GraphQLSchema,\n        documentAST: graphqlTypes.DocumentNode,\n        rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n        typeInfo?: graphqlTypes.TypeInfo,\n        options?: { maxErrors?: number },\n      ): ReadonlyArray<graphqlTypes.GraphQLError> {\n        return instrumentation._validate(\n          this,\n          original,\n          schema,\n          documentAST,\n          rules,\n          typeInfo,\n          options,\n        );\n      };\n    };\n  }\n\n  private _parse(\n    obj: parseType,\n    original: parseType,\n    source: string | graphqlTypes.Source,\n    options?: graphqlTypes.ParseOptions,\n  ): graphqlTypes.DocumentNode {\n    const config = this._getConfig();\n    const span = this.tracer.startSpan(SpanNames.PARSE);\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<graphqlTypes.DocumentNode & ObjectWithGraphQLData>(\n        () => {\n          return original.call(obj, source, options);\n        },\n        (err, result) => {\n          if (result) {\n            const operation = getOperation(result);\n            if (!operation) {\n              span.updateName(SpanNames.SCHEMA_PARSE);\n            } else if (result.loc) {\n              addSpanSource(span, result.loc, config.allowValues);\n            }\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _validate(\n    obj: validateType,\n    original: validateType,\n    schema: graphqlTypes.GraphQLSchema,\n    documentAST: graphqlTypes.DocumentNode,\n    rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n    typeInfo?: graphqlTypes.TypeInfo,\n    options?: { maxErrors?: number },\n  ): ReadonlyArray<graphqlTypes.GraphQLError> {\n    const span = this.tracer.startSpan(SpanNames.VALIDATE, {});\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<ReadonlyArray<graphqlTypes.GraphQLError>>(\n        () => {\n          return original.call(obj, schema, documentAST, rules, typeInfo, options);\n        },\n        (err, errors) => {\n          if (!documentAST.loc) {\n            span.updateName(SpanNames.SCHEMA_VALIDATE);\n          }\n          if (errors && errors.length) {\n            span.recordException({\n              name: AttributeNames.ERROR_VALIDATION_NAME,\n              message: JSON.stringify(errors),\n            });\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _createExecuteSpan(\n    operation: graphqlTypes.DefinitionNode | undefined,\n    processedArgs: graphqlTypes.ExecutionArgs,\n  ): api.Span {\n    const config = this._getConfig();\n\n    const span = this.tracer.startSpan(SpanNames.EXECUTE, {\n      // attributes: {\n      //   component: 'graphql',\n      // },\n    });\n    if (operation) {\n      const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n      span.setAttribute(AttributeNames.OPERATION_TYPE, operationDefinition.operation);\n\n      if (operationDefinition.name) {\n        span.setAttribute(AttributeNames.OPERATION_NAME, operationDefinition.name.value);\n      }\n    } else {\n      let operationName = ' ';\n      if (processedArgs.operationName) {\n        operationName = ` \"${processedArgs.operationName}\" `;\n      }\n      operationName = OPERATION_NOT_SUPPORTED.replace('$operationName$', operationName);\n      span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n    }\n\n    if (processedArgs.document?.loc) {\n      addSpanSource(span, processedArgs.document.loc, config.allowValues);\n    }\n\n    if (processedArgs.variableValues && config.allowValues) {\n      addInputVariableAttributes(span, processedArgs.variableValues);\n    }\n\n    return span;\n  }\n\n  private _wrapExecuteArgs(\n    schema: graphqlTypes.GraphQLSchema,\n    document: graphqlTypes.DocumentNode,\n    rootValue: any,\n    contextValue: any,\n    variableValues: Maybe<{ [key: string]: any }>,\n    operationName: Maybe<string>,\n    fieldResolver: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n    typeResolver: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n  ): OtelExecutionArgs {\n    if (!contextValue) {\n      contextValue = {};\n    }\n    if (contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return {\n        schema,\n        document,\n        rootValue,\n        contextValue,\n        variableValues,\n        operationName,\n        fieldResolver,\n        typeResolver,\n      };\n    }\n    fieldResolver = wrapFieldResolver(\n      this.tracer,\n      this._getConfig.bind(this),\n      fieldResolver,\n    );\n\n    if (schema) {\n      wrapFields(schema.getQueryType(), this.tracer, this._getConfig.bind(this));\n      wrapFields(schema.getMutationType(), this.tracer, this._getConfig.bind(this));\n    }\n\n    return {\n      schema,\n      document,\n      rootValue,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n      typeResolver,\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as graphqlTypes from 'graphql';\nimport * as api from '@opentelemetry/api';\nimport { AllowedOperationTypes, SpanNames, TokenKind } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './enums/symbols';\nimport {\n  GraphQLField,\n  GraphQLPath,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  ObjectWithGraphQLData,\n  OtelPatched,\n  Maybe,\n} from './enums/types';\n\nconst OPERATION_VALUES = Object.values(AllowedOperationTypes);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span: api.Span, key: string, variable: any) {\n  if (Array.isArray(variable)) {\n    variable.forEach((value, idx) => {\n      addInputVariableAttribute(span, `${key}.${idx}`, value);\n    });\n  } else if (variable instanceof Object) {\n    Object.entries(variable).forEach(([nestedKey, value]) => {\n      addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n    });\n  } else {\n    span.setAttribute(`${AttributeNames.VARIABLES}${String(key)}`, variable);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function addInputVariableAttributes(\n  span: api.Span,\n  variableValues: { [key: string]: any },\n) {\n  Object.entries(variableValues).forEach(([key, value]) => {\n    addInputVariableAttribute(span, key, value);\n  });\n}\n\nexport function addSpanSource(\n  span: api.Span,\n  loc?: graphqlTypes.Location,\n  allowValues?: boolean,\n  start?: number,\n  end?: number,\n): void {\n  const source = getSourceFromLocation(loc, allowValues, start, end);\n  span.setAttribute(AttributeNames.SOURCE, source);\n}\n\nfunction createFieldIfNotExists(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n): {\n  field: any;\n  spanAdded: boolean;\n} {\n  let field = getField(contextValue, path);\n\n  let spanAdded = false;\n\n  if (!field) {\n    spanAdded = true;\n    const parent = getParentField(contextValue, path);\n\n    field = {\n      parent,\n      span: createResolverSpan(tracer, getConfig, contextValue, info, path, parent.span),\n      error: null,\n    };\n\n    addField(contextValue, path, field);\n  }\n\n  return { spanAdded, field };\n}\n\nfunction createResolverSpan(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n  parentSpan?: api.Span,\n): api.Span {\n  const attributes: api.SpanAttributes = {\n    [AttributeNames.FIELD_NAME]: info.fieldName,\n    [AttributeNames.FIELD_PATH]: path.join('.'),\n    [AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n  };\n\n  const span = tracer.startSpan(\n    SpanNames.RESOLVE,\n    {\n      attributes,\n    },\n    parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined,\n  );\n\n  const document = contextValue[OTEL_GRAPHQL_DATA_SYMBOL].source;\n  const fieldNode = info.fieldNodes.find((fieldNode) => fieldNode.kind === 'Field');\n\n  if (fieldNode) {\n    addSpanSource(\n      span,\n      document.loc,\n      getConfig().allowValues,\n      fieldNode.loc?.start,\n      fieldNode.loc?.end,\n    );\n  }\n\n  return span;\n}\n\nexport function endSpan(span: api.Span, error?: Error): void {\n  if (error) {\n    span.recordException(error);\n  }\n  span.end();\n}\n\nexport function getOperation(\n  document: graphqlTypes.DocumentNode,\n  operationName?: Maybe<string>,\n): graphqlTypes.DefinitionNode | undefined {\n  if (!document || !Array.isArray(document.definitions)) {\n    return undefined;\n  }\n\n  if (operationName) {\n    return document.definitions\n      .filter(\n        (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n      )\n      .find((definition) => operationName === (definition as any)?.name?.value);\n  } else {\n    return document.definitions.find(\n      (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n    );\n  }\n}\n\nfunction addField(contextValue: any, path: string[], field: GraphQLField) {\n  return (contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] = field);\n}\n\nfunction getField(contextValue: any, path: string[]) {\n  return contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\n\nfunction getParentField(contextValue: any, path: string[]) {\n  for (let i = path.length - 1; i > 0; i--) {\n    const field = getField(contextValue, path.slice(0, i));\n\n    if (field) {\n      return field;\n    }\n  }\n\n  return {\n    span: contextValue[OTEL_GRAPHQL_DATA_SYMBOL].span,\n  };\n}\n\nfunction pathToArray(mergeItems: boolean, path: GraphQLPath): string[] {\n  const flattened: string[] = [];\n  let curr: GraphQLPath | undefined = path;\n  while (curr) {\n    let key = curr.key;\n\n    if (mergeItems && typeof key === 'number') {\n      key = '*';\n    }\n    flattened.push(String(key));\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\nfunction repeatBreak(i: number): string {\n  return repeatChar('\\n', i);\n}\n\nfunction repeatSpace(i: number): string {\n  return repeatChar(' ', i);\n}\n\nfunction repeatChar(char: string, to: number): string {\n  let text = '';\n  for (let i = 0; i < to; i++) {\n    text += char;\n  }\n  return text;\n}\n\nconst KindsToBeRemoved: string[] = [\n  TokenKind.FLOAT,\n  TokenKind.STRING,\n  TokenKind.INT,\n  TokenKind.BLOCK_STRING,\n];\n\nexport function getSourceFromLocation(\n  loc?: graphqlTypes.Location,\n  allowValues = false,\n  inputStart?: number,\n  inputEnd?: number,\n): string {\n  let source = '';\n\n  if (loc?.startToken) {\n    const start = typeof inputStart === 'number' ? inputStart : loc.start;\n    const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n\n    let next: graphqlTypes.Token | null = loc.startToken.next;\n    let previousLine: number | undefined = 1;\n    while (next) {\n      if (next.start < start) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      if (next.end > end) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      let value = next.value || next.kind;\n      let space = '';\n      if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n        // value = repeatChar('*', value.length);\n        value = '*';\n      }\n      if (next.kind === TokenKind.STRING) {\n        value = `\"${value}\"`;\n      }\n      if (next.kind === TokenKind.EOF) {\n        value = '';\n      }\n      if (next.line > previousLine!) {\n        source += repeatBreak(next.line - previousLine!);\n        previousLine = next.line;\n        space = repeatSpace(next.column - 1);\n      } else {\n        if (next.line === next.prev?.line) {\n          space = repeatSpace(next.start - (next.prev?.end || 0));\n        }\n      }\n      source += space + value;\n      if (next) {\n        next = next.next!;\n      }\n    }\n  }\n\n  return source;\n}\n\nexport function wrapFields(\n  type: Maybe<graphqlTypes.GraphQLObjectType & OtelPatched>,\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n): void {\n  if (!type || typeof type.getFields !== 'function' || type[OTEL_PATCHED_SYMBOL]) {\n    return;\n  }\n  const fields = type.getFields();\n\n  type[OTEL_PATCHED_SYMBOL] = true;\n\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n\n    if (!field) {\n      return;\n    }\n\n    if (field.resolve) {\n      field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n    }\n\n    if (field.type) {\n      let unwrappedType: any = field.type;\n\n      while (unwrappedType.ofType) {\n        unwrappedType = unwrappedType.ofType;\n      }\n      wrapFields(unwrappedType, tracer, getConfig);\n    }\n  });\n}\n\nexport function wrapFieldResolver<TSource = any, TContext = any, TArgs = any>(\n  tracer: api.Tracer,\n  getConfig: () => Required<GraphQLInstrumentationConfig>,\n  fieldResolver: Maybe<\n    graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched\n  >,\n): graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched {\n  if (\n    (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] ||\n    typeof fieldResolver !== 'function'\n  ) {\n    return fieldResolver!;\n  }\n\n  function wrappedFieldResolver(\n    this: graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>,\n    source: TSource,\n    args: TArgs,\n    contextValue: TContext & ObjectWithGraphQLData,\n    info: graphqlTypes.GraphQLResolveInfo,\n  ) {\n    if (!fieldResolver) {\n      return undefined;\n    }\n    const config = getConfig();\n\n    if (!contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return fieldResolver.call(this, source, args, contextValue, info);\n    }\n    const path = pathToArray(config.mergeItems, info && info.path);\n    const depth = path.filter((item: any) => typeof item === 'string').length;\n\n    let field: any;\n    let shouldEndSpan = false;\n    if (config.depth >= 0 && config.depth < depth) {\n      field = getParentField(contextValue, path);\n    } else {\n      const newField = createFieldIfNotExists(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path,\n      );\n      field = newField.field;\n      shouldEndSpan = newField.spanAdded;\n    }\n\n    return api.context.with(api.trace.setSpan(api.context.active(), field.span), () => {\n      return safeExecuteInTheMiddleAsync<\n        | Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>\n        | Promise<Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>>\n      >(\n        () => {\n          return fieldResolver.call(this, source, args, contextValue, info);\n        },\n        (err) => {\n          if (shouldEndSpan) {\n            endSpan(field.span, err);\n          }\n        },\n      );\n    });\n  }\n\n  (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] = true;\n\n  return wrappedFieldResolver;\n}\n\n/**\n * Async version of safeExecuteInTheMiddle from instrumentation package\n * can be removed once this will be added to instrumentation package\n * @param execute\n * @param onFinish\n * @param preventThrowingError\n */\nasync function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean,\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n","export const VERSION = '2.2.2';\n","export * from './graphql/instrumentation';\nexport * from './nestjs-core/instrumentation';\nexport * from './RpcContextPropagator';\nexport * from './trace/trace-client.proxy';\nexport * from './trace/trace.interceptor';\nexport * from './mongoose/src';\nexport * from './trace/store-context';\nexport * from './decorator/span.decorator';\nexport * from './trace/query-to-path';\n","export * from './mongoose';\nexport * from './types';\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { context, Span, trace, diag } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type mongoose from 'mongoose';\nimport { MongooseInstrumentationConfig, SerializerPayload } from './types';\nimport { startSpan, handleCallbackResponse, handlePromiseResponse } from './utils';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\nconst contextCaptureFunctions = [\n  'remove',\n  'deleteOne',\n  'deleteMany',\n  'find',\n  'findOne',\n  'estimatedDocumentCount',\n  'countDocuments',\n  'count',\n  'distinct',\n  'where',\n  '$where',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndReplace',\n  'findOneAndRemove',\n];\n\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexport const _STORED_PARENT_SPAN: unique symbol = Symbol('stored-parent-span');\n\nexport class MongooseInstrumentation extends InstrumentationBase<typeof mongoose> {\n  static readonly component = 'mongoose';\n  protected override _config: MongooseInstrumentationConfig;\n  private moduleVersion: string;\n\n  constructor(config: MongooseInstrumentationConfig = {}) {\n    super('opentelemetry-instrumentation-mongoose', VERSION, Object.assign({}, config));\n\n    // According to specification, statement is not set by default on mongodb spans.\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  override setConfig(config: MongooseInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  protected init(): InstrumentationModuleDefinition<typeof mongoose> {\n    const module = new InstrumentationNodeModuleDefinition<typeof mongoose>(\n      MongooseInstrumentation.component,\n      ['*'],\n      this.patch.bind(this),\n      this.unpatch.bind(this),\n    );\n    return module;\n  }\n\n  protected patch(moduleExports: typeof mongoose, moduleVersion: string) {\n    diag.debug('mongoose instrumentation: patching');\n    this.moduleVersion = moduleVersion;\n\n    this._wrap(moduleExports.Model.prototype, 'save', this.patchOnModelMethods('save'));\n    this._wrap(\n      moduleExports.Model.prototype,\n      'remove',\n      this.patchOnModelMethods('remove'),\n    );\n    this._wrap(moduleExports.Query.prototype, 'exec', this.patchQueryExec());\n    this._wrap(moduleExports.Aggregate.prototype, 'exec', this.patchAggregateExec());\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._wrap(\n        moduleExports.Query.prototype,\n        funcName as any,\n        this.patchAndCaptureSpanContext(funcName),\n      );\n    });\n    this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n\n    return moduleExports;\n  }\n\n  protected unpatch(moduleExports: typeof mongoose): void {\n    diag.debug('mongoose instrumentation: unpatch mongoose');\n    this._unwrap(moduleExports.Model.prototype, 'save');\n    this._unwrap(moduleExports.Model.prototype, 'remove');\n    this._unwrap(moduleExports.Query.prototype, 'exec');\n    this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._unwrap(moduleExports.Query.prototype, funcName as any);\n    });\n    this._unwrap(moduleExports.Model, 'aggregate');\n  }\n\n  private patchAggregateExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Aggregate exec prototype');\n    return (originalAggregate: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalAggregate.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            'aggregate',\n            {\n              options: this.options,\n              aggregatePipeline: this._pipeline,\n            },\n          ),\n        };\n\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this._model?.modelName,\n          operation: 'aggregate',\n          attributes,\n          collection: this._model.collection,\n          parentSpan,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalAggregate, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchQueryExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Query exec prototype');\n    return (originalExec: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalExec.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(this.op, {\n            condition: this._conditions,\n            updates: this._update,\n            options: this.options,\n            fields: this._fields,\n          }),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.model.modelName,\n          operation: this.op,\n          attributes,\n          parentSpan,\n          collection: this.mongooseCollection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalExec, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchOnModelMethods(op: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose Model ${op} prototype`);\n    return (originalOnModelFunction: Function) => {\n      return function method(this: any, options?: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalOnModelFunction.apply(this, arguments);\n        }\n\n        const serializePayload: SerializerPayload = { document: this };\n        if (options && !(options instanceof Function)) {\n          serializePayload.options = options;\n        }\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            op,\n            serializePayload,\n          ),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.constructor.modelName,\n          operation: op,\n          attributes,\n          parentSpan,\n          collection: this.constructor.collection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        if (options instanceof Function) {\n          callback = options;\n          options = undefined;\n        }\n\n        return self._handleResponse(\n          span,\n          originalOnModelFunction,\n          this,\n          arguments,\n          callback,\n        );\n      };\n    };\n  }\n\n  // we want to capture the otel span on the object which is calling exec.\n  // in the special case of aggregate, we need have no function to path\n  // on the Aggregate object to capture the context on, so we patch\n  // the aggregate of Model, and set the context on the Aggregate object\n  private patchModelAggregate() {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose model aggregate`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        const currentSpan = trace.getSpan(context.active());\n        const aggregate = self._callOriginalFunction(() =>\n          original.apply(this, arguments),\n        );\n        if (aggregate) aggregate[_STORED_PARENT_SPAN] = currentSpan;\n        return aggregate;\n      };\n    };\n  }\n\n  private patchAndCaptureSpanContext(funcName: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose query ${funcName} prototype`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        this[_STORED_PARENT_SPAN] = trace.getSpan(context.active());\n        return self._callOriginalFunction(() => original.apply(this, arguments));\n      };\n    };\n  }\n\n  private _handleResponse(\n    span: Span,\n    exec: Function,\n    originalThis: any,\n    args: IArguments,\n    callback?: Function,\n  ) {\n    const self = this;\n    if (callback instanceof Function) {\n      return self._callOriginalFunction(() =>\n        handleCallbackResponse(\n          callback,\n          exec,\n          originalThis,\n          span,\n          self._config.responseHook,\n        ),\n      );\n    } else {\n      const response = self._callOriginalFunction(() => exec.apply(originalThis, args));\n      return handlePromiseResponse(response, span, self._config.responseHook);\n    }\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this._config?.suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n\n  private _addModuleVersionIfNeeded(span: Span) {\n    if (this._config.moduleVersionAttributeName) {\n      span.setAttribute(this._config.moduleVersionAttributeName, this.moduleVersion);\n    }\n  }\n}\n","import { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface SerializerPayload {\n    condition?: any;\n    options?: any;\n    updates?: any;\n    document?: any;\n    aggregatePipeline?: any;\n    fields?: any;\n}\n\nexport type DbStatementSerializer = (operation: string, payload: SerializerPayload) => string;\n\nexport type MongooseResponseCustomAttributesFunction = (span: Span, response: any) => void;\n\nexport interface MongooseInstrumentationConfig extends InstrumentationConfig {\n    /**\n     * Mongoose operation use mongodb under the hood.\n     * If mongodb instrumentation is enabled, a mongoose operation will also create\n     * a mongodb operation describing the communication with mongoDB servers.\n     * Setting the `suppressInternalInstrumentation` config value to `true` will\n     * cause the instrumentation to suppress instrumentation of underlying operations,\n     * effectively causing mongodb spans to be non-recordable.\n     */\n    suppressInternalInstrumentation?: boolean;\n\n    /** Custom serializer function for the db.statement tag */\n    dbStatementSerializer?: DbStatementSerializer;\n\n    /** hook for adding custom attributes using the response payload */\n    responseHook?: MongooseResponseCustomAttributesFunction;\n\n    /**\n     * If passed, a span attribute will be added to all spans with key of the provided \"moduleVersionAttributeName\"\n     * and value of the module version.\n     */\n    moduleVersionAttributeName?: string;\n\n    /** Set to true if you do not want to collect traces that start with mongoose */\n    requireParentSpan?: boolean;\n}\n","import {\n  Tracer,\n  SpanAttributes,\n  SpanStatusCode,\n  context,\n  trace,\n  diag,\n  Span,\n  SpanKind,\n} from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// ===== Start Span Utils =====\n\ninterface StartSpanPayload {\n  tracer: Tracer;\n  collection: Collection;\n  modelName: string;\n  operation: string;\n  attributes: SpanAttributes;\n  parentSpan?: Span;\n}\n\nfunction getAttributesFromCollection(collection: Collection): SpanAttributes {\n  return {\n    [SemanticAttributes.DB_MONGODB_COLLECTION]: collection.name,\n    [SemanticAttributes.DB_NAME]: collection.conn.name,\n    [SemanticAttributes.DB_USER]: collection.conn.user,\n    [SemanticAttributes.NET_PEER_NAME]: collection.conn.host,\n    [SemanticAttributes.NET_PEER_PORT]: collection.conn.port,\n    [SemanticAttributes.NET_TRANSPORT]: 'IP.TCP', // Always true in mongodb\n  };\n}\n\nexport function startSpan({\n  tracer,\n  collection,\n  modelName,\n  operation,\n  attributes,\n  parentSpan,\n}: StartSpanPayload): Span {\n  console.log('currentspan', trace.getSpan(context.active()));\n  return tracer.startSpan(\n    `mongoose.${modelName}.${operation}`,\n    {\n      kind: SpanKind.CLIENT,\n      attributes: {\n        ...attributes,\n        ...getAttributesFromCollection(collection),\n        [SemanticAttributes.DB_OPERATION]: operation,\n        [SemanticAttributes.DB_SYSTEM]: 'mongodb',\n      },\n    },\n    parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined,\n  );\n}\n\n// ===== End Span Utils =====\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n  span.recordException(error);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: `${error.message} ${error.code ? `\\nMongo Error Code: ${error.code}` : ''}`,\n  });\n}\n\nfunction applyResponseHook(\n  span: Span,\n  response: any,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  if (responseHook) {\n    safeExecuteInTheMiddle(\n      () => responseHook(span, response),\n      (e) => {\n        if (e) {\n          diag.error('mongoose instrumentation: responseHook error', e);\n        }\n      },\n      true,\n    );\n  }\n}\n\nexport function handlePromiseResponse(\n  execResponse: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n): any {\n  if (!(execResponse instanceof Promise)) {\n    applyResponseHook(span, execResponse, responseHook);\n    span.end();\n    return execResponse;\n  }\n\n  return execResponse\n    .then((response) => {\n      applyResponseHook(span, response, responseHook);\n      return response;\n    })\n    .catch((err) => {\n      setErrorStatus(span, err);\n      throw err;\n    })\n    .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n  callback: Function,\n  exec: Function,\n  originalThis: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  return exec.apply(originalThis, [\n    (err: Error, response: any) => {\n      err ? setErrorStatus(span, err) : applyResponseHook(span, response, responseHook);\n      span.end();\n      return callback!(err, response);\n    },\n  ]);\n}\n","// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.28.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  VERSION = 'nestjs.version',\n  TYPE = 'nestjs.type',\n  MODULE = 'nestjs.module',\n  CONTROLLER = 'nestjs.controller',\n  CALLBACK = 'nestjs.callback',\n  PIPES = 'nestjs.pipes',\n  INTERCEPTORS = 'nestjs.interceptors',\n  GUARDS = 'nestjs.guards',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AttributeNames } from './attribute-name';\nexport { NestType } from './type';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NestType {\n  APP_CREATION = 'app_creation',\n  REQUEST_CONTEXT = 'request_context',\n  REQUEST_HANDLER = 'handler',\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport type * as NestJS from '@nestjs/core';\nimport type { NestFactory } from '@nestjs/core/nest-factory.js';\nimport type { RouterExecutionContext } from '@nestjs/core/router/router-execution-context.js';\nimport type { Controller } from '@nestjs/common/interfaces';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\nimport { AttributeNames, NestType } from './enums';\n\nexport class NestInstrumentation extends InstrumentationBase<typeof NestJS> {\n  static readonly COMPONENT = '@nestjs/core';\n  static readonly COMMON_ATTRIBUTES = {\n    component: NestInstrumentation.COMPONENT,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-nestjs-core', VERSION);\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition<any>(\n      NestInstrumentation.COMPONENT,\n      ['>=4.0.0'],\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Patching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        return moduleExports;\n      },\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Unpatching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        if (moduleExports === undefined) return;\n      },\n    );\n\n    module.files.push(\n      this.getNestFactoryFileInstrumentation(['>=4.0.0']),\n      this.getRouterExecutionContextFileInstrumentation(['>=4.0.0']),\n    );\n\n    return module;\n  }\n\n  getNestFactoryFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/nest-factory.js',\n      versions,\n      (NestFactoryStatic: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          NestFactoryStatic.NestFactoryStatic.prototype,\n          'create',\n          createWrapNestFactoryCreate(this.tracer, moduleVersion),\n        );\n        return NestFactoryStatic;\n      },\n      (NestFactoryStatic: any) => {\n        this._unwrap(NestFactoryStatic.NestFactoryStatic.prototype, 'create');\n      },\n    );\n  }\n\n  getRouterExecutionContextFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/router/router-execution-context.js',\n      versions,\n      (RouterExecutionContext: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create',\n          createWrapCreateHandler(this.tracer, moduleVersion),\n        );\n        return RouterExecutionContext;\n      },\n      (RouterExecutionContext: any) => {\n        this._unwrap(RouterExecutionContext.RouterExecutionContext.prototype, 'create');\n      },\n    );\n  }\n\n  private ensureWrapped(\n    moduleVersion: string | undefined,\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any,\n  ) {\n    this._diag.debug(\n      `Applying ${methodName} patch for ${NestInstrumentation.COMPONENT}@${moduleVersion}`,\n    );\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n\nfunction createWrapNestFactoryCreate(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreate(original: typeof NestFactory.create) {\n    return function createWithTrace(\n      this: typeof NestFactory,\n      nestModule: any,\n      /* serverOrOptions */\n    ) {\n      const span = tracer.startSpan('Create Nest App', {\n        attributes: {\n          ...NestInstrumentation.COMMON_ATTRIBUTES,\n          [AttributeNames.TYPE]: NestType.APP_CREATION,\n          [AttributeNames.VERSION]: moduleVersion,\n          [AttributeNames.MODULE]: nestModule.name,\n        },\n      });\n      const spanContext = api.trace.setSpan(api.context.active(), span);\n\n      return api.context.with(spanContext, async () => {\n        try {\n          return await original.apply(this, arguments as any);\n        } catch (e) {\n          throw addError(span, e);\n        } finally {\n          span.end();\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapCreateHandler(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreateHandler(original: RouterExecutionContext['create']) {\n    return function createHandlerWithTrace(\n      this: RouterExecutionContext,\n      instance: Controller,\n      callback: (...args: any[]) => unknown,\n    ) {\n      arguments[1] = createWrapHandler(tracer, moduleVersion, callback);\n      const handler = original.apply(this, arguments as any);\n      const exceptionList = [];\n      return function (this: any, req: any, res: any, next: (...args: any[]) => unknown) {\n        const callbackName = callback.name;\n        const instanceName =\n          instance.constructor && instance.constructor.name\n            ? instance.constructor.name\n            : 'UnnamedInstance';\n        const spanName = callbackName ? `${instanceName}.${callbackName}` : instanceName;\n\n        const span = tracer.startSpan(spanName, {\n          attributes: {\n            ...NestInstrumentation.COMMON_ATTRIBUTES,\n            [AttributeNames.VERSION]: moduleVersion,\n            [AttributeNames.TYPE]: NestType.REQUEST_CONTEXT,\n            [SemanticAttributes.HTTP_METHOD]: req.method,\n            [SemanticAttributes.HTTP_URL]: req.originalUrl || req.url,\n            [SemanticAttributes.HTTP_ROUTE]: req.route?.path || req.routerPath,\n            [AttributeNames.CONTROLLER]: instanceName,\n            [AttributeNames.CALLBACK]: callbackName,\n          },\n        });\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n        return api.context.with(spanContext, async () => {\n          try {\n            return await handler.apply(this, arguments as any);\n          } finally {\n            span.end();\n          }\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapHandler(\n  tracer: api.Tracer,\n  moduleVersion: string | undefined,\n  handler: Function,\n) {\n  const wrappedHandler = function (this: RouterExecutionContext) {\n    const span = tracer.startSpan(handler.name || 'anonymous nest handler', {\n      attributes: {\n        ...NestInstrumentation.COMMON_ATTRIBUTES,\n        [AttributeNames.VERSION]: moduleVersion,\n        [AttributeNames.TYPE]: NestType.REQUEST_HANDLER,\n        [AttributeNames.CALLBACK]: handler.name,\n      },\n    });\n    const spanContext = api.trace.setSpan(api.context.active(), span);\n    return api.context.with(spanContext, async () => {\n      try {\n        return await handler.apply(this, arguments);\n      } finally {\n        span.end();\n      }\n    });\n  };\n\n  if (handler.name) {\n    Object.defineProperty(wrappedHandler, 'name', { value: handler.name });\n  }\n\n  // Get the current metadata and set onto the wrapper to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(handler).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, handler),\n      wrappedHandler,\n    );\n  });\n  return wrappedHandler;\n}\n\nconst addError = (span: api.Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: api.SpanStatusCode.ERROR, message: error.message });\n  return error;\n};\n","export const VERSION = '2.2.2';\n","import { DocumentNode, DefinitionNode, SelectionNode, GraphQLResolveInfo } from 'graphql';\n\nexport const getPathsFromAST = (ast: DocumentNode) => {\n  return ast.definitions.map(walkDefinitions);\n};\n\nconst walkDefinitions = (node: DefinitionNode) => {\n  if (node.kind === 'OperationDefinition') {\n    return node.selectionSet.selections.reduce(createReduceSelections('/'), []);\n  }\n};\n\nexport const getPaths = (info: GraphQLResolveInfo) => {\n  return info.operation.selectionSet.selections.reduce(createReduceSelections('/'), []);\n};\n\nconst createReduceSelections =\n  (parent: string) =>\n  (acc: string[], curr: SelectionNode): string[] => {\n    if (curr.kind === 'Field') {\n      if (curr.selectionSet && curr.selectionSet.selections) {\n        acc.push(parent + curr.name.value + '/');\n        return curr.selectionSet.selections.reduce(\n          createReduceSelections(parent + curr.name.value + '/'),\n          acc,\n        );\n      } else {\n        acc.push(parent + curr.name.value);\n        return acc;\n      }\n    }\n    return acc;\n  };\n","import { Context } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\n\nexport class StoreContext {\n  static cls = new AsyncLocalStorage<StoreContext>();\n\n  static get currentContext() {\n    return this.cls.getStore();\n  }\n\n  constructor(public readonly context: Context) {}\n}\n","import { lastValueFrom } from 'rxjs';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\nimport { context, defaultTextMapSetter, propagation, trace } from '@opentelemetry/api';\n\n@Injectable()\nexport class RPCTraceClientProxy {\n  async send(client: ClientProxy, pattern, payload) {\n    const span = trace.getSpan(context.active());\n    if (span?.spanContext()) {\n      propagation.inject(context.active(), payload, defaultTextMapSetter);\n    }\n    try {\n      const res = await lastValueFrom(client.send(pattern, payload));\n      return res;\n    } catch (error) {\n      throw new BadRequestException(error);\n    }\n  }\n}\n","import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable, tap } from 'rxjs';\nimport { context, trace, propagation, defaultTextMapGetter } from '@opentelemetry/api';\nimport { NatsContext, RedisContext, TcpContext } from '@nestjs/microservices';\nimport { Request as ExpressReq } from 'express';\nimport { StoreContext } from './store-context';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class TraceInterceptor implements NestInterceptor {\n  intercept(\n    ctx: ExecutionContext,\n    next: CallHandler<any>,\n  ): Observable<any> | Promise<Observable<any>> {\n    const reflector = new Reflector();\n    const except = reflector.get<boolean>('ExceptTracerInterceptor', ctx.getHandler());\n    if (except) return next.handle();\n\n    const _logger = new Logger(TraceInterceptor.name);\n\n    const tracer = trace.getTracer('default');\n    if (!tracer) return next.handle();\n\n    const getRPCSpan = (ctx: ExecutionContext) => {\n      const rpcContext = ctx\n        .switchToRpc()\n        .getContext<NatsContext | TcpContext | RedisContext>();\n\n      const attributes: any = {};\n      const methodKey = ctx.getHandler().name;\n      let spanName = `rpc::${methodKey}`;\n\n      if (rpcContext instanceof NatsContext) {\n        attributes.type = 'nats';\n        spanName = 'nats::' + (<NatsContext>rpcContext).getSubject();\n      }\n\n      const data = ctx.switchToRpc().getData();\n      const parentCtx = propagation.extract(context.active(), data, defaultTextMapGetter);\n\n      const currentSpan =\n        trace.getSpan(context.active()) ??\n        tracer.startSpan(spanName, undefined, parentCtx);\n\n      currentSpan.setAttributes(attributes);\n\n      _logger.log(`traceid: ${currentSpan.spanContext().traceId}`);\n\n      StoreContext.cls.enterWith(new StoreContext(parentCtx));\n\n      return currentSpan;\n    };\n\n    const getHTTPSpan = (ctx: ExecutionContext) => {\n      const req: ExpressReq = ctx.switchToHttp().getRequest();\n      // const res: ExpressRes = ctx.switchToHttp().getResponse();\n\n      // ** instrumentation-http wll auto inject and extract parentCtx\n      // const parentCtx = Array.isArray(req.headers.spanContext)\n      //   ? req.headers.spanContext[0]\n      //   : req.headers.spanContext;\n      // const traceCtx = parentCtx\n      //   ? trace.setSpanContext(context.active(), JSON.parse(parentCtx))\n      //   : undefined;\n      const host = req.hostname;\n      const path = req.path;\n      _logger.log(`httpSpan: ${host} ${path}`);\n      const span = trace.getSpan(context.active()) ?? tracer.startSpan(host + path);\n      span.updateName(`http-xxx`);\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n\n      return span;\n    };\n\n    const getGraphqlSpan = (ctx: ExecutionContext) => {\n      const gqlContext = GqlExecutionContext.create(ctx);\n      const { operation, fieldName, path } = gqlContext.getInfo();\n\n      const req = gqlContext.getContext().req;\n      const span = trace.getSpan(context.active()) || tracer.startSpan('default');\n\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n      span.setAttribute('type', 'graphql');\n\n      const typeNames = ['Mutation', 'Query'];\n\n      if (typeNames.includes(path.typename)) {\n        span.updateName(`gql::${operation.operation}:${fieldName}`.toLocaleLowerCase());\n      }\n      if (typeNames.includes(path.prev?.typename)) {\n        span.updateName(\n          `gql::${operation.operation}:${path.prev.key}.${fieldName}`.toLocaleLowerCase(),\n        );\n      }\n\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n\n      return span;\n    };\n\n    const ctxType = ctx.getType<'http' | 'ws' | 'graphql' | 'rpc'>();\n\n    const span =\n      ctxType === 'rpc'\n        ? getRPCSpan(ctx)\n        : ctxType === 'graphql'\n        ? getGraphqlSpan(ctx)\n        : getHTTPSpan(ctx);\n\n    if (ctxType === 'graphql') return next.handle();\n\n    return next.handle().pipe(\n      tap({\n        next: () => {\n          span.end();\n        },\n        error: () => {\n          span.end();\n        },\n      }),\n    );\n  }\n}\n","export const copyMetadataFromFunctionToFunction = (\n  originalFunction: () => void,\n  newFunction: () => void,\n): void => {\n  // Get the current metadata and set onto the wrapper\n  // to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(originalFunction).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, originalFunction),\n      newFunction,\n    );\n  });\n};\n","module.exports = require(\"@liaoliaots/nestjs-redis\");","module.exports = require(\"@nestjs/apollo\");","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/config\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/jwt\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@nestjs/passport\");","module.exports = require(\"@opentelemetry/api\");","module.exports = require(\"@opentelemetry/core\");","module.exports = require(\"@opentelemetry/instrumentation\");","module.exports = require(\"@opentelemetry/semantic-conventions\");","module.exports = require(\"@paljs/plugins\");","module.exports = require(\"@prisma/client\");","module.exports = require(\"@supercharge/request-ip\");","module.exports = require(\"apollo-server-core\");","module.exports = require(\"apollo-server-express\");","module.exports = require(\"bcrypt\");","module.exports = require(\"bull\");","module.exports = require(\"casbin\");","module.exports = require(\"class-validator\");","module.exports = require(\"cookie-parser\");","module.exports = require(\"del\");","module.exports = require(\"dockerode\");","module.exports = require(\"express\");","module.exports = require(\"expression-eval\");","module.exports = require(\"graphql\");","module.exports = require(\"graphql-type-json\");","module.exports = require(\"ioredis\");","module.exports = require(\"kafkajs\");","module.exports = require(\"memory-streams\");","module.exports = require(\"nanoid\");","module.exports = require(\"nestjs-otel\");","module.exports = require(\"nestjs-pino\");","module.exports = require(\"nestjs-prisma\");","module.exports = require(\"passport-github2\");","module.exports = require(\"passport-google-oauth20\");","module.exports = require(\"passport-jwt\");","module.exports = require(\"passport-local\");","module.exports = require(\"pino\");","module.exports = require(\"pino-pretty\");","module.exports = require(\"rxjs\");","module.exports = require(\"slugify\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"async_hooks\");","module.exports = require(\"crypto\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// Monkeypatching must at top level of code\n// import './tracing';\n\nimport { BadRequestException, Logger, ValidationPipe } from \"@nestjs/common\";\nimport { NestFactory } from \"@nestjs/core\";\nimport cookieParser from \"cookie-parser\";\nimport { PrismaService } from \"nestjs-prisma\";\nimport { ConfigService } from \"@nestjs/config\";\n\nimport { AppModule } from \"./app/app.module\";\nimport { NestConfig } from \"./interfaces/config.interface\";\nimport { AllExceptionsFilter } from \"./exceptions/exceptions\";\nimport { TraceInterceptor } from \"@koj/instrumentation\";\nimport { ValidationError } from \"class-validator\";\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule, { bufferLogs: true });\n\n  const configService = app.get(ConfigService);\n  const globalPrefix =\n    configService.get<NestConfig[\"globalPrefix\"]>(\"app.globalPrefix\");\n\n  app.setGlobalPrefix(globalPrefix);\n  app.useGlobalFilters(new AllExceptionsFilter());\n  app.useGlobalPipes(\n    new ValidationPipe({\n      stopAtFirstError: true,\n      exceptionFactory: (validationErrors: ValidationError[] = []) => {\n        // Get first property from first error\n        return new BadRequestException(\n          Object.values(validationErrors[0].constraints)[0]\n        );\n      }\n    })\n  );\n  app.use(cookieParser());\n\n  // enable shutdown hook\n  const prismaService: PrismaService = app.get(PrismaService);\n  prismaService.enableShutdownHooks(app);\n\n  const appConfig = configService.get<NestConfig>(\"app\");\n  app.useGlobalInterceptors(new TraceInterceptor());\n  // Cors\n  if (appConfig.cors.enabled) {\n    app.enableCors({ origin: true, credentials: true });\n  }\n\n  await app.listen(appConfig.port);\n  Logger.log(\n    `🚀 Application is running on: http://localhost:${appConfig.port}/${globalPrefix}`\n  );\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}