{"version":3,"file":"main.js","mappings":"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","sources":["webpack://koj/./apps/challenge/src/challenge/challenge.controller.ts","webpack://koj/./apps/challenge/src/challenge/challenge.module.ts","webpack://koj/./apps/challenge/src/challenge/challenge.service.ts","webpack://koj/./apps/challenge/src/utils/decode-base64.ts","webpack://koj/./apps/challenge/src/utils/language.config.ts","webpack://koj/./apps/challenge/src/utils/save-code.util.ts","webpack://koj/./apps/challenge/src/utils/save-folder.util.ts","webpack://koj/./apps/challenge/src/utils/save-testcase.util.ts","webpack://koj/./apps/challenge/src/utils/transform-input.util.ts","webpack://koj/./apps/koj/src/logger/logger.config.ts","webpack://koj/./apps/koj/src/logger/logger.module.ts","webpack://koj/./apps/koj/src/logger/logger.service.ts","webpack://koj/./libs/code-executor/src/Builder.ts","webpack://koj/./libs/code-executor/src/CodeExecutor.ts","webpack://koj/./libs/code-executor/src/Runner.ts","webpack://koj/./libs/code-executor/src/Worker.ts","webpack://koj/./libs/code-executor/src/index.ts","webpack://koj/./libs/code-executor/src/utils/findExtension.ts","webpack://koj/./libs/code-executor/src/utils/getOutput.ts","webpack://koj/./libs/code-executor/src/utils/logger.ts","webpack://koj/./libs/code-executor/src/utils/saveCode.ts","webpack://koj/./libs/code-executor/src/utils/writeToFile.ts","webpack://koj/./libs/code-gen/src/configs/constants.ts","webpack://koj/./libs/code-gen/src/index.ts","webpack://koj/./libs/code-gen/src/languages/cplusplus.ts","webpack://koj/./libs/code-gen/src/languages/javascript.ts","webpack://koj/./libs/code-gen/src/languages/output.ts","webpack://koj/./libs/code-gen/src/languages/python.ts","webpack://koj/./libs/code-gen/src/types.ts","webpack://koj/./libs/code-gen/src/utils/jsTemplate.ts","webpack://koj/./libs/code-gen/src/utils/keywords.ts","webpack://koj/./libs/code-gen/src/utils/utils.ts","webpack://koj/./libs/common/constants/src/index.ts","webpack://koj/./libs/common/constants/src/lib/casbin.constant.ts","webpack://koj/./libs/common/constants/src/lib/message-partern.constant.ts","webpack://koj/./libs/common/constants/src/lib/runner.constant.ts","webpack://koj/./libs/common/exceptions/src/index.ts","webpack://koj/./libs/common/exceptions/src/lib/rpc-prisma.exception.ts","webpack://koj/./libs/common/exceptions/src/lib/rpc.exception.ts","webpack://koj/./libs/instrumentation/src/RpcContextPropagator.ts","webpack://koj/./libs/instrumentation/src/decorator/span.decorator.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/enum.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/symbols.ts","webpack://koj/./libs/instrumentation/src/graphql/enums/types.ts","webpack://koj/./libs/instrumentation/src/graphql/instrumentation.ts","webpack://koj/./libs/instrumentation/src/graphql/utils.ts","webpack://koj/./libs/instrumentation/src/graphql/version.ts","webpack://koj/./libs/instrumentation/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/index.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/mongoose.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/types.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/utils.ts","webpack://koj/./libs/instrumentation/src/mongoose/src/version.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/attribute-name.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/index.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/enums/type.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/instrumentation.ts","webpack://koj/./libs/instrumentation/src/nestjs-core/version.ts","webpack://koj/./libs/instrumentation/src/trace/query-to-path.ts","webpack://koj/./libs/instrumentation/src/trace/store-context.ts","webpack://koj/./libs/instrumentation/src/trace/trace-client.proxy.ts","webpack://koj/./libs/instrumentation/src/trace/trace.interceptor.ts","webpack://koj/./libs/instrumentation/src/utils.ts","webpack://koj/external commonjs \"@nestjs/common\"","webpack://koj/external commonjs \"@nestjs/core\"","webpack://koj/external commonjs \"@nestjs/graphql\"","webpack://koj/external commonjs \"@nestjs/microservices\"","webpack://koj/external commonjs \"@opentelemetry/api\"","webpack://koj/external commonjs \"@opentelemetry/core\"","webpack://koj/external commonjs \"@opentelemetry/instrumentation\"","webpack://koj/external commonjs \"@opentelemetry/semantic-conventions\"","webpack://koj/external commonjs \"@prisma/client\"","webpack://koj/external commonjs \"bull\"","webpack://koj/external commonjs \"del\"","webpack://koj/external commonjs \"dockerode\"","webpack://koj/external commonjs \"memory-streams\"","webpack://koj/external commonjs \"nestjs-pino\"","webpack://koj/external commonjs \"nestjs-prisma\"","webpack://koj/external commonjs \"pino\"","webpack://koj/external commonjs \"pino-pretty\"","webpack://koj/external commonjs \"rxjs\"","webpack://koj/external commonjs \"slugify\"","webpack://koj/external commonjs \"tslib\"","webpack://koj/external commonjs \"uuid\"","webpack://koj/external node-commonjs \"async_hooks\"","webpack://koj/external node-commonjs \"fs\"","webpack://koj/external node-commonjs \"fs/promises\"","webpack://koj/external node-commonjs \"path\"","webpack://koj/external node-commonjs \"perf_hooks\"","webpack://koj/external node-commonjs \"worker_threads\"","webpack://koj/webpack/bootstrap","webpack://koj/./apps/challenge/src/main.ts"],"sourcesContent":["import { TraceService } from \"nestjs-otel\";\n\nimport {\n  UsePipes,\n  Controller,\n  ValidationPipe,\n  UseFilters\n} from \"@nestjs/common\";\n\nimport {\n  Client,\n  Payload,\n  Transport,\n  ClientProxy,\n  MessagePattern\n} from \"@nestjs/microservices\";\n\nimport {\n  CHALLENGE_CREATE,\n  CHALLENGE_FIND_MANY,\n  CHALLENGE_DELETE,\n  CHALLENGE_UPDATE,\n  CHALLENGE_FIND_UNIQUE,\n  CHALLENGE_SUBMIT,\n  CHALLENGE_FIND_MANY_PUBLIC,\n  CHALLENGE_FIND_UNIQUE_PUBLIC\n} from \"@koj/common/constants\";\nimport { Span } from \"@koj/instrumentation\";\n\nimport { ChallengeService } from \"./challenge.service\";\nimport { RpcPrismaExceptionFilter } from \"@koj/common/exceptions\";\nimport { RpcException } from \"@nestjs/microservices\";\n\n@UseFilters(RpcPrismaExceptionFilter)\n@Controller()\nexport class AppController {\n  @Client({\n    transport: Transport.NATS,\n    options: {\n      queue: \"challenge_queue\",\n      servers: [\"nats://localhost:4222\"]\n    }\n  })\n  client: ClientProxy;\n\n  constructor(private readonly challengeService: ChallengeService) {}\n\n  @MessagePattern(CHALLENGE_CREATE)\n  @UsePipes(new ValidationPipe({ transform: true }))\n  @Span()\n  async m_create(@Payload() { data, select }) {\n    try {\n      return await this.challengeService.create(data, select);\n    } catch (error) {\n      console.log(error);\n      throw new RpcException(error.message);\n    }\n  }\n\n  @MessagePattern(CHALLENGE_FIND_MANY)\n  @Span()\n  async m_findMany(@Payload() { args, select }) {\n    return this.challengeService.findMany(args, select);\n  }\n\n  @MessagePattern(CHALLENGE_FIND_UNIQUE_PUBLIC)\n  @Span()\n  async m_findUniquePublic(@Payload() { where, select }) {\n    return this.challengeService.findUniquePublic(where, select);\n  }\n\n  @MessagePattern(CHALLENGE_FIND_UNIQUE)\n  @Span()\n  async m_findUnique(@Payload() { where, select }) {\n    return this.challengeService.findUnique(where, select);\n  }\n\n  @MessagePattern(CHALLENGE_UPDATE)\n  m_update(@Payload() { data, where, select }) {\n    return this.challengeService.update(data, where, select);\n  }\n\n  @MessagePattern(CHALLENGE_DELETE)\n  m_remove(@Payload() { where, select }) {\n    return this.challengeService.remove(where, select);\n  }\n\n  @MessagePattern(CHALLENGE_SUBMIT)\n  m_submit(@Payload() { data }) {\n    return this.challengeService.submit(data);\n  }\n}\n","import { Module } from '@nestjs/common';\nimport { PrismaModule } from 'nestjs-prisma';\n\nimport { AppController } from './challenge.controller';\nimport { ChallengeService } from './challenge.service';\nimport { LoggerModule } from '../../../koj/src/logger/logger.module';\n\n@Module({\n  imports: [\n    PrismaModule.forRootAsync({\n      isGlobal: true,\n      useFactory: () => ({\n        prismaOptions: { log: ['info', 'query'], errorFormat: 'minimal' },\n        // middlewares: [loggingMiddleware()],\n      }),\n    }),\n    LoggerModule,\n  ],\n  controllers: [AppController],\n  providers: [ChallengeService],\n})\nexport class AppModule {}\n","import {\n  ConflictException,\n  Injectable,\n  InternalServerErrorException,\n  NotFoundException\n} from \"@nestjs/common\";\n\nimport slugify from \"slugify\";\nimport { Challenge, Prisma } from \"@prisma/client\";\nimport { PinoLogger } from \"nestjs-pino\";\nimport { performance } from \"perf_hooks\";\nimport { HttpStatus } from \"@nestjs/common\";\nimport { PrismaService } from \"nestjs-prisma\";\n\nimport { Input } from \"@koj/code-gen\";\nimport { CodeExecutor } from \"@koj/code-executor\";\nimport { ChallengeSubmitInput } from \"@koj/common/dto\";\nimport { FindManyChallengeArgs } from \"@koj/common/dto\";\nimport { KChallengeWhereUniqueInput } from \"@koj/common/dto\";\nimport { ChallengeCreateInput } from \"@koj/generated/challenge/challenge-create.input\";\nimport { ChallengeUpdateInput } from \"@koj/generated/challenge/challenge-update.input\";\n\nimport saveFolder from \"../utils/save-folder.util\";\nimport saveTestcases from \"../utils/save-testcase.util\";\nimport { languageConfigs } from \"../utils/language.config\";\n\nconst codeExecutor = new CodeExecutor(\"myExecutor\", \"redis://127.0.0.1:6379\");\nexport interface ChallengeWhereCondition {\n  id?: number;\n  slug_domainId: { slug: string; domainId: number };\n}\n\n@Injectable()\nexport class ChallengeService {\n  constructor(\n    private prisma: PrismaService,\n    private readonly logger: PinoLogger\n  ) {}\n  async create(data: ChallengeCreateInput, select: object) {\n    const { domainId, title } = data;\n    const slug = slugify(title).toLowerCase();\n    console.log(\n      \"🚀 ~ file: challenge.service.ts ~ line 42 ~ ChallengeService ~ create ~ slug\",\n      slug\n    );\n\n    data.slug = slug;\n\n    await this.saveCode(data, domainId, slug);\n\n    return this.prisma.challenge.create({ data, ...select });\n  }\n\n  findMany(args: FindManyChallengeArgs, select: object) {\n    return this.prisma.challenge.findMany({ ...args, select });\n  }\n\n  async findUniquePublic(where: KChallengeWhereUniqueInput, select: object) {\n    const whereCondition = this.getChallengeWhereUnique(where, where.domainId);\n    const data = (await this.prisma.challenge.findUnique({\n      where: whereCondition,\n      select\n    })) as Challenge;\n\n    if (!data) {\n      throw new NotFoundException({\n        message: \"Challenge not exists\",\n        statusCode: HttpStatus.NOT_FOUND\n      });\n    }\n\n    (data.testcases as any).forEach(({ id, hidden }, index) => {\n      if (hidden) data.testcases[index] = { id, hidden };\n    });\n\n    console.log(data.testcases);\n\n    return data;\n  }\n\n  async findUnique(where: KChallengeWhereUniqueInput, select: object) {\n    const whereCondition = this.getChallengeWhereUnique(where, where.domainId);\n\n    return this.prisma.challenge\n      .findUnique({ where: whereCondition, select })\n      .then((data) => {\n        if (!data) {\n          throw new NotFoundException({\n            message: \"Challenge not exists\",\n            statusCode: HttpStatus.NOT_FOUND\n          });\n        }\n        return data;\n      });\n  }\n\n  async update(\n    data: ChallengeUpdateInput,\n    where: KChallengeWhereUniqueInput,\n    select: object\n  ) {\n    const { domainId, title } = data;\n    const slug = slugify(title).toLowerCase();\n\n    data.updatedAt = new Date().toISOString();\n\n    const checkExistResult = await this.prisma.challenge.findFirst({\n      where: {\n        NOT: where.id ? { id: where.id } : { slug: where.slug },\n        slug,\n        domainId\n      },\n      select: { id: true, title: true, inputs: true, structs: true }\n    });\n\n    if (checkExistResult) {\n      throw new ConflictException({\n        message: \"Challenge is exists\",\n        statusCode: HttpStatus.CONFLICT\n      });\n    }\n\n    await this.saveCode(data, domainId, slug);\n\n    const whereCondition = this.getChallengeWhereUnique(where, domainId);\n    return this.prisma.challenge.update({\n      data,\n      where: whereCondition,\n      select\n    });\n  }\n\n  async remove(where: KChallengeWhereUniqueInput, select: object) {\n    return this.prisma.challenge.delete({ where, select }).catch((error) => {\n      if (error instanceof Prisma.PrismaClientKnownRequestError) {\n        if (error.code === \"P2025\") {\n          throw new NotFoundException();\n        }\n      }\n      throw error;\n    });\n  }\n\n  // Todo convert to microservice\n  async saveCode(data, domainId, slug) {\n    const inputSchema = {\n      name: data.functionName,\n      inputs: data.inputs || [],\n      structs: data.structs || [],\n      output: { type: data.output }\n    };\n    const inputData = Input.formJson(<any>inputSchema);\n\n    try {\n      const basePath = \"/mnt/Data/code1/code-executor1\";\n      const path = `${basePath}/challenges/${domainId}/${slug}`;\n      await saveFolder(path);\n\n      const promiseWriteCode = data.languages\n        .filter((language) => [\"cplusplus\", \"javascript\"].includes(language.id))\n        .map((language) =>\n          languageConfigs[language.id].gen({ inputData, domainId, slug, path })\n        );\n      promiseWriteCode.push(\n        languageConfigs[\"output\"].gen({ inputData, domainId, slug, path })\n      );\n      const promiseWriteTestCase = (data.testcases || []).map(\n        (testcase, index) => {\n          return saveTestcases({\n            inputSchema: inputData,\n            path,\n            testcase,\n            index\n          });\n        }\n      );\n\n      await Promise.all([...promiseWriteCode, ...promiseWriteTestCase]);\n    } catch (error) {\n      console.log(\n        \"🚀 ~ file: challenge.service.ts ~ line 135 ~ ChallengeService ~ saveCode ~ error\",\n        error\n      );\n      throw new InternalServerErrorException(error.message);\n    }\n  }\n\n  async submit(data: ChallengeSubmitInput) {\n    const { content, functionName, languageId, challengeId, type, domainId } =\n      data;\n    console.log(\n      \"🚀 ~ file: challenge.service.ts ~ line 190 ~ ChallengeService ~ submit ~ type\",\n      type\n    );\n    try {\n      const basePath = process.env.BASE_PATH;\n      const userId = \"hieunguyen-123\";\n      const challengePath = `${basePath}/challenges/${domainId}/${challengeId}`;\n      const userSolvePath = `${basePath}/user-solve/${challengeId}/${userId}`;\n      const time = performance.now();\n      const result = await codeExecutor.runCode({\n        type,\n        userSolvePath,\n        challengePath,\n        language: languageId,\n        code: languageConfigs[languageId].genSolution(content, functionName)\n      });\n      if (result.error) {\n        return {\n          result: null,\n          error: result.error\n        };\n      }\n      this.logger.info(result);\n      this.logger.info(`time take : ${(performance.now() - time) / 1000}s`);\n\n      return { result: result.data.tests };\n    } catch (error) {\n      console.log(error);\n      return false;\n    }\n  }\n\n  private getChallengeWhereUnique(\n    { id, slug }: KChallengeWhereUniqueInput,\n    domainId: number\n  ) {\n    if (id) return { id };\n    return { slug_domainId: { slug, domainId } };\n  }\n}\n","export default function decodeBase64(code: string): string {\n  return Buffer.from(code, 'base64').toString('ascii');\n}\n","import {\n  genCplusplus,\n  genPython,\n  genJavascript,\n  genJavascriptSolution,\n  genCplusplusModule,\n  genCplusplusSolution,\n  genOutput,\n} from '@koj/code-gen';\nimport saveCode from './save-code.util';\nimport path from 'path';\n\nexport const languageConfigs = {\n  javascript: {\n    gen: genJavascriptFile,\n    genSolution: genJavascriptSolution,\n    name: 'javascript',\n    extension: 'js',\n  },\n  python: {\n    gen: genPython,\n    name: 'python',\n    extension: 'py',\n  },\n  cplusplus: {\n    gen: genCplusPlusFile,\n    genModule: genCplusplusModule,\n    genSolution: genCplusplusSolution,\n    name: 'cplusplus',\n    extension: 'cpp',\n  },\n  output: {\n    gen: genOutputFile,\n    name: 'output',\n    extension: 'js',\n  },\n};\n\nfunction genJavascriptFile({ inputData, domainId, slug, path }) {\n  const codegen = genJavascript(inputData);\n  return saveCode(path, `main.js`, codegen, false);\n}\n\nfunction genCplusPlusFile({ inputData, domainId, slug, path }) {\n  const codegen = genCplusplus(inputData);\n\n  return Promise.all([\n    saveCode(path, `main.cpp`, codegen.main, false),\n    saveCode(path, 'solution.h', codegen.lib, false),\n  ]);\n}\n\nfunction genOutputFile({ inputData, domainId, slug, path }) {\n  const codegen = genOutput(inputData);\n  return saveCode(path, `output.js`, codegen, false);\n}\n","import path from 'path';\n\nimport { mkdir, writeFile } from 'fs/promises';\n\nimport decodeBase64 from './decode-base64';\n\nexport default async function saveCode(\n  folderPath: string,\n  fileName: string,\n  code: string,\n  base64: boolean,\n) {\n  const folderPromises: Array<Promise<string>> = [];\n  folderPromises.push(mkdir(`${folderPath}`, { recursive: true }));\n  const folders = ['input', 'output'];\n  const status = ['show', 'hide'];\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true })),\n    ),\n  );\n\n  await Promise.all(folderPromises);\n  const promisesToKeep = [];\n  promisesToKeep.push(\n    base64\n      ? writeFile(path.join(folderPath, fileName), decodeBase64(code))\n      : writeFile(path.join(folderPath, fileName), code),\n  );\n\n  await Promise.all(promisesToKeep);\n  Promise.resolve();\n}\n","import del from 'del';\nimport { mkdir } from 'fs/promises';\n\nexport default async function saveFolder(folderPath: string) {\n  await del(`${folderPath}/*`, { force: true });\n  const folderPromises: Array<Promise<string>> = [];\n  folderPromises.push(mkdir(`${folderPath}`, { recursive: true }));\n  const folders = ['input', 'output'];\n  const status = ['show', 'hide'];\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true })),\n    ),\n  );\n\n  await Promise.all(folderPromises);\n}\n","import { writeFile } from \"fs/promises\";\n\nimport { transformInput } from \"./transform-input.util\";\n\nexport default async function saveTestcases({\n  path,\n  index,\n  testcase,\n  inputSchema\n}) {\n  const type = testcase.hidden ? \"hide\" : \"show\";\n  const inputPath = `${path}/input/${type}/${index}.in`;\n  const outputPath = `${path}/output/${type}/${index}.out`;\n  const transformInputResult = transformInput(inputSchema, testcase);\n\n  return Promise.all([\n    writeFile(inputPath, transformInputResult),\n    writeFile(outputPath, testcase.expectedOutput)\n  ]);\n}\n","import fs from 'fs';\nconst ws = fs.createWriteStream('./newtransform.in');\n\nconst inputSchema = {\n  name: 'custom',\n  structs: [\n    {\n      name: 'a struct',\n      comment: 'A struct for the example',\n      fields: [\n        {\n          name: 'listt',\n          comment: 'an listt',\n          type: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n          formatStyle: 'DEFAULT',\n        },\n      ],\n    },\n  ],\n  inputs: [\n    {\n      name: 'size',\n      comment: 'size',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'a struct',\n      comment: 'a struct',\n      type: { main: 'OBJECT', structName: 'a struct' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'sizex',\n      comment: 'sizex',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'list',\n      comment: 'a list of structs',\n      type: {\n        main: 'ARRAY',\n        encapsulated: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n      },\n      formatStyle: 'DEFAULT',\n    },\n  ],\n  output: {\n    name: 'output',\n    comment: 'a list of structs',\n    type: {\n      main: 'ARRAY',\n      encapsulated: { main: 'ARRAY', encapsulated: { main: 'INTEGER' } },\n    },\n    formatStyle: 'DEFAULT',\n  },\n};\n\nconst testcases = [\n  {\n    inputs: [\n      { value: 5, key: '1' },\n      { value: { listt: [1, 2, 3] }, key: '2' },\n      { value: 5, key: '3' },\n      {\n        value: [\n          [1, 2, 3],\n          [1, 4, 5],\n        ],\n        key: '4',\n      },\n    ],\n    output: '',\n  },\n];\n\nexport function transformInput(inputSchema, testcase) {\n  const resultLine = [];\n  function canBeInlined(type) {\n    const canBeInlinedType = ['INTEGER', 'CHAR'];\n    return canBeInlinedType.includes(type?.main);\n  }\n\n  function fitsInOneLine({ data, inputSchema, structs = [] }) {\n    const fitsInOneLineType = ['INTEGER', 'CHAR', 'STRING'];\n    if (fitsInOneLineType.includes(inputSchema.type.main)) return [true, data];\n\n    if (inputSchema.type.main === 'ARRAY') {\n      const isFit = canBeInlined(inputSchema.type.encapsulated);\n      if (isFit) {\n        return [true, data.join(' ')];\n      }\n      //   ws.write((data.length || inputSchema.size) + '\\n');\n      resultLine.push(data.length || inputSchema.size);\n      return [false, null];\n    }\n\n    if (inputSchema.type.main === 'OBJECT') {\n      const struct = structs.find(\n        (struct) => struct.name === inputSchema.type.structName,\n      );\n      if (!struct) {\n        throw new Error('khong co struct');\n        return [false, null];\n      }\n\n      for (let i = 0; i < struct.fields.length; i++) {\n        if (!canBeInlined(struct.fields[i].type)) {\n          return [false, null];\n        }\n      }\n      return [true, Object.values(data).join(' ')];\n    }\n\n    throw new Error('khong phai type');\n    return [false, null];\n  }\n\n  function getData2(data, inputSchema, structs?) {\n    console.log(\n      '🚀 ~ file: transform-input.util.ts ~ line 123 ~ getData2 ~ inputSchema',\n      inputSchema,\n    );\n    const [isFit, result] = fitsInOneLine({ data, inputSchema, structs });\n    if (isFit) {\n      //   ws.write(result + '\\n')\n      resultLine.push(result);\n      return;\n    }\n    if (inputSchema.type.main === 'ARRAY') {\n      // ws.write((data.length || inputSchema.size) + '\\n');\n      data.forEach((arr) => {\n        const inputSchema$ = {} as any;\n        inputSchema$.type = inputSchema.type.encapsulated;\n        console.log('inputSchema$', inputSchema$);\n\n        getData2(arr, inputSchema$);\n      });\n    }\n    if (inputSchema.type.main === 'OBJECT') {\n      const struct = structs.find((struct) => struct.name == inputSchema.type.structName);\n      console.log('struct', struct);\n      if (!struct) {\n        throw new Error('khong co struct');\n        return [false, null];\n      }\n      Object.entries(data)\n        .sort()\n        .forEach(([key, value], index) => {\n          const inputSchema$ = struct.fields[index];\n          // console.log(\"inputSchema$\",inputSchema$)\n          getData2(value, inputSchema$);\n        });\n    }\n  }\n\n  function getData(inputs, inputSchema) {\n    console.log(\n      '🚀 ~ file: transform-input.util.ts ~ line 161 ~ getData ~ inputs',\n      inputs,\n    );\n    inputs.forEach((value, index) => {\n      getData2(value, inputSchema.inputs[index], inputSchema.structs);\n    });\n    ws.end();\n  }\n\n  const inputMapping = (testcase.inputs || []).map((input) => input.value);\n  console.log(\n    '🚀 ~ file: transform-input.util.ts ~ line 170 ~ transformInput ~ inputMapping',\n    inputMapping,\n  );\n  getData(inputMapping, inputSchema);\n  console.log('resultLine', resultLine);\n  return resultLine.join('\\n');\n}\n\n// const result = transformInput(inputSchema, testcases[0]);\n// console.log(result);\nconst inputSchemaTest = {\n  structs: [\n    {\n      name: 'STRUCT1',\n      fields: [{ name: 'a', type: { main: 'INTEGER' }, formatStyle: 'DEFAULT' }],\n    },\n  ],\n  inputs: [\n    {\n      name: 'input1',\n      type: { main: 'OBJECT', structName: 'STRUCT1' },\n      formatStyle: 'DEFAULT',\n    },\n    {\n      name: 'input2',\n      type: { main: 'INTEGER' },\n      formatStyle: 'DEFAULT',\n    },\n  ],\n  output: {\n    name: '__output__',\n    type: { main: 'OBJECT', structName: 'STRUCT1' },\n    formatStyle: 'DEFAULT',\n  },\n};\nconst testcaseTest = [\n  {\n    inputs: [\n      { value: { a: 1 }, key: '3' },\n      {\n        value: 2,\n        key: '4',\n      },\n    ],\n    output: '',\n  },\n];\nconst result = transformInput(inputSchemaTest, testcaseTest[0]);\nconsole.log(result);\n","import Pino, { Logger } from 'pino';\nimport { LoggerOptions, destination } from 'pino';\nimport { trace, context } from '@opentelemetry/api';\n\nexport const loggerOptions: LoggerOptions = {\n  level: 'info',\n  timestamp: () => `,\"@timestamp\":\"${new Date().toISOString()}\"`,\n  formatters: {\n    level(label) {\n      return { level: label };\n    },\n    log(object) {\n      const span = trace.getSpan(context.active());\n      if (!span) return { ...object };\n      const { spanId, traceId, traceFlags } = span.spanContext();\n      return { ...object, spanId, traceId, traceFlags };\n    },\n  },\n};\n\nexport const logger: Logger = Pino(\n  loggerOptions,\n  destination(__dirname + process.env.LOG_FILE_NAME),\n);\n","import { Module, RequestMethod } from '@nestjs/common';\nimport { LoggerModule as PinoLoggerModule, PinoLogger } from 'nestjs-pino';\n\nimport { logger } from './logger.config';\nimport { Logger } from './logger.service';\n\n@Module({\n  imports: [\n    PinoLoggerModule.forRoot({\n      pinoHttp: {\n        logger: logger,\n        autoLogging: false,\n        customProps: function (req) {\n          return {\n            ip: req.userIp || '',\n          };\n        },\n      },\n      forRoutes: ['*'],\n      exclude: [{ method: RequestMethod.ALL, path: '/health' }],\n    }),\n  ],\n  providers: [Logger, PinoLogger],\n  exports: [Logger, PinoLogger],\n})\nexport class LoggerModule {}\n","import { PinoLogger } from 'nestjs-pino';\n\nexport class Logger extends PinoLogger {}\n","import Docker from 'dockerode';\nimport path from 'path';\nimport logger from './utils/logger';\nimport { extension } from './utils/findExtension';\n\nexport default class Builder {\n  private docker: Docker;\n\n  constructor(docker: Docker) {\n    this.docker = docker;\n  }\n\n  async build(langs?: Array<string>): Promise<void> {\n    const supportedLanguages = Object.keys(extension);\n    const languages = langs || supportedLanguages;\n    const streams: Promise<NodeJS.ReadableStream>[] = [];\n\n    languages.forEach((lang) => {\n      if (supportedLanguages.includes(lang.toLowerCase())) {\n        logger.info(`Building ${lang}...`);\n\n        streams.push(\n          this.docker.buildImage(\n            {\n              context: path.join(__dirname, 'langs', lang),\n              src: ['Dockerfile', 'start.sh'],\n            },\n            {\n              t: `${lang.toLowerCase()}-runnerx`,\n            },\n          ),\n        );\n      } else {\n        logger.error(`${lang} is not supported`);\n      }\n    });\n\n    const progress: Promise<object>[] = [];\n\n    (await Promise.all(streams)).forEach((stream) => {\n      stream.on('data', (chunk) => {\n        logger.debug(chunk);\n        // console.log(chunk.toString());\n      });\n\n      progress.push(\n        new Promise((resolve, reject) => {\n          this.docker.modem.followProgress(stream, (err: Error, res: Array<object>) => {\n            if (err) {\n              console.log(\n                '🚀 ~ file: Builder.ts ~ line 46 ~ Builder ~ progress.push ~ err',\n                err,\n              );\n              reject(err);\n            } else {\n              resolve(res);\n            }\n          });\n        }),\n      );\n    });\n\n    await Promise.all(progress);\n    logger.info('Built containers successfully');\n  }\n}\n","import Bull from \"bull\";\nimport { v4 as uuid } from \"uuid\";\n\nimport logger from \"./utils/logger\";\nimport { extension } from \"./utils/findExtension\";\nimport { RunnerOpts, ResponseData } from \"./types\";\n\nconst languages = Object.keys(extension);\n\nexport default class CodeExecutor {\n  private queue: Bull.Queue;\n\n  private jobs: Map<string, { resolve; reject }>;\n\n  constructor(name: string, redis: string) {\n    this.queue = new Bull(name, redis);\n\n    this.jobs = new Map();\n\n    this.queue.on(\"global:completed\", (_job: Bull.Job, result: string) => {\n      const parseResult = <ResponseData>JSON.parse(result);\n\n      logger.info(`Running on complete for id: ${parseResult.data.id}`);\n\n      const currentJob = this.jobs.get(parseResult.data.id);\n      if (currentJob) {\n        currentJob.resolve(parseResult);\n        this.jobs.delete(parseResult.data.id);\n      }\n    });\n  }\n\n  async runCode(codeOptions: RunnerOpts): Promise<{ data: any; error: any }> {\n    const id = uuid();\n    const codeObject = { ...codeOptions, id };\n    logger.info(`Running code with id: ${id}`);\n\n    return new Promise((resolve, reject) => {\n      this.jobs.set(id, { resolve, reject });\n      this.queue.add(codeObject);\n    });\n  }\n\n  stop() {\n    this.queue.close();\n  }\n}\n\nexport { default as Worker } from \"./Worker\";\n\nexport { languages };\n","/* eslint-disable @typescript-eslint/indent */\nimport Docker from \"dockerode\";\nimport { performance } from \"perf_hooks\";\n// import del from 'del';\nimport { Worker as NodeWorker } from \"worker_threads\";\nimport logger from \"./utils/logger\";\nimport { Result, RunnerOpts } from \"./types\";\nimport getOutput from \"./utils/getOutput\";\nimport saveCode from \"./utils/saveCode\";\nimport streams from \"memory-streams\";\nimport { RUN_ALL, RUN_SUBMIT, RUN_TEST } from \"@koj/common/constants\";\n\nexport default class Runner {\n  private docker: Docker;\n  private worker: NodeWorker;\n\n  constructor(docker: Docker, workerPath) {\n    this.docker = docker;\n    this.worker = new NodeWorker(\n      workerPath || `${__dirname}/transform-worker.js`\n    );\n  }\n\n  async run({\n    id,\n    tag,\n    code,\n    language,\n    timeout = 2,\n    userSolvePath,\n    challengePath,\n    type = RUN_TEST\n  }: RunnerOpts): Promise<Result> {\n    await saveCode(userSolvePath, code, language);\n\n    logger.info(`Starting process ${id}`);\n    const t0 = performance.now();\n    const testcaseType = type === RUN_TEST ? \"show\" : \"all\";\n\n    const stdout = new streams.WritableStream();\n    const stderr = new streams.WritableStream();\n    const { error } = await this.docker\n      .run(\n        tag,\n        [\"bash\", \"/start.sh\", `${timeout}`, `${type}`],\n        [stdout, stderr],\n        {\n          Tty: false,\n          HostConfig: {\n            AutoRemove: true,\n            Mounts: [\n              {\n                Source: challengePath,\n                Target: \"/app\",\n                Type: \"bind\"\n              },\n              {\n                Source: userSolvePath,\n                Target: \"/user-solve\",\n                Type: \"bind\"\n              }\n            ]\n          }\n        }\n      )\n      .then(function (data) {\n        const error = stderr.toString();\n        return { error: error || null };\n      })\n      .catch(function (error) {\n        return { error };\n      });\n\n    if (error) {\n      return { id, error };\n    }\n\n    const t1 = performance.now();\n    logger.info(`Process ${id} completed in ${(t1 - t0) / 1000} seconds`);\n    logger.info(language);\n\n    if ([\"cplusplus\"].includes(language.toLowerCase())) {\n      const userOutputs = [];\n      const outputs = await this.getOutPut(userSolvePath, testcaseType);\n\n      outputs.forEach((element: any, index: number) => {\n        if (!element.error) {\n          return userOutputs.push({\n            id: index,\n            value: element.output.split(\"\\n\")\n          });\n        }\n        element.result = false;\n      });\n\n      const transformResult = await this.workerTransform(\n        userOutputs,\n        challengePath\n      );\n\n      transformResult.forEach((element) => {\n        outputs[element.id].output = element.value;\n      });\n\n      const info = this.modifyAndGetInfoResult(outputs);\n      return { id, result: outputs, info };\n    }\n\n    const userOutputs = [];\n    const outputs = await this.getOutPut(userSolvePath, testcaseType);\n\n    outputs.forEach((element: any, index: number) => {\n      if (!element.error) {\n        return userOutputs.push({\n          id: index,\n          value: element.output.split(\"\\n\")\n        });\n      }\n      element.result = false;\n    });\n\n    console.log(\"result \", outputs);\n    const info = this.modifyAndGetInfoResult(outputs);\n    return { id, result: outputs, info };\n  }\n\n  // Mutate data\n  modifyAndGetInfoResult(outputs) {\n    const testcaseCount = outputs.length;\n    let testcasePassCount = 0;\n    let score = 0;\n    let totalScore = 0;\n\n    outputs.forEach((element, index) => {\n      totalScore += element.totalScore || 0;\n      if (element.output === element.expectedOutput) {\n        element.result = true;\n        testcasePassCount++;\n        score += element.score || 0;\n      } else {\n        element.message = \"wrong\";\n        element.result = false;\n      }\n\n      if (element.hidden) {\n        element.expectedOutput = \"\";\n        element.message = \"\";\n      }\n    });\n\n    return { testcaseCount, testcasePassCount, score, totalScore };\n  }\n\n  async getOutPut(userSolvePath, testcaseType) {\n    const outPutPromises = [];\n\n    outPutPromises.push(getOutput(userSolvePath, \"show\"));\n    if (testcaseType === \"all\") {\n      outPutPromises.push(getOutput(userSolvePath, \"hide\"));\n    }\n\n    const result = await Promise.all(outPutPromises);\n    return result.flat(1);\n  }\n\n  workerTransform(outputs: any[], challengePath): any {\n    return new Promise((resolve, reject) => {\n      this.worker.on(\"message\", (result) => {\n        resolve(result);\n      });\n      this.worker.on(\"error\", (error: any) => {\n        reject(error);\n      });\n      this.worker.on(\"exit\", (exitCode: any) => {\n        console.log(exitCode);\n      });\n      this.worker.postMessage({\n        outputs: outputs,\n        path: challengePath\n      });\n    });\n  }\n}\n","import Docker from \"dockerode\";\nimport Bull from \"bull\";\n\nimport Runner from \"./Runner\";\nimport Builder from \"./Builder\";\n\nimport { RunnerOpts, Result } from \"./types\";\nimport logger from \"./utils/logger\";\nimport { ResponseData } from \"./types\";\n\nexport default class Worker {\n  private runner: Runner;\n\n  private docker: Docker;\n\n  private builder: Builder;\n\n  private queue: Bull.Queue;\n\n  private folderPath?: string;\n\n  constructor(\n    name: string,\n    redis: string,\n    folderPath?: string,\n    transformWorkerPath?: string\n  ) {\n    this.docker = new Docker();\n    this.runner = new Runner(this.docker, transformWorkerPath);\n    this.builder = new Builder(this.docker);\n    this.queue = new Bull(name, redis, {\n      defaultJobOptions: { attempts: 3, timeout: 60000 }\n    });\n    this.folderPath = folderPath || \"/tmp/code-exec\";\n  }\n\n  private async work(codeOptions: RunnerOpts): Promise<ResponseData> {\n    const tag = `${codeOptions.language.toLowerCase()}-runnerx`;\n\n    try {\n      const result = await this.runner.run({\n        tag,\n        ...codeOptions\n      });\n\n      return { data: result, error: result.error || null };\n    } catch (error) {\n      return {\n        data: { id: codeOptions.id },\n        error\n      };\n    }\n  }\n\n  async build(langs?: Array<string>) {\n    await this.builder.build(langs);\n  }\n\n  start() {\n    this.queue.process(async (job, done) => {\n      logger.info(`Received: ${job.data.id}`);\n      const result = await this.work(job.data);\n\n      logger.debug(JSON.stringify(result));\n      done(null, result);\n    });\n  }\n\n  pause() {\n    this.queue.pause();\n  }\n\n  resume() {\n    this.queue.resume();\n  }\n\n  stop() {\n    this.queue.close();\n  }\n}\n","export { default as CodeExecutor, languages } from './CodeExecutor';\n\nexport { default as Worker } from './Worker';\n","export const extension = {\n    python: 'py', bash: 'sh', c: 'c', cplusplus: 'cpp', golfscript: 'gs', ruby: 'rb', javascript: 'js', java: 'java', perl: 'pl', swift: 'swift', rust: 'rs', brainfuck: 'bf', o5AB1E: 'abe',\n};\nexport default function findExtension(language: string) {\n    let fileExtension = '';\n    Object.entries(extension).forEach((entry) => {\n        const [key, value] = entry;\n        if (key.toLowerCase() === language.toLowerCase()) {\n            fileExtension = value;\n        }\n    });\n    return fileExtension;\n}\n","import { PathLike } from 'fs';\nimport { readdir, readFile } from 'fs/promises';\n\nexport async function loopFiles(dir: PathLike): Promise<Array<object>> {\n  try {\n    const files = await readdir(dir);\n    const promisesToKeep: Array<Promise<object>> = [];\n    files.forEach((file) =>\n      promisesToKeep.push(\n        readFile(`${dir}/${file}`, { encoding: 'utf8' }).then(JSON.parse),\n      ),\n    );\n    const result = await Promise.all(promisesToKeep);\n    return result;\n  } catch (e) {\n    console.error(e);\n    return [];\n  }\n}\n\nexport default async function getOutput(Path: string, type: string): Promise<any> {\n  switch (type) {\n    case 'show':\n      return loopFiles(`${Path}/result/show`);\n    case 'hide':\n      return loopFiles(`${Path}/result/hide`);\n    default:\n      return Promise.all([\n        loopFiles(`${Path}/result/show`),\n        loopFiles(`${Path}/result/hide`),\n      ]);\n  }\n}\n","import Pino, { Logger } from 'pino';\nimport { LoggerOptions } from 'pino';\nimport pretty from 'pino-pretty';\nconst stream = pretty({\n  colorize: true\n})\nexport const loggerOptions: LoggerOptions = {\n    level: 'info',\n    formatters: {\n        level(label) {\n            return { level: label };\n        }\n    },\n    \n};\n\nconst logger: Logger = Pino(loggerOptions, stream);\n\nexport default logger","import path from \"path\";\nimport { mkdir } from \"fs/promises\";\n\nimport writeToFile from \"./writeToFile\";\nimport findExtension from \"./findExtension\";\n\nexport default async function saveCode(\n  folderPath: string,\n  code: string,\n  language: string\n) {\n  const folderPromises: Array<Promise<string>> = [];\n  const folders = [\"result\", \"error\", \"output\"];\n  const status = [\"show\", \"hide\"];\n\n  folders.flatMap((d) =>\n    status.forEach((v) =>\n      folderPromises.push(mkdir(`${folderPath}/${d}/${v}`, { recursive: true }))\n    )\n  );\n\n  await Promise.all(folderPromises);\n  const extension = findExtension(language);\n\n  await writeToFile(path.join(folderPath, `solution.${extension}`), code);\n}\n","import fs from 'fs';\n\nexport default async function writeToFile(path: string, data: string): Promise<void> {\n    return new Promise((resolve, reject) => {\n        fs.writeFile(path, data, (err) => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n","export const DEFAULT_OUTPUT_NAME = '__output__';\n","export * from './languages/javascript';\nexport * from './languages/python';\nexport * from './languages/cplusplus';\nexport * from './languages/output';\nexport * from './types';\n","import { cplusplusKeyword } from \"../utils/keywords\";\nimport {\n  pascalCase,\n  snakeCase,\n  IteratorName,\n  snakeCaseWithoutDot\n} from \"../utils/utils\";\nimport { FormatStyle, Input, Type, TypeEnum, Variable } from \"../types\";\n// import * as json from './custom.input.json';\nimport * as json from \"../test/refactor.input.json\";\nimport { DEFAULT_OUTPUT_NAME } from \"../configs/constants\";\n\nfunction varName(name) {\n  const candidate = snakeCaseWithoutDot(name);\n  return cplusplusKeyword.has(candidate) ? candidate + \"_\" : candidate;\n}\n\nfunction structName(name) {\n  /* Transform a class name into a valid one for Python */\n  return pascalCase(name);\n}\n\n/* Create the C++ code to parse an input */\nclass ParserCpp {\n  input: Input;\n  includes: any;\n  main: any[];\n  method: any[];\n  output: any[];\n  indent_lvl: number;\n  indentation: number;\n  iterator: IteratorName;\n\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.includes = new Set();\n    this.main = [];\n    this.method = [];\n    this.output = [];\n    this.iterator = new IteratorName(\n      input_data.inputs.map((variable) => variable.name)\n    );\n    this.indent_lvl = 0;\n    this.indentation = 4;\n  }\n\n  type_str(type: Type) {\n    /* Return the C++ name for a type */\n    if (type.main === TypeEnum.INTEGER) {\n      return \"int\";\n    }\n    if (type.main === TypeEnum.STRING) {\n      this.includes.add(\"string\");\n      return \"string\";\n    }\n    if (type.main === TypeEnum.CHAR) {\n      return \"char\";\n    }\n    if (type.main === TypeEnum.OBJECT) {\n      return structName(type.structName);\n    }\n\n    this.includes.add(\"vector\");\n    return `vector<${this.type_str(type.encapsulated)}>`;\n  }\n\n  /* Read an entire line and store it into the right place(s) */\n  read_line(name: string, type: Type, size: string) {\n    const indent = \" \".repeat(this.indentation * this.indent_lvl);\n    this.includes.add(\"vector\");\n    if ([TypeEnum.INTEGER, TypeEnum.CHAR].includes(type.main)) {\n      this.main.push(indent + `cin >> ${name};`);\n      return;\n    }\n    if (type.main === TypeEnum.STRING) {\n      if (type.can_be_empty) {\n        this.main.push(indent + `if (${size} > 0)`);\n      }\n\n      this.main.push(\n        indent +\n          \" \".repeat(type.can_be_empty ? this.indentation : 0) +\n          `getline(cin >> ws, ${name});`\n      );\n      return;\n    }\n    if (type.main === TypeEnum.ARRAY) {\n      const innerName = this.iterator.new_it();\n      //   this.main.push(\n      //     indent + `for (${this.type_str(type.encapsulated)}& ${innerName} : ${name})`,\n      //   );\n      //   this.main.push(' '.repeat(this.indentation) + indent + `cin >> ${innerName};`);\n      this.main.push(`${this.type_str(type.encapsulated)} ${innerName};`);\n      this.main.push(`${indent}cin >> ws;`);\n      this.main.push(`${indent}getline(cin, buffer);`);\n      this.main.push(`${indent}istringstream ${innerName}_cin(buffer);`);\n      this.main.push(`${indent}while (${innerName}_cin >> ${innerName}){`);\n      this.main.push(\n        `${\" \".repeat(\n          this.indentation * (this.indent_lvl + 1)\n        )}${name}.push_back(${innerName});`\n      );\n      this.main.push(`${indent}}`);\n      // this.iterator.pop_it();\n      return;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      const struct = this.input.getStruct(type.structName);\n      const properties = struct.fields\n        .map((field) => `${name}.${varName(field.name)}`)\n        .join(\" >> \");\n\n      this.main.push(`${indent}cin >> ${properties};`);\n      return;\n    }\n    throw new Error(\"khong co type\");\n  }\n\n  read_lines(name: string, type: Type, size: string, already_resized = false) {\n    if (\n      type.main === TypeEnum.ARRAY &&\n      !already_resized &&\n      !type.encapsulated.canBeInlined()\n    ) {\n      const sizeDeclare = `${varName(name)}_size`;\n      const indent = \" \".repeat(this.indentation * this.indent_lvl);\n\n      this.main.push(`${indent}int ${sizeDeclare};`);\n      this.main.push(`${indent}cin >> ${sizeDeclare};`);\n      this.main.push(`${indent}${snakeCase(name)}.resize(${sizeDeclare});`);\n    }\n\n    if (type.fitsInOneLine(this.input.structs)) {\n      this.read_line(name, type, size);\n      return;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      const struct = this.input.getStruct(type.structName);\n      const structNameTypeSize = struct.fieldsNameTypeSize(\n        `${name}.$$`,\n        varName\n      );\n      structNameTypeSize.forEach(({ name, type, size }) => {\n        this.read_lines(name, type, size);\n      });\n      return;\n    }\n\n    const innerName = this.iterator.new_it();\n\n    this.main.push(\n      `${\" \".repeat(this.indentation * this.indent_lvl)}for (${this.type_str(\n        type.encapsulated\n      )}& ${innerName} : ${name}) {`\n    );\n    this.indent_lvl += 1;\n    this.read_lines(\n      innerName,\n      type.encapsulated,\n      varName(type.encapsulated.size)\n    );\n    this.indent_lvl -= 1;\n    this.main.push(\" \".repeat(this.indentation * this.indent_lvl) + \"}\");\n    this.iterator.pop_it();\n  }\n\n  print_line(name: string, type: Type, indent_lvl: number, style: FormatStyle) {\n    const indent = \" \".repeat(this.indentation * indent_lvl);\n    const endl = style == FormatStyle.NO_ENDLINE ? '\" \"' : \"endl\";\n    if (\n      [TypeEnum.INTEGER, TypeEnum.CHAR, TypeEnum.STRING].includes(type.main)\n    ) {\n      this.output.push(`${indent}cout << ${name} << ${endl};`);\n      return;\n    }\n    if (type.main === TypeEnum.ARRAY) {\n      const innerName = this.iterator.new_it();\n      this.output.push(\n        `${indent}for (size_t ${innerName} = 0; ${innerName} < ${name}.size(); ++${innerName})`\n      );\n      this.output.push(\n        \" \".repeat(this.indentation) +\n          indent +\n          \"cout << \" +\n          `${name}[${innerName}] << (${innerName} < ${name}.size() - 1 ? \"${\n            type.encapsulated.main === TypeEnum.CHAR ? \"\" : \" \"\n          }\" : \"\\\\n\");`\n      );\n      this.output.push(indent + `if (${name}.size() == 0) cout << endl;`);\n      this.iterator.pop_it();\n      return;\n    }\n\n    //Struct\n    const struct = this.input.getStruct(type.structName);\n    const properties = struct.fields\n      .map((field) => `${name}.${varName(field.name)}`)\n      .join(\" << ' ' << \");\n    this.output.push(`${indent}cout << ${properties} << endl;`);\n  }\n\n  print_lines(\n    name: string,\n    type: Type,\n    indent_lvl: number,\n    style: FormatStyle = FormatStyle.DEFAULT\n  ) {\n    if (type.fitsInOneLine(this.input.structs, style)) {\n      this.print_line(name, type, indent_lvl, style);\n      return;\n    }\n\n    // Struct\n    if (type.main === TypeEnum.OBJECT) {\n      this.input.getStruct(type.structName).fields.forEach((field) => {\n        this.print_lines(\n          `${name}.${varName(field.name)}`,\n          field.type,\n          indent_lvl\n        );\n      });\n      return;\n    }\n\n    //Array\n    const inner_name = this.iterator.new_it();\n    this.output.push(\n      `${\" \".repeat(this.indentation)}cout << ${name}.size() << endl;`\n    );\n    this.output.push(\n      `${\" \".repeat(this.indentation * indent_lvl)}for (const ${this.type_str(\n        type.encapsulated\n      )}& ${inner_name} : ${name}) {`\n    );\n    this.print_lines(inner_name, type.encapsulated, indent_lvl + 1);\n    this.output.push(\" \".repeat(this.indentation * indent_lvl) + \"}\");\n    this.iterator.pop_it();\n  }\n\n  /* Read a variable */\n  read_var(variable) {\n    let size = \"\";\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      size = variable.type.size ? `(${varName(variable.type.size)})` : \"\";\n    }\n\n    this.main.push(\n      `${this.type_str(variable.type)} ${varName(variable.name)}${size}; ///< ${\n        variable.comment\n      }`\n    );\n    this.read_lines(\n      varName(variable.name),\n      variable.type,\n      varName(variable.type.size)\n      //   true,\n    );\n  }\n\n  genOutput(output) {\n    this.print_lines(varName(output.name), output.type, 1, output.format_style);\n  }\n\n  placeholder() {\n    const name = this.input.name;\n    const args = [];\n    this.input.inputs.forEach((arg) => {\n      const argName = varName(arg.name);\n      // this.method.push(`/// \\\\param ${arg.name} ${arg.comment}`);\n      if (\n        [TypeEnum.STRING, TypeEnum.OBJECT, TypeEnum.ARRAY].includes(\n          arg.type.main\n        )\n      ) {\n        args.push(`${this.type_str(arg.type)}& ${argName}`);\n        return;\n      }\n      args.push(`${this.type_str(arg.type)} ${argName}`);\n    });\n    this.method.push(\n      `${this.type_str(this.input.output.type)} ${name}(${args.join(\", \")});`\n    );\n  }\n\n  content() {\n    const indent = \" \".repeat(this.indentation);\n    const outputName = this.input.output.name\n      ? varName(this.input.output.name)\n      : DEFAULT_OUTPUT_NAME;\n\n    let output = '#include \"solution.h\"\\n\\n';\n\n    output += \"int main() {\\n\";\n    output += indent + \"string buffer;\\n\";\n\n    this.main.forEach((line) => {\n      output += indent + line + \"\\n\";\n    });\n\n    const argsCall = this.input.inputs\n      .map((variable) => varName(variable.name))\n      .join(\", \");\n\n    output +=\n      indent +\n      `${this.type_str(this.input.output.type)} ${outputName} = ${\n        this.input.name\n      }(${argsCall});\\n`;\n    output += indent + 'cout << \"@result@\" << endl;\\n';\n\n    this.genOutput(this.input.output);\n    this.output.forEach((line) => (output += line + \"\\n\"));\n\n    output += \"}\\n\";\n\n    return output;\n  }\n\n  genLib() {\n    let output = \"#pragma once\\n\";\n    output += \"#include <iostream>\\n\";\n    output += \"#include <string>\\n\";\n    output += \"#include <sstream>\\n\";\n\n    const indent = \" \".repeat(this.indentation);\n\n    this.includes.forEach((line) => (output += `#include <${line}>\\n`));\n\n    output += \"using namespace std;\\n\\n\";\n\n    this.input.structs.forEach((struct) => {\n      // output += `/// ${struct.comment}\\n`;\n      output += `struct ${structName(struct.name)} {\\n`;\n      struct.fields.forEach((field) => {\n        output +=\n          indent + `${this.type_str(field.type)} ${varName(field.name)};\\n`;\n      });\n      output += \"};\\n\\n\";\n    });\n\n    this.method.forEach((line) => (output += line + \"\\n\"));\n    return output;\n  }\n}\n\nexport function genCplusplus(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const parser = new ParserCpp(inputSchema);\n  inputSchema.inputs.forEach((variable) => parser.read_var(variable));\n  parser.placeholder();\n  return { main: parser.content(), lib: parser.genLib() };\n}\n\nexport function genCplusplusModule() {\n  //\n}\n\nexport function genCplusplusSolution(placeholder, functionName) {\n  let result = `#include \"/app/solution.h\"\\n`;\n  result += placeholder;\n  return result;\n}\n","import { jsTemplate } from '../utils/jsTemplate';\nimport { javascriptKeyword } from '../utils/keywords';\nimport { Input, Type, TypeEnum, Variable } from '../types';\nimport { camelCase, IteratorName, WordsName } from '../utils/utils';\n\nconst INDENTATION = '    ';\n\n/**\n * Transform a variable name into a valid one for Javascript\n * @param name\n * @returns\n */\nfunction varName(name) {\n  const candidate = camelCase(name);\n  return javascriptKeyword.has(candidate) ? candidate + '_' : candidate;\n}\n\nfunction typeString(type: Type, inputData: Input) {\n  switch (type.main) {\n    case TypeEnum.INTEGER:\n      return 'number';\n    case TypeEnum.CHAR:\n      return 'string';\n    case TypeEnum.STRING:\n      return 'string';\n    case TypeEnum.ARRAY:\n      return `Array.<${typeString(type.encapsulated, inputData)}>`;\n    case TypeEnum.OBJECT: {\n      const struct = inputData.getStruct(type.structName);\n      const typeStruct = struct.fields.map((field: Variable) => {\n        return `'${field.name}': ${typeString(field.type, inputData)}`;\n      });\n      return `{${typeStruct.join(', ')}}`;\n    }\n    default:\n      throw new Error('khong ton tai type');\n  }\n}\n\nclass ParserJS {\n  inputs: Input;\n  existingName: string[];\n  iterator: IteratorName;\n  words: WordsName;\n\n  /* Create the Javascript code to parse an input */\n  constructor(input_data: Input) {\n    this.inputs = input_data;\n    this.existingName = input_data.inputs\n      .map((element) => varName(element.name))\n      .concat(varName(input_data.name));\n    this.iterator = new IteratorName(this.existingName);\n    this.words = new WordsName(this.existingName);\n  }\n\n  /* Generate the Javascript code to read a line of given type */\n  read_line(decl, name, type, size, indentLvl) {\n    let lines, struct, words;\n    const indent = INDENTATION.repeat(indentLvl);\n    const start = indent + (decl ? 'const ' : '') + name + ' = ';\n\n    if (type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      const sizeName = size;\n\n      // if (!size) {\n      //   sizeName = varName(name) + 'Size';\n      //   lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      // }\n\n      if (type.encapsulated.main === TypeEnum.CHAR) {\n        lines.push(start + 'stdin[line++].split(\"\");');\n      }\n\n      lines.push(start + `stdin[line++].split(\" \", ${sizeName || -1}).map(Number);`);\n      return lines;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      struct = this.inputs.getStruct(type.structName);\n      words = this.words.next_name();\n      lines = [indent + `const ${words} = stdin[line++].split(\" \");`, start + '{'];\n\n      const fields = struct.fields.map((field, index) => {\n        return `${indent}${INDENTATION}\"${varName(field.name)}\": ${\n          field.type.main === TypeEnum.CHAR\n            ? `${words}[${index}]`\n            : `Number(${words}[${index}])`\n        },`;\n      });\n      lines.push(...fields);\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    return [\n      start +\n        {\n          [TypeEnum.INTEGER]: 'Number(stdin[line++]);',\n          [TypeEnum.CHAR]: 'stdin[line++];',\n          [TypeEnum.STRING]: 'stdin[line++];',\n        }[type.main],\n    ];\n  }\n\n  /* Generate the Javascript code to read the lines for a given type */\n  read_lines(decl, variable, size, indentLvl) {\n    if (variable.fitsInOneLine(this.inputs.structs)) {\n      return this.read_line(decl, variable.name, variable.type, size, indentLvl);\n    }\n\n    const indent = INDENTATION.repeat(indentLvl);\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      let sizeName = size;\n      if (!size) {\n        sizeName = varName(variable.name) + 'Size';\n        lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      }\n\n      lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = [];`);\n      const iterator = this.iterator.new_it();\n      const inner_name = this.iterator.new_it();\n      lines.push(\n        indent + `for (let ${iterator} = 0; ${iterator} < ${sizeName}; ${iterator}++) {`,\n      );\n      this.words.push_scope();\n      const readLinesResult = this.read_lines(\n        true,\n        new Variable({ name: inner_name, type: variable.type.encapsulated }),\n        varName(variable.type.encapsulated.size),\n        indentLvl + 1,\n      );\n      lines.push(...readLinesResult);\n      lines.push(indent + INDENTATION + `${variable.name}.push(${inner_name});`);\n      this.words.pop_scope();\n      this.iterator.pop_it();\n      this.iterator.pop_it();\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    const struct = this.inputs.getStruct(variable.type.structName);\n    const lines = [];\n    lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = {};`);\n    const structNameTypeSize = struct.fieldsNameTypeSize(`${variable.name}.$$`, varName);\n    structNameTypeSize.forEach(({ name, type, size }) => {\n      const readLinesResult = this.read_lines(\n        false,\n        new Variable({ name, type }),\n        size,\n        indentLvl,\n      );\n      lines.push(...readLinesResult);\n    });\n    return lines;\n  }\n\n  /* Generate the Javascript code to read all input variables */\n  read_vars() {\n    const lines = [];\n    const allVariable = this.inputs.getAllVars();\n\n    allVariable.forEach((variable$) => {\n      if (variable$.length === 1) {\n        const { name, type, formatStyle }: Variable = variable$[0];\n        const readLinesResult = this.read_lines(\n          true,\n          new Variable({\n            name: varName(name),\n            type: type,\n            formatStyle: formatStyle,\n          }),\n          varName(type.size),\n          1,\n        );\n        lines.push(...readLinesResult);\n      } else {\n        const variable = variable$.map((variable) => varName(variable.name)).join(', ');\n        lines.push(\n          `${INDENTATION}const [${variable}] = stdin[line++].split(\" \").map(Number);`,\n        );\n      }\n    });\n\n    return lines;\n  }\n}\n\nexport function genJavascript(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const args = inputSchema.inputs.map((i) => varName(i.name)).join(', ');\n  const call = `${inputSchema.name}(${args});`;\n\n  const parserJS = new ParserJS(inputSchema);\n  const parser = parserJS.read_vars().join('\\n');\n\n  const result = jsTemplate({\n    call,\n    parser,\n    ind: INDENTATION,\n    outputName: inputSchema.output.name,\n    functionName: inputSchema.name,\n  });\n\n  return result;\n}\n\nexport function genPlaceholderTest(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const args = inputSchema.inputs.map((i) => varName(i.name)).join(', ');\n  const placeholderCall = `function ${inputSchema.name} (${args}) {\\n\\t\\n};`;\n  return placeholderCall;\n}\n\nexport function genJavascriptSolution(placeholder, functionName) {\n  let result = placeholder + '\\n';\n  result += `module.exports = ${functionName}`;\n  return result;\n}\n","import * as json from '../test/custom.input.json';\nimport { javascriptKeyword } from '../utils/keywords';\nimport { DEFAULT_OUTPUT_NAME } from '../configs/constants';\nimport { Input, TypeEnum, Variable } from '../types';\nimport { jsTemplateOutput } from '../utils/jsTemplate';\nimport { camelCase, IteratorName, WordsName } from '../utils/utils';\n\nconst INDENTATION = '    ';\n\n/**\n * Transform a variable name into a valid one for Javascript\n * @param name\n * @returns\n */\nfunction varName(name) {\n  const candidate = camelCase(name);\n\n  if (['process', 'stdin', 'line', 'main'].includes(candidate)) {\n    return candidate + '_';\n  }\n\n  return javascriptKeyword.has(candidate) ? candidate + '_' : candidate;\n}\n\nclass ParserJSOutput {\n  input: Input;\n  existingName: string[];\n  iterator: IteratorName;\n  words: WordsName;\n  /* Create the Javascript code to parse an input */\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.existingName = input_data.inputs\n      .map((element) => varName(element.name))\n      .concat(varName(input_data.name));\n    this.iterator = new IteratorName(this.existingName);\n    this.words = new WordsName(this.existingName);\n  }\n\n  read_line(decl, name, type, size, indentLvl) {\n    /* Generate the Javascript code to read a line of given type */\n    let lines, struct, words;\n    const indent = INDENTATION.repeat(indentLvl);\n    const start = indent + (decl ? 'const ' : '') + name + ' = ';\n\n    if (type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      const sizeName = size;\n\n      if (type.encapsulated.main === TypeEnum.CHAR) {\n        lines.push(start + 'stdin[line++].split(\"\");');\n      }\n\n      lines.push(start + `stdin[line++].split(\" \", ${sizeName}).map(Number);`);\n      return lines;\n    }\n\n    if (type.main === TypeEnum.OBJECT) {\n      struct = this.input.getStruct(type.structName);\n      words = this.words.next_name();\n      lines = [indent + `const ${words} = stdin[line++].split(\" \");`, start + '{'];\n\n      const fields = struct.fields.map((field, index) => {\n        return `${indent}${INDENTATION}\"${varName(field.name)}\": ${\n          field.type.main === TypeEnum.CHAR\n            ? `${words}[${index}]`\n            : `Number(${words}[${index}])`\n        },`;\n      });\n      lines.push(...fields);\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    return [\n      start +\n        {\n          [TypeEnum.INTEGER]: 'Number(stdin[line++]);',\n          [TypeEnum.CHAR]: 'stdin[line++];',\n          [TypeEnum.STRING]: 'stdin[line++];',\n        }[type.main],\n    ];\n  }\n\n  read_lines(decl, variable, size, indentLvl) {\n    /* Generate the Javascript code to read the lines for a given type */\n    if (variable.fitsInOneLine(this.input.structs)) {\n      return this.read_line(decl, variable.name, variable.type, size, indentLvl);\n    }\n\n    const indent = INDENTATION.repeat(indentLvl);\n\n    if (variable.type.main === TypeEnum.ARRAY) {\n      const lines = [];\n      let sizeName = size;\n      if (!size) {\n        sizeName = varName(variable.name) + 'Size';\n        lines.push(`${indent}const ${sizeName} = Number(stdin[line++]);`);\n      }\n\n      lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = [];`);\n      const iterator = this.iterator.new_it();\n      const inner_name = this.iterator.new_it();\n      lines.push(\n        indent + `for (let ${iterator} = 0; ${iterator} < ${sizeName}; ${iterator}++) {`,\n      );\n      this.words.push_scope();\n      const readLinesResult = this.read_lines(\n        true,\n        new Variable({ name: inner_name, type: variable.type.encapsulated }),\n        varName(variable.type.encapsulated.size),\n        indentLvl + 1,\n      );\n      lines.push(...readLinesResult);\n      lines.push(indent + INDENTATION + `${variable.name}.push(${inner_name});`);\n      this.words.pop_scope();\n      this.iterator.pop_it();\n      this.iterator.pop_it();\n      lines.push(`${indent}};`);\n      return lines;\n    }\n\n    const struct = this.input.getStruct(variable.type.structName);\n    const lines = [];\n    lines.push(indent + `${decl ? 'const ' : ''}${variable.name} = {};`);\n    const structNameTypeSize = struct.fieldsNameTypeSize(`${variable.name}.$$`, varName);\n    structNameTypeSize.forEach(({ name, type, size }) => {\n      const readLinesResult = this.read_lines(\n        false,\n        new Variable({ name, type }),\n        size,\n        indentLvl,\n      );\n      lines.push(...readLinesResult);\n    });\n    return lines;\n  }\n\n  read_vars() {\n    /* Generate the Javascript code to read all input variables */\n    const lines = [];\n    const { name, type, formatStyle } = this.input.output;\n\n    const readLinesResult = this.read_lines(\n      true,\n      new Variable({\n        name: varName(name),\n        type: type,\n        formatStyle: formatStyle,\n      }),\n      varName(type.size),\n      1,\n    );\n    lines.push(...readLinesResult);\n\n    return lines;\n  }\n}\n\nexport function genOutput(inputSchema) {\n  const parserJS = new ParserJSOutput(inputSchema);\n  const parser = parserJS.read_vars().join('\\n');\n  const outputName = inputSchema.output.name\n    ? varName(inputSchema.output.name)\n    : DEFAULT_OUTPUT_NAME;\n\n  return jsTemplateOutput({\n    ind: INDENTATION,\n    parser,\n    outputName,\n  });\n}\n\n// genOutput();\n","import { javascriptKeyword, pythonKeyword } from '../utils/keywords';\nimport { Input, Type, TypeEnum, Variable, FormatStyle } from '../types';\nimport { snakeCase, IteratorName, WordsName, pascalCase } from '../utils/utils';\nimport * as json from '../test/custom.input.json';\nconst INDENTATION = '    ';\n\n/* Transform a variable name into a valid one for Python */\nfunction varName(name) {\n  const candidate = snakeCase(name);\n  return pythonKeyword.has(candidate) || candidate === 'dataclass'\n    ? candidate + '_'\n    : candidate;\n}\n\nfunction className(name) {\n  /* Transform a class name into a valid one for Python */\n  const candidate = pascalCase(name);\n  return candidate === 'List' ? candidate + '_' : candidate;\n}\n\nfunction typeString(type: Type) {\n  switch (type.main) {\n    case TypeEnum.INTEGER:\n      return 'int';\n    case TypeEnum.CHAR:\n      return 'str';\n    case TypeEnum.STRING:\n      return 'str';\n    case TypeEnum.OBJECT:\n      return className(type.structName);\n    case TypeEnum.ARRAY:\n      return `List[${typeString(type.encapsulated)}]`;\n    default:\n      throw new Error('khong ton tai type');\n  }\n}\n\nfunction declareClasses(input_data: Input) {\n  /* Return declarations of structs as data classes */\n  const lines = [];\n  input_data.structs.forEach((struct) => {\n    lines.push('@dataclass');\n    lines.push(`class ${className(struct.name)}:`);\n    lines.push(`${INDENTATION}\"\"\"${struct.comment}\"\"\"`);\n    struct.fields.forEach((field) => {\n      lines.push(\n        `${INDENTATION}${varName(field.name)}: ` +\n          `${typeString(field.type)}  # ${field.comment}`,\n      );\n    });\n  });\n  return lines;\n}\n\nfunction declareImport(input_data: Input) {\n  const lines = ['import json'];\n\n  if (input_data.structs) {\n    lines.push('from dataclasses import dataclass');\n  }\n\n  let hasList = false;\n  input_data.structs.forEach((struct) => {\n    struct.fields.forEach((field) => {\n      if (field.type.main === TypeEnum.ARRAY) {\n        hasList = true;\n      }\n    });\n  });\n  input_data.inputs.forEach((variable) => {\n    if (variable.type.main === TypeEnum.ARRAY) {\n      hasList = true;\n    }\n  });\n\n  if (hasList) {\n    lines.push('from typing import List');\n  }\n  if (lines) {\n    lines.push('');\n  }\n  return lines;\n}\n\n/* Wrap a line of function define/call just like black would do */\nfunction wrapLine(begin: string, end: string, args: string[], indent_lvl = 0) {\n  const max_chars = 88;\n  const args_size = args.join(', ').length;\n\n  if (\n    begin.length + end.length + args_size + INDENTATION.repeat(indent_lvl).length <=\n    max_chars\n  ) {\n    return [`${INDENTATION.repeat(indent_lvl)}${begin}${args.join(', ')}${end}`];\n  }\n\n  if (args_size + INDENTATION.repeat(indent_lvl + 1).length <= max_chars) {\n    return [\n      `${INDENTATION.repeat(indent_lvl)}${begin}`,\n      `${INDENTATION.repeat(indent_lvl + 1)}${args.join(', ')}`,\n      `${INDENTATION.repeat(indent_lvl)}${end}`,\n    ];\n  }\n\n  return [`${INDENTATION.repeat(indent_lvl)}${begin}`]\n    .concat(args.map((line) => `${INDENTATION.repeat(indent_lvl + 1)}${line},`))\n    .concat([`${INDENTATION.repeat(indent_lvl)}${end}`]);\n}\n\nfunction readLine(type: Type, input_data: Input) {\n  if (type.main === TypeEnum.ARRAY) {\n    if (type.encapsulated.main === TypeEnum.CHAR) {\n      return 'list(input())';\n    }\n    return 'list(map(int, input().split()))';\n  }\n  if (type.main === TypeEnum.OBJECT) {\n    const struct = input_data.getStruct(type.structName);\n\n    if (struct.fields.every((field) => field.type.main === TypeEnum.INTEGER)) {\n      return `${className(struct.name)}(*map(int, input().split()))`;\n    }\n    if (struct.fields.every((field) => field.type.main === TypeEnum.CHAR)) {\n      return `${className(struct.name)}(*input().split())`;\n    }\n\n    const lamdaStatment = 'lamda x, y: int(y) if x else y';\n    const mappingStdin = struct.fields\n      .map((field) => (field.type.main === TypeEnum.INTEGER ? 1 : 0))\n      .join(', ');\n\n    return `${className(\n      struct.name,\n    )}(*map(${lamdaStatment}, (${mappingStdin}), input().split()))`;\n  }\n\n  return {\n    [TypeEnum.INTEGER]: 'int(input())',\n    [TypeEnum.CHAR]: 'input()[0]',\n    [TypeEnum.STRING]: 'input()',\n  }[type.main];\n}\n\nfunction readLines(\n  type: Type,\n  size: string,\n  input_data: Input,\n  style: FormatStyle = FormatStyle.DEFAULT,\n) {\n  if (type.fitsInOneLine(input_data.structs, style)) {\n    return [readLine(type, input_data)];\n  }\n  if (type.main == TypeEnum.ARRAY) {\n    let lines = readLines(type.encapsulated, varName(type.encapsulated.size), input_data);\n\n    if (lines.length === 1) {\n      const candidate = `[${lines[0]} for _ in range(int(input()))]`;\n      if (candidate.length <= 75) {\n        return [candidate];\n      }\n    }\n\n    lines.append(`for _ in range(int(input()))`);\n    if (lines[0].length < 5) {\n      lines[0] = '[' + lines[0];\n    }\n\n    lines = ['['].concat(lines.map((i) => INDENTATION + i));\n    lines.append(']');\n    return lines;\n  }\n\n  const struct = input_data.getStruct(type.structName);\n  if (struct.is_sized_struct()) {\n    const inner = 'i';\n    const lines = readLines(struct.fields[1].type, inner, input_data);\n    return [`(lambda ${inner}: ${className(struct.name)}(`, INDENTATION + `${inner},`]\n      .concat(lines.map((i) => INDENTATION + i))\n      .concat(['))(int(input()))']);\n  }\n  const fields = [];\n  struct.fields.forEach((field) => {\n    const lines = readLines(field.type, varName(field.type.size), input_data);\n    lines[lines.length - 1] += ',';\n    const fieldLines = lines.map((i) => INDENTATION + i);\n    fields.push(...fieldLines);\n  });\n  return [`${className(struct.name)}(`].concat(fields).concat([')']);\n}\n\nfunction readVars(input_data: Input) {\n  const lines = [];\n  const allVaraible = input_data.getAllVars();\n  allVaraible.forEach((variables) => {\n    if (variables.length === 1) {\n      const variable: Variable = variables[0];\n      const variableLines = readLines(\n        variable.type,\n        varName(variable.type.size),\n        input_data,\n        variable.formatStyle,\n      );\n      variableLines[0] = `${varName(variable.name)} = ${variableLines[0]}`;\n      lines.push(...variableLines);\n    } else {\n      const variables$ = variables.map((variable) => varName(variable.name)).join(', ');\n      lines.push(variables$);\n      lines.push(` = map(int, input().split())`);\n    }\n  });\n\n  return lines;\n}\n\nclass ParserPython {\n  input: Input;\n  main: any[];\n  method: any[];\n\n  constructor(input_data: Input) {\n    this.input = input_data;\n    this.main = [];\n    this.method = [];\n  }\n\n  call(reprint = false) {\n    const functionName = varName(this.input.name);\n    const outputName = varName(this.input.output.name) || '__output__';\n    const argsParam = this.input.inputs.map(\n      (element) => `${varName(element.name)}: ${typeString(element.type)}`,\n    );\n    this.method.push(...wrapLine(`def ${functionName}(`, `) -> None:`, argsParam));\n    //Todo comment\n    // this.method.push(INDENTATION + '\"\"\"')\n    // this.input.inputs.forEach(arg => {\n    //   this.method.push(`${INDENTATION}:param ${varName(arg.name)}: ${arg.comment}`)\n    // })\n    // this.method.push(INDENTATION + '\"\"\"')\n    // if(reprint) {\n\n    // }\n    // else{\n\n    // }\n    this.method.push('\\n');\n    this.method.push(INDENTATION + 'pass');\n    const argsCall = this.input.inputs.map((element) => varName(element.name));\n    this.main.push(\n      ...wrapLine(`${varName(this.input.output.name)} = ${functionName}(`, ')', argsCall),\n    );\n    this.main.push(`print('@@result@@')`);\n    this.main.push(`print(${outputName})`);\n  }\n\n  content() {\n    let output = '';\n    declareImport(this.input).forEach((line) => (output += line + '\\n'));\n    declareClasses(this.input).forEach((line) => (output += line + '\\n'));\n    this.main.push(...readVars(this.input));\n    this.call();\n    this.method.forEach((line) => (output += line + '\\n'));\n    // if (this.method) output += '\\n';\n    output += '\\nif __name__ == \"__main__\":\\n';\n    this.main.forEach((line) => (output += INDENTATION + line + '\\n'));\n    return output;\n  }\n}\n\nexport function genPython(inputSchema: any) {\n  // const inputData = Input.formJson(inputSchema);\n  const result = new ParserPython(inputSchema).content();\n  return result;\n}\n","import { zip } from './utils/utils';\nimport { DEFAULT_OUTPUT_NAME } from './configs/constants';\n\nexport enum TypeEnum {\n  INTEGER = 'INTEGER',\n  CHAR = 'CHAR',\n  STRING = 'STRING',\n  ARRAY = 'ARRAY',\n  OBJECT = 'OBJECT',\n}\n\nexport enum FormatStyle {\n  DEFAULT = 'DEFAULT',\n  NO_ENDLINE = 'NO_ENDLINE', // An integer that has no endline after it (an other follows)\n  FORCE_NEWLINES = 'FORCE_NEWLINES', // A integer list with each int on a new line\n}\n\n/* Represent a struct (like in C) */\nexport class Struct {\n  name: string;\n  comment: string;\n  fields: Variable[];\n\n  constructor(data: Partial<Struct>) {\n    Object.assign(this, data);\n  }\n\n  /* A special kind of struct: first field is the size of the second */\n  is_sized_struct() {\n    return (\n      this.fields.length === 2 &&\n      this.fields[0].type.main === TypeEnum.INTEGER &&\n      [TypeEnum.STRING, TypeEnum.ARRAY].includes(this.fields[1].type.main) &&\n      this.fields[0].name === this.fields[1].type.size\n    );\n  }\n\n  fieldsNameTypeSize(format_spec, varName): { name; type; size }[] {\n    let typeSize = this.fields.map((element) => varName(element.type.size));\n    if (this.is_sized_struct()) {\n      typeSize = ['', format_spec.replace('$$', varName(this.fields[0].name))];\n    }\n    const zipArray = zip(this.fields, typeSize);\n\n    return this.fields.map((field, index) => {\n      return {\n        name: format_spec.replace('$$', varName(zipArray[index][0].name)),\n        type: zipArray[index][0].type,\n        size: zipArray[index][1],\n      };\n    });\n  }\n\n  static formJson({ name, comment, fields }) {\n    if (!name || !fields) {\n      return null;\n    }\n\n    const fieldList = [];\n    fields.forEach((element) => {\n      const variable = Variable.fromJson(element);\n      if (!variable) return null;\n\n      fieldList.push(variable);\n    });\n\n    const customName = name.toUpperCase();\n    return new Struct({ name: customName, comment, fields: fieldList });\n  }\n}\n\n/* Everything there is to know about a variable */\nexport class Variable {\n  name: string;\n  comment: string;\n  type: Type;\n  constraints: any;\n  formatStyle: FormatStyle;\n\n  constructor(data: Partial<Variable> = {}) {\n    Object.assign(this, data);\n  }\n\n  /* Return False if more than one line is needed for this variable */\n  fitsInOneLine(structs: Struct[]) {\n    return this.type.fitsInOneLine(structs, this.formatStyle);\n  }\n\n  static fromJson({ name, comment, type, format }) {\n    if (!name || !type) {\n      return null;\n    }\n\n    const type$ = Type.fromString(type);\n    if (!type$) return null;\n\n    let formatStyle = FormatStyle.DEFAULT;\n    if (format) {\n      if (format === 'no_endlines') {\n        if (type$.main != TypeEnum.INTEGER) {\n          return null;\n        }\n        formatStyle = FormatStyle.NO_ENDLINE;\n      } else if (format === 'force_newlines') {\n        if (\n          type$.main != TypeEnum.ARRAY ||\n          type$.encapsulated === null ||\n          type$.encapsulated.main != TypeEnum.INTEGER\n        ) {\n          return null;\n        }\n        formatStyle = FormatStyle.FORCE_NEWLINES;\n      } else {\n        throw new Error('khong dung format');\n      }\n    }\n\n    return new Variable({ name, comment, type: type$, formatStyle });\n  }\n}\n\n/* Represents the user input, parsed */\nexport class Input {\n  name?: string;\n  structs?: Struct[];\n  inputs?: Variable[];\n  subject?: string;\n  output?: Variable;\n\n  constructor(data: Partial<Input>) {\n    Object.assign(this, data);\n  }\n\n  getStruct(name: string): Struct {\n    /* Get a struct by its name (or throw StopIteration) */\n    return this.structs.find((struct: Struct) => struct.name === name);\n  }\n\n  getAllVars() {\n    const ret = [];\n    let current = [];\n    this.inputs.forEach((element) => {\n      current.push(element);\n      if (element.formatStyle !== FormatStyle.NO_ENDLINE) {\n        ret.push(current);\n        current = [];\n      }\n    });\n    return ret;\n  }\n\n  static formJson({ name, structs, inputs, subject, output }) {\n    const variableLookup = {};\n    const variableDicts = [];\n    const structs$ = [];\n\n    if (structs) {\n      structs.forEach((struct) => {\n        const struct$ = Struct.formJson(struct);\n        if (!struct$) return null;\n        structs$.push(struct$);\n        struct$.fields.forEach((field) => {\n          if (variableLookup[field.name]) {\n            throw new Error('Several struct fields are called' + field.name);\n          }\n          variableLookup[field.name] = field;\n        });\n        variableDicts.concat(struct$.fields);\n      });\n    }\n\n    const variables = [];\n    inputs.forEach((input) => {\n      const variable = Variable.fromJson(input);\n      if (!variable) return null;\n      variables.push(variable);\n      if (variableLookup[variable.name]) {\n        throw new Error('Several variables or struct fields ' + variable.name);\n      }\n      variableLookup[variable.name] = variable;\n      variableDicts.push(input);\n    });\n\n    // Todo check vaild variable name\n\n    if (!output.name) output.name = DEFAULT_OUTPUT_NAME;\n    const output$ = Variable.fromJson(output);\n\n    return new Input({\n      name,\n      structs: structs$,\n      inputs: variables,\n      subject,\n      output: output$,\n    });\n  }\n}\n\n/* Represents the type of a variable */\nexport class Type {\n  main: any;\n  size?: string;\n  can_be_empty?: boolean;\n  encapsulated?: Type;\n  structName?: string;\n\n  constructor(data: Partial<Type>) {\n    Object.assign(this, data);\n  }\n\n  // toString() {\n  //   switch (this.main) {\n  //     case TypeEnum.INTEGER:\n  //       return 'int';\n  //     case TypeEnum.CHAR:\n  //       return 'char';\n  //     case TypeEnum.STRING:\n  //       return `str(${this.size})`;\n  //     case TypeEnum.ARRAY:\n  //       return `Array[${this.encapsulated}](${this.size})`;\n  //     case TypeEnum.OBJECT:\n  //       return `@${this.structName}`;\n  //     default:\n  //       throw new Error('not exist type');\n  //   }\n  // }\n\n  canBeInlined() {\n    /* Can we parse several of this type on a single line */\n    return [TypeEnum.INTEGER, TypeEnum.CHAR].includes(this.main);\n  }\n\n  fitsInOneLine(structs: Array<Struct>, style: FormatStyle = FormatStyle.DEFAULT) {\n    const fitOneLineType = [TypeEnum.INTEGER, TypeEnum.CHAR, TypeEnum.STRING];\n    if (fitOneLineType.includes(this.main)) return true;\n\n    switch (this.main) {\n      case TypeEnum.ARRAY:\n        return this.encapsulated.canBeInlined();\n      case TypeEnum.OBJECT: {\n        const struct = structs.find((struct) => struct.name === this.structName);\n        return struct.fields.every((field: Variable) => {\n          return field.type.canBeInlined();\n        });\n      }\n      default:\n        throw new Error('khong ton tai key');\n    }\n  }\n\n  static fromString(string: string): Type {\n    switch (string) {\n      case TypeEnum.INTEGER:\n        return new Type({ main: TypeEnum.INTEGER });\n      case TypeEnum.CHAR:\n        return new Type({ main: TypeEnum.CHAR });\n      case TypeEnum.STRING:\n        return new Type({ main: TypeEnum.STRING });\n      default: {\n        const parseTypeResult = parseType(string);\n        if (parseTypeResult) {\n          if (parseTypeResult.type === TypeEnum.OBJECT) {\n            return new Type({\n              main: TypeEnum.OBJECT,\n              structName: parseTypeResult.encapsulated.toUpperCase(),\n            });\n          }\n          if (parseTypeResult.type === TypeEnum.ARRAY) {\n            const encapsulated = Type.fromString(parseTypeResult.encapsulated);\n            return new Type({\n              main: TypeEnum.ARRAY,\n              size: parseTypeResult.size,\n              encapsulated,\n            });\n          }\n        }\n        return null;\n      }\n    }\n  }\n}\n\n// (Object|Array)({|[])innerType(]|})(size)\nfunction parseType(string) {\n  const regex =\n    /^(OBJECT|ARRAY)((\\[|{)([A-Za-z][A-Za-z0-9{}[\\]()) ]*)(}|\\]))?(\\(([A-Za-z0-9 ])\\))?$/;\n  const result = string.match(regex);\n  if (result) {\n    return {\n      type: result[1],\n      encapsulated: result[4],\n      size: result[7],\n    };\n  }\n  return null;\n}\n","export function template(strings, ...keys) {\n  return function (...values) {\n    const dict = values[values.length - 1] || {};\n    const result = [strings[0]];\n    keys.forEach(function (key, i) {\n      const value = Number.isInteger(key) ? values[key] : dict[key];\n      result.push(value, strings[i + 1]);\n    });\n    return result.join('');\n  };\n}\n\nexport const jsTemplate = template`\n\"use strict\";\nconst ${'functionName'} =  require('/user-solve/solution');\n\nfunction main(stdin) {\n${'ind'}let line = 0;\n\n${'parser'}\n\n${'ind'}const ${'outputName'} = ${'call'}\n${'ind'}console.log('@result@');\n${'ind'}console.log(JSON.stringify(${'outputName'}));\n\n}\n\nlet stdin = \"\";\nprocess.stdin.on(\"data\", data => stdin += data.toString())\n             .on(\"end\", () => main(stdin.split(\"\\\\n\")));\n`;\n\nexport const jsTemplateOutput = template`\nfunction main(stdin) {\n${'ind'}let line = 0;\n${'parser'}\n${'ind'}return JSON.stringify(${'outputName'})\n}\nmodule.exports = { main };\n`;\n\nexport const jsTemplateBackup = template`\n\"use strict\";\n\n${'placeholder'}\n\nfunction main(stdin) {\n${'ind'}let line = 0;\n\n${'parser'}\n${'ind'}${'placeholderCall'}\n}\n\nlet stdin = \"\";\nprocess.stdin.on(\"data\", data => stdin += data.toString())\n             .on(\"end\", () => main(stdin.split(\"\\\\n\")));\n`;\n","export const javascriptKeyword = new Set([\n  \"process\",\n  \"stdin\",\n  \"line\",\n  \"main\",\n  \"abstract\",\n  \"arguments\",\n  \"await\",\n  \"boolean\",\n  \"break\",\n  \"byte\",\n  \"case\",\n  \"catch\",\n  \"char\",\n  \"class\",\n  \"const\",\n  \"continue\",\n  \"debugger\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"double\",\n  \"else\",\n  \"enum\",\n  \"eval\",\n  \"export\",\n  \"extends\",\n  \"false\",\n  \"final\",\n  \"finally\",\n  \"float\",\n  \"for\",\n  \"function\",\n  \"goto\",\n  \"if\",\n  \"implements\",\n  \"import\",\n  \"in\",\n  \"instanceof\",\n  \"int\",\n  \"interface\",\n  \"let\",\n  \"long\",\n  \"native\",\n  \"new\",\n  \"null\",\n  \"package\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"return\",\n  \"short\",\n  \"static\",\n  \"super\",\n  \"switch\",\n  \"synchronized\",\n  \"this\",\n  \"throw\",\n  \"throws\",\n  \"transient\",\n  \"true\",\n  \"try\",\n  \"typeof\",\n  \"var\",\n  \"void\",\n  \"volatile\",\n  \"while\",\n  \"with\",\n  \"yield\"\n]);\n\nexport const pythonKeyword = new Set([\n  \"False\",\n  \"None\",\n  \"True\",\n  \"and\",\n  \"as\",\n  \"assert\",\n  \"async\",\n  \"await\",\n  \"break\",\n  \"class\",\n  \"continue\",\n  \"def\",\n  \"del\",\n  \"elif\",\n  \"else\",\n  \"except\",\n  \"finally\",\n  \"for\",\n  \"from\",\n  \"global\",\n  \"if\",\n  \"import\",\n  \"in\",\n  \"is\",\n  \"lambda\",\n  \"nonlocal\",\n  \"not\",\n  \"or\",\n  \"pass\",\n  \"raise\",\n  \"return\",\n  \"try\",\n  \"while\",\n  \"with\",\n  \"yield\"\n]);\n\nexport const cplusplusKeyword = new Set([\n  \"alignas\",\n  \"alignof\",\n  \"and\",\n  \"and_eq\",\n  \"asm\",\n  \"atomic_cancel\",\n  \"atomic_commit\",\n  \"atomic_noexcept\",\n  \"auto\",\n  \"bitand\",\n  \"bitor\",\n  \"bool\",\n  \"break\",\n  \"case\",\n  \"catch\",\n  \"char\",\n  \"char16_t\",\n  \"char32_t\",\n  \"class\",\n  \"compl\",\n  \"concept\",\n  \"const\",\n  \"constexpr\",\n  \"const_cast\",\n  \"continue\",\n  \"co_await\",\n  \"co_return\",\n  \"co_yield\",\n  \"decltype\",\n  \"default\",\n  \"delete\",\n  \"do\",\n  \"double\",\n  \"dynamic_cast\",\n  \"else\",\n  \"enum\",\n  \"explicit\",\n  \"export\",\n  \"extern\",\n  \"false\",\n  \"float\",\n  \"for\",\n  \"friend\",\n  \"goto\",\n  \"if\",\n  \"import\",\n  \"inline\",\n  \"int\",\n  \"long\",\n  \"module\",\n  \"mutable\",\n  \"namespace\",\n  \"new\",\n  \"noexcept\",\n  \"not\",\n  \"not_eq\",\n  \"nullptr\",\n  \"operator\",\n  \"or\",\n  \"or_eq\",\n  \"private\",\n  \"protected\",\n  \"public\",\n  \"reflexpr\",\n  \"register\",\n  \"reinterpret_cast\",\n  \"requires\",\n  \"return\",\n  \"short\",\n  \"signed\",\n  \"sizeof\",\n  \"static\",\n  \"static_assert\",\n  \"static_cast\",\n  \"struct\",\n  \"string\",\n  \"switch\",\n  \"synchronized\",\n  \"template\",\n  \"this\",\n  \"thread_local\",\n  \"throw\",\n  \"true\",\n  \"try\",\n  \"typedef\",\n  \"typeid\",\n  \"typename\",\n  \"union\",\n  \"unsigned\",\n  \"using\",\n  \"virtual\",\n  \"void\",\n  \"volatile\",\n  \"wchar_t\",\n  \"while\",\n  \"xor\",\n  \"xor_eq\"\n]);\n","export function canBeOneLine(type) {\n  const canBeOneLineType = ['int', 'char'];\n  return canBeOneLineType.includes(type);\n}\n\nexport function fitOneLine(input, structs) {\n  const fitOneLineType = ['int', 'char', 'string'];\n\n  if (fitOneLineType.includes(input.type)) return true;\n\n  if (input.type === 'list') {\n    return canBeOneLine(input.encapsulated.type);\n  }\n\n  if (input.type === 'struct') {\n    const struct = structs.find((struct) => struct.name == input.name);\n    for (let i = 0; i < struct.fields.length; i++) {\n      if (!canBeOneLine(struct.fields[i].type)) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return 'khong phai type';\n}\n\nexport function camelCase(string = '') {\n  return string.replace(/^([A-Z])|\\W(\\w)/g, function (match, p1, p2, offset) {\n    if (p2) return p2.toUpperCase();\n    return p1.toLowerCase();\n  });\n}\n\n/**\n * 1.2 ==> 1_2\n * @param string\n * @returns\n */\nexport function snakeCaseWithoutDot(string = '') {\n  return string\n    .replace(/\\W+/g, ' ')\n    .split(/ |\\B(?=[A-Z])/)\n    .map((word) => word.toLowerCase())\n    .join('_');\n}\n\n/**\n * 1.2 ==> 1.2\n * @param string\n * @returns\n */\nexport function snakeCase(string = '') {\n  return string\n    .replace(/[^a-zA-Z0-9_.]+/g, ' ')\n    .split(/ |\\B(?=[A-Z])/)\n    .map((word) => word.toLowerCase())\n    .join('_');\n}\n\nexport function specialCaseToCamelCase(string, character) {\n  const pattern = `[${character}][a-z]`;\n  const regex = new RegExp(pattern, 'g');\n  return string.replace(regex, (group) => group.slice(-1).toUpperCase());\n}\nexport function pascalCase(string) {\n  return (' ' + string).toLowerCase().replace(/[^a-zA-Z0-9]+(.)/g, (m, chr) => {\n    return chr.toUpperCase();\n  });\n}\n\nexport function sortCompareString(a, b) {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n  return 0;\n}\n\nexport function intToIterator(value = 104) {\n  if (value < 105) {\n    return String.fromCharCode(105);\n  }\n  return String.fromCharCode(value);\n}\n\nexport const zip = (a, b) => a.map((k, i) => [k, b[i]]);\n/**\n * Map a integer to a iterator name (1 -> i, 18 -> z, 19 -> ii, ...)\n * @param value\n * @returns\n */\nfunction intToIteratorName(value = 1) {\n  const charCode = String.fromCharCode(((value - 1) % 18) + 105);\n  return charCode.repeat((value - 1) / 18 + 1);\n}\n\n/**\n * Give valid iterator names, like i, j, k, preventing scope conflicts\n */\nexport class IteratorName {\n  existingNames: Array<string>;\n  private current: number;\n  constructor(existingName: Array<string>) {\n    this.existingNames = existingName.map((element) => element.trim().toLowerCase());\n    this.current = 0;\n  }\n  new_it() {\n    /* Return the name of the next iterator */\n    this.current += 1;\n    while (this.existingNames.includes(intToIteratorName(this.current))) {\n      this.current += 1;\n    }\n    return intToIteratorName(this.current);\n  }\n\n  /* Signal that the scope of the last iterator ended */\n  pop_it() {\n    this.current -= 1;\n\n    while (\n      this.current > 0 &&\n      this.existingNames.includes(intToIteratorName(this.current))\n    ) {\n      this.current -= 1;\n    }\n  }\n}\n\nexport class WordsName {\n  existingNames: string[];\n  current: number;\n  before_scopes: number[];\n  cs_mode: boolean;\n  above_scopes: any[];\n  other_scopes: any[];\n  /* Give valid variable names starting with 'words' */\n  constructor(existingNames, cs_mode = false) {\n    this.existingNames = existingNames.map((element: string) =>\n      element.trim().split(' ').join(''),\n    );\n\n    this.current = -1;\n    this.before_scopes = [-1];\n    this.cs_mode = cs_mode;\n    this.above_scopes = [new Set()];\n    this.other_scopes = [new Set()];\n  }\n\n  next_name() {\n    /* Give the next variable name */\n    let current: number;\n    this.current += 1;\n    current = this.current;\n\n    if (this.cs_mode) {\n      current = 0;\n\n      while (!this._is_possible_value(current)) {\n        current += 1;\n      }\n    }\n\n    const candidate = `words${current !== 0 ? current : ''}`;\n\n    if (this.existingNames.includes(candidate)) {\n      return this.next_name();\n    }\n\n    this.above_scopes.slice(-1)[0].add(current);\n    return candidate;\n  }\n\n  _is_possible_value(value: number) {\n    this.above_scopes.forEach((element) => {\n      if (element.has(value)) {\n        return false;\n      }\n    });\n\n    const lastOtherScope = this.other_scopes[this.other_scopes.length];\n    if (lastOtherScope.has(value) || lastOtherScope.has(this.cs_mode)) {\n      return false;\n    }\n\n    const candidate = `words${value !== 0 ? value : ''}`;\n    return !this.existingNames.includes(candidate);\n  }\n\n  push_scope() {\n    /* Declare a new scope */\n    this.before_scopes.push(this.current);\n    this.above_scopes.push(new Set());\n    this.other_scopes.push(new Set());\n  }\n\n  pop_scope() {\n    /* Declare a scope's end */\n    this.current = this.before_scopes.pop();\n\n    this.other_scopes.slice(-2)[0] = this.other_scopes.pop();\n    this.other_scopes.slice(-1)[0] = this.above_scopes.pop();\n  }\n}\n","export * from \"./lib/runner.constant\";\nexport * from \"./lib/casbin.constant\";\nexport * from \"./lib/message-partern.constant\";\n","export const ADAPTER_MODULE_OPTIONS = 'ADAPTER_MODULE_OPTIONS';\nexport const ADAPTER_ENFORCER = 'ADAPTER_ENFORCER';\nexport const PERMISSIONS_METADATA = '__PERMISSIONS__';\n","export const COMMENT_FIND_MANY_BY_ID = \"comment.find.many.by_id\";\nexport const COMMENT_VOTE = \"comment.vote\";\nexport const COMMENT_UNVOTE = \"comment.unvote\";\nexport const COMMENT_CREATE = \"comment.create\";\nexport const COMMENT_DELETE = \"comment.delete\";\n\n/**\n * ROLE MESSAGE PATTERN\n */\nexport const ROLE_FIND_MANY = \"role.find.many\";\nexport const ROLE_FIND_UNIQUE = \"role.find.unique\";\nexport const ROLE_VOTE = \"role.vote\";\nexport const ROLE_UNVOTE = \"role.unvote\";\nexport const ROLE_CREATE = \"role.create\";\nexport const ROLE_UPDATE = \"role.update\";\nexport const ROLE_DELETE = \"role.delete\";\n\n/**\n * CHALLENGE MESSAGE PATTERN\n */\nexport const CHALLENGE_FIND_MANY = \"challenge.find.many\";\nexport const CHALLENGE_FIND_MANY_PUBLIC = \"challenge.find.many.public\";\nexport const CHALLENGE_FIND_UNIQUE_PUBLIC = \"challenge.find.unique.public\";\nexport const CHALLENGE_FIND_UNIQUE = \"challenge.find.unique\";\nexport const CHALLENGE_CREATE = \"challenge.create\";\nexport const CHALLENGE_UPDATE = \"challenge.update\";\nexport const CHALLENGE_DELETE = \"challenge.delete\";\nexport const CHALLENGE_SUBMIT = \"challenge.submit\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_FIND_MANY = \"submission.find.many\";\nexport const SUBMISSION_FIND_MANY_BY_USER = \"submission.find.many.by_user\";\nexport const SUBMISSION_FIND_UNIQUE = \"submission.find.unique\";\nexport const SUBMISSION_CREATE = \"submission.create\";\nexport const SUBMISSION_UPDATE = \"submission.update\";\nexport const SUBMISSION_DELETE = \"submission.delete\";\nexport const SUBMISSION_SUBMIT = \"submission.submit\";\nexport const SUBMISSION_TEST = \"submission.test\";\n\n/**\n * SUBMISSON MESSAGE PATTERN\n */\nexport const SUBMISSION_STATISTIC_FIND_MANY = \"submission.find.many\";\n\n/**\n * USER MESSAGE PATTERN\n */\nexport const USER_FIND_MANY = \"user.find.many\";\nexport const USER_FIND_UNIQUE_BY_USERNAME = \"user.find.unique.by_username\";\nexport const USER_FIND_UNIQUE = \"user.find.unique\";\nexport const USER_VOTE = \"user.vote\";\nexport const USER_UNVOTE = \"user.unvote\";\nexport const USER_CREATE = \"user.create\";\nexport const USER_UPDATE = \"user.update\";\nexport const USER_DELETE = \"user.delete\";\nexport const USER_SUBMIT = \"user.submit\";\n","export const RUN_TEST = \"run_test\";\nexport const RUN_SUBMIT = \"run_submit\";\nexport const RUN_ALL = \"run_all\";\n\nexport enum RUN_TYPE {\n  TEST = \"run_test\",\n  SUBMIT = \"run_submit\",\n  ALL = \"run_all\"\n}\n","export * from \"./lib/rpc.exception\";\nexport * from \"./lib/rpc-prisma.exception\";\n","import { Catch, RpcExceptionFilter } from \"@nestjs/common\";\nimport { Observable, throwError } from \"rxjs\";\nimport { RpcException } from \"@nestjs/microservices\";\nimport { Prisma } from \"@prisma/client\";\n\n@Catch()\nexport class RpcPrismaExceptionFilter\n  implements RpcExceptionFilter<RpcException>\n{\n  catch(exception): Observable<any> {\n    if (exception instanceof Prisma.PrismaClientKnownRequestError) {\n      if (exception.code === \"P2002\") {\n        exception = new RpcException(\"Resource already exist\");\n      }\n      if (exception.code === \"P2025\") {\n        exception = new RpcException(\"Resource not exist\");\n      }\n    }\n    return throwError(() => exception.message);\n  }\n}\n","import { Catch, RpcExceptionFilter, ArgumentsHost } from '@nestjs/common';\nimport { Observable, throwError } from 'rxjs';\nimport { RpcException } from '@nestjs/microservices';\nimport { context, trace } from '@opentelemetry/api';\nimport { StoreContext } from '@koj/instrumentation';\n\nconst tracer = trace.getTracer('rpc-trace', '2.2.2');\n\n@Catch(RpcException)\nexport class AllRpcExceptionFilter implements RpcExceptionFilter<RpcException> {\n  catch(exception: RpcException, host: ArgumentsHost): Observable<any> {\n    return tracer.startActiveSpan(\n      'rpc-exception',\n      {},\n      StoreContext?.currentContext?.context,\n      (span) => {\n        span.recordException(exception);\n        span.end();\n        return throwError(() => exception.message);\n      },\n    );\n  }\n}\n","import {\n  Context,\n  isSpanContextValid,\n  SpanContext,\n  TextMapGetter,\n  TextMapPropagator,\n  TextMapSetter,\n  trace,\n  TraceFlags,\n} from '@opentelemetry/api';\nimport { isTracingSuppressed, TraceState } from '@opentelemetry/core';\n\nexport const TRACE_PARENT_HEADER = 'traceparent';\nexport const TRACE_STATE_HEADER = 'tracestate';\n\nconst VERSION = '00';\nconst VERSION_PART = '(?!ff)[\\\\da-f]{2}';\nconst TRACE_ID_PART = '(?![0]{32})[\\\\da-f]{32}';\nconst PARENT_ID_PART = '(?![0]{16})[\\\\da-f]{16}';\nconst FLAGS_PART = '[\\\\da-f]{2}';\nconst TRACE_PARENT_REGEX = new RegExp(\n  `^\\\\s?(${VERSION_PART})-(${TRACE_ID_PART})-(${PARENT_ID_PART})-(${FLAGS_PART})(-.*)?\\\\s?$`,\n);\n\n/**\n *  Most of the part is same as W3CTraceContextPropagator\n *  Just leave the original code here for debug purpose\n */\nexport class RpcTraceContextPropagator implements TextMapPropagator {\n  inject(context: Context, carrier: unknown, setter: TextMapSetter): void {\n    // const spanContext = trace.getSpanContext(context);\n    const spanContext =\n      trace.getSpan(context)?.spanContext() || trace.getSpanContext(context);\n    if (!spanContext || isTracingSuppressed(context) || !isSpanContextValid(spanContext))\n      return;\n\n    const traceParent = `${VERSION}-${spanContext.traceId}-${\n      spanContext.spanId\n    }-0${Number(spanContext.traceFlags || TraceFlags.NONE).toString(16)}`;\n\n    setter.set(carrier, TRACE_PARENT_HEADER, traceParent);\n    if (spanContext.traceState) {\n      setter.set(carrier, TRACE_STATE_HEADER, spanContext.traceState.serialize());\n    }\n  }\n\n  extract(context: Context, carrier: unknown, getter: TextMapGetter): Context {\n    const traceParentHeader = getter.get(carrier, TRACE_PARENT_HEADER);\n    if (!traceParentHeader) return context;\n    const traceParent = Array.isArray(traceParentHeader)\n      ? traceParentHeader[0]\n      : traceParentHeader;\n    if (typeof traceParent !== 'string') return context;\n    const spanContext = parseTraceParent(traceParent);\n    if (!spanContext) return context;\n    spanContext.isRemote = true;\n    const traceStateHeader = getter.get(carrier, TRACE_STATE_HEADER);\n    if (traceStateHeader) {\n      // If more than one `tracestate` header is found, we merge them into a\n      // single header.\n      const state = Array.isArray(traceStateHeader)\n        ? traceStateHeader.join(',')\n        : traceStateHeader;\n      spanContext.traceState = new TraceState(\n        typeof state === 'string' ? state : undefined,\n      );\n    }\n    return trace.setSpanContext(context, spanContext);\n    // return context;\n  }\n\n  fields(): string[] {\n    return [TRACE_PARENT_HEADER, TRACE_STATE_HEADER];\n  }\n}\n\nexport function parseTraceParent(traceParent: string): SpanContext | null {\n  const match = TRACE_PARENT_REGEX.exec(traceParent);\n  if (!match) return null;\n\n  // According to the specification the implementation should be compatible\n  // with future versions. If there are more parts, we only reject it if it's using version 00\n  // See https://www.w3.org/TR/trace-context/#versioning-of-traceparent\n  if (match[1] === '00' && match[5]) return null;\n\n  return {\n    traceId: match[2],\n    spanId: match[3],\n    traceFlags: parseInt(match[4], 16),\n  };\n}\n","import { context, Span as ApiSpan, SpanStatusCode, trace } from '@opentelemetry/api';\nimport { StoreContext } from '../trace/store-context';\nimport { copyMetadataFromFunctionToFunction } from '../utils';\n\nconst recordException = (span: ApiSpan, error: any) => {\n  span.recordException(error);\n  span.setStatus({ code: SpanStatusCode.ERROR, message: error.message });\n};\n\nexport function Span(name?: string, attributes: any = {}) {\n  return (target: any, propertyKey: string, propertyDescriptor: PropertyDescriptor) => {\n    const originalFunction = propertyDescriptor.value;\n    const wrappedFunction = function PropertyDescriptor(...args: any[]) {\n      console.log(\n        '🚀 ~ file: span.decorator.ts ~ line 14 ~ wrappedFunction ~ args',\n        args,\n      );\n      const tracer = trace.getTracer('default');\n      //   const currentSpan =\n      //   trace.getSpan(context.active()) ?? tracer.startSpan('default');\n\n      const parentCtx = StoreContext?.currentContext?.context;\n\n      const spanName = name || `${target.constructor.name}.${propertyKey}`;\n\n      return tracer.startActiveSpan(spanName, {}, parentCtx, (span) => {\n        // const span = tracer.startSpan(spanName, undefined, parentCtx);\n        span.setAttributes(attributes);\n        if (originalFunction.constructor.name === 'AsyncFunction') {\n          return originalFunction\n            .apply(this, args)\n            .catch((error) => {\n              recordException(span, error);\n              // Throw error to propagate it further\n              throw error;\n            })\n            .finally(() => {\n              span.end();\n            });\n        }\n\n        try {\n          return originalFunction.apply(this, args);\n        } catch (error) {\n          recordException(span, error);\n          // Throw error to propagate it further\n          throw error;\n        } finally {\n          span.end();\n        }\n      });\n    };\n    // eslint-disable-next-line no-param-reassign\n    propertyDescriptor.value = wrappedFunction;\n\n    copyMetadataFromFunctionToFunction(originalFunction, wrappedFunction);\n  };\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport enum AttributeNames {\n  COMPONENT = 'graphql',\n  SOURCE = 'graphql.source',\n  FIELD_NAME = 'graphql.field.name',\n  FIELD_PATH = 'graphql.field.path',\n  FIELD_TYPE = 'graphql.field.type',\n  OPERATION_TYPE = 'graphql.operation.type',\n  OPERATION_NAME = 'graphql.operation.name',\n  VARIABLES = 'graphql.variables.',\n  ERROR_VALIDATION_NAME = 'graphql.validation.error',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AllowedOperationTypes {\n  QUERY = 'query',\n  MUTATION = 'mutation',\n  SUBSCRIPTION = 'subscription',\n}\n\nexport enum TokenKind {\n  SOF = '<SOF>',\n  EOF = '<EOF>',\n  BANG = '!',\n  DOLLAR = '$',\n  AMP = '&',\n  PAREN_L = '(',\n  PAREN_R = ')',\n  SPREAD = '...',\n  COLON = ':',\n  EQUALS = '=',\n  AT = '@',\n  BRACKET_L = '[',\n  BRACKET_R = ']',\n  BRACE_L = '{',\n  PIPE = '|',\n  BRACE_R = '}',\n  NAME = 'Name',\n  INT = 'Int',\n  FLOAT = 'Float',\n  STRING = 'String',\n  BLOCK_STRING = 'BlockString',\n  COMMENT = 'Comment',\n}\n\nexport enum SpanNames {\n  EXECUTE = 'graphql.execute',\n  PARSE = 'graphql.parse',\n  RESOLVE = 'graphql.resolve',\n  VALIDATE = 'graphql.validate',\n  SCHEMA_VALIDATE = 'graphql.validateSchema',\n  SCHEMA_PARSE = 'graphql.parseSchema',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport const OTEL_PATCHED_SYMBOL = Symbol.for('opentelemetry.patched');\n\nexport const OTEL_GRAPHQL_DATA_SYMBOL = Symbol.for(\n  'opentelemetry.graphql_data'\n);\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport type * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\nimport { DocumentNode } from 'graphql/language/ast';\nimport { GraphQLFieldResolver, GraphQLTypeResolver } from 'graphql/type/definition';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './symbols';\n\nexport const OPERATION_NOT_SUPPORTED = 'Operation$operationName$not' + ' supported';\n\nexport interface GraphQLInstrumentationExecutionResponseHook {\n  (span: api.Span, data: graphqlTypes.ExecutionResult): void;\n}\n\nexport interface GraphQLInstrumentationConfig extends InstrumentationConfig {\n  /**\n   * When set to true it will not remove attributes values from schema source.\n   * By default all values that can be sensitive are removed and replaced\n   * with \"*\"\n   *\n   * @default false\n   */\n  allowValues?: boolean;\n  /**\n   * The maximum depth of fields/resolvers to instrument.\n   * When set to 0 it will not instrument fields and resolvers\n   *\n   * @default undefined\n   */\n  depth?: number;\n  /**\n   * Whether to merge list items into a single element.\n   *\n   * @example `users.*.name` instead of `users.0.name`, `users.1.name`\n   *\n   * @default false\n   */\n  mergeItems?: boolean;\n\n  /**\n   * Hook that allows adding custom span attributes based on the data\n   * returned from \"execute\" GraphQL action.\n   *\n   * @default undefined\n   */\n  responseHook?: GraphQLInstrumentationExecutionResponseHook;\n}\n\n/**\n * Merged and parsed config of default instrumentation config and GraphQL\n */\nexport type GraphQLInstrumentationParsedConfig = Required<GraphQLInstrumentationConfig> &\n  InstrumentationConfig;\n\nexport type executeFunctionWithObj = (\n  args: graphqlTypes.ExecutionArgs,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport type executeArgumentsArray = [\n  graphqlTypes.GraphQLSchema,\n  graphqlTypes.DocumentNode,\n  any,\n  any,\n  Maybe<{ [key: string]: any }>,\n  Maybe<string>,\n  Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n];\n\nexport type executeFunctionWithArgs = (\n  schema: graphqlTypes.GraphQLSchema,\n  document: graphqlTypes.DocumentNode,\n  rootValue?: any,\n  contextValue?: any,\n  variableValues?: Maybe<{ [key: string]: any }>,\n  operationName?: Maybe<string>,\n  fieldResolver?: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n  typeResolver?: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n) => PromiseOrValue<graphqlTypes.ExecutionResult>;\n\nexport interface OtelExecutionArgs {\n  schema: graphqlTypes.GraphQLSchema;\n  document: DocumentNode & ObjectWithGraphQLData;\n  rootValue?: any;\n  contextValue?: any & ObjectWithGraphQLData;\n  variableValues?: Maybe<{ [key: string]: any }>;\n  operationName?: Maybe<string>;\n  fieldResolver?: Maybe<GraphQLFieldResolver<any, any> & OtelPatched>;\n  typeResolver?: Maybe<GraphQLTypeResolver<any, any>>;\n}\n\nexport type executeType = executeFunctionWithObj | executeFunctionWithArgs;\n\nexport type parseType = (\n  source: string | graphqlTypes.Source,\n  options?: graphqlTypes.ParseOptions,\n) => graphqlTypes.DocumentNode;\n\nexport type validateType = (\n  schema: graphqlTypes.GraphQLSchema,\n  documentAST: graphqlTypes.DocumentNode,\n  rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n  typeInfo?: graphqlTypes.TypeInfo,\n  options?: { maxErrors?: number },\n) => ReadonlyArray<graphqlTypes.GraphQLError>;\n\nexport interface GraphQLField {\n  parent: api.Span;\n  span: api.Span;\n  error: Error | null;\n}\n\ninterface OtelGraphQLData {\n  source?: any;\n  span: api.Span;\n  fields: { [key: string]: GraphQLField };\n}\n\nexport interface ObjectWithGraphQLData {\n  [OTEL_GRAPHQL_DATA_SYMBOL]?: OtelGraphQLData;\n}\n\nexport interface OtelPatched {\n  [OTEL_PATCHED_SYMBOL]?: boolean;\n}\n\nexport interface GraphQLPath {\n  prev: GraphQLPath | undefined;\n  key: string | number;\n  /**\n   * optional as it didn't exist yet in ver 14\n   */\n  typename?: string | undefined;\n}\n\n/**\n * Moving this type from ver 15 of graphql as it is nto available in ver. 14s\n * this way it can compile against ver 14.\n */\nexport type Maybe<T> = null | undefined | T;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-this-alias */\n/* eslint-disable prefer-rest-params */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport { context, trace } from '@opentelemetry/api';\nimport {\n  isWrapped,\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  safeExecuteInTheMiddle,\n} from '@opentelemetry/instrumentation';\nimport type * as graphqlTypes from 'graphql';\nimport { SpanNames } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL } from './enums/symbols';\n\nimport {\n  executeFunctionWithObj,\n  executeArgumentsArray,\n  executeType,\n  parseType,\n  validateType,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  OtelExecutionArgs,\n  ObjectWithGraphQLData,\n  OPERATION_NOT_SUPPORTED,\n  Maybe,\n} from './enums/types';\nimport {\n  addInputVariableAttributes,\n  addSpanSource,\n  endSpan,\n  getOperation,\n  wrapFieldResolver,\n  wrapFields,\n} from './utils';\n\nimport { VERSION } from './version';\nimport * as api from '@opentelemetry/api';\nimport type { PromiseOrValue } from 'graphql/jsutils/PromiseOrValue';\n\nconst DEFAULT_CONFIG: GraphQLInstrumentationConfig = {\n  mergeItems: false,\n  depth: -1,\n  allowValues: false,\n};\n\nconst supportedVersions = ['>=14'];\n\nexport class GraphQLInstrumentation extends InstrumentationBase {\n  constructor(config: GraphQLInstrumentationConfig & InstrumentationConfig = {}) {\n    super(\n      '@opentelemetry/instrumentation',\n      VERSION,\n      Object.assign({}, DEFAULT_CONFIG, config),\n    );\n  }\n\n  private _getConfig(): GraphQLInstrumentationParsedConfig {\n    return this._config as GraphQLInstrumentationParsedConfig;\n  }\n\n  override setConfig(config: GraphQLInstrumentationConfig = {}) {\n    this._config = Object.assign({}, DEFAULT_CONFIG, config);\n  }\n\n  protected init() {\n    console.log('init grapqhl instrument');\n    const module = new InstrumentationNodeModuleDefinition<typeof graphqlTypes>(\n      'graphql',\n      supportedVersions,\n    );\n    module.files.push(this._addPatchingExecute());\n    module.files.push(this._addPatchingParser());\n    module.files.push(this._addPatchingValidate());\n\n    return module;\n  }\n\n  private _addPatchingExecute(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    console.log('add patching grapqhl');\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/execution/execute.js',\n      supportedVersions,\n      // cannot make it work with appropriate type as execute function has 2\n      //types and/cannot import function but only types\n      (moduleExports: any) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'execute');\n        }\n        this._wrap(\n          moduleExports,\n          'execute',\n          this._patchExecute(moduleExports.defaultFieldResolver),\n        );\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'execute');\n        }\n      },\n    );\n  }\n\n  private _addPatchingParser(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/language/parser.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'parse');\n        }\n        this._wrap(moduleExports, 'parse', this._patchParse());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'parse');\n        }\n      },\n    );\n  }\n\n  private _addPatchingValidate(): InstrumentationNodeModuleFile<typeof graphqlTypes> {\n    return new InstrumentationNodeModuleFile<typeof graphqlTypes>(\n      'graphql/validation/validate.js',\n      supportedVersions,\n      (moduleExports) => {\n        if (isWrapped(moduleExports.execute)) {\n          this._unwrap(moduleExports, 'validate');\n        }\n        this._wrap(moduleExports, 'validate', this._patchValidate());\n        return moduleExports;\n      },\n      (moduleExports) => {\n        if (moduleExports) {\n          this._unwrap(moduleExports, 'validate');\n        }\n      },\n    );\n  }\n\n  private _patchExecute(\n    defaultFieldResolved: graphqlTypes.GraphQLFieldResolver<any, any>,\n  ): (original: executeType) => executeType {\n    console.log('execute grapqhl');\n    const instrumentation = this;\n    return function execute(original) {\n      return function patchExecute(\n        this: executeType,\n      ): PromiseOrValue<graphqlTypes.ExecutionResult> {\n        let processedArgs: OtelExecutionArgs;\n\n        // case when apollo server is used for example\n        if (arguments.length >= 2) {\n          const args = arguments as unknown as executeArgumentsArray;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args[0],\n            args[1],\n            args[2],\n            args[3],\n            args[4],\n            args[5],\n            args[6] || defaultFieldResolved,\n            args[7],\n          );\n        } else {\n          const args = arguments[0] as graphqlTypes.ExecutionArgs;\n          processedArgs = instrumentation._wrapExecuteArgs(\n            args.schema,\n            args.document,\n            args.rootValue,\n            args.contextValue,\n            args.variableValues,\n            args.operationName,\n            args.fieldResolver || defaultFieldResolved,\n            args.typeResolver,\n          );\n        }\n\n        const operation = getOperation(\n          processedArgs.document,\n          processedArgs.operationName,\n        );\n\n        const httpSpan = trace.getSpan(context.active());\n        if (httpSpan) {\n          const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n          httpSpan.setAttributes({\n            type: 'graphql',\n          });\n          httpSpan.updateName(\n            `gql-${\n              operationDefinition.operation\n            }-${operationDefinition.name.value.toLowerCase()}`,\n          );\n        }\n        const span = instrumentation._createExecuteSpan(operation, processedArgs);\n\n        processedArgs.contextValue[OTEL_GRAPHQL_DATA_SYMBOL] = {\n          source: processedArgs.document\n            ? processedArgs.document ||\n              (processedArgs.document as ObjectWithGraphQLData)[OTEL_GRAPHQL_DATA_SYMBOL]\n            : undefined,\n          span,\n          fields: {},\n        };\n\n        return context.with(context.active(), () => {\n          return safeExecuteInTheMiddle<PromiseOrValue<graphqlTypes.ExecutionResult>>(\n            () => {\n              return (original as executeFunctionWithObj).apply(this, [processedArgs]);\n            },\n            (err, result) => {\n              instrumentation._handleExecutionResult(span, err, result);\n            },\n          );\n        });\n      };\n    };\n  }\n\n  private _handleExecutionResult(\n    span: api.Span,\n    err?: Error,\n    result?: PromiseOrValue<graphqlTypes.ExecutionResult>,\n  ) {\n    const config = this._getConfig();\n    if (result === undefined || err) {\n      endSpan(span, err);\n      return;\n    }\n\n    if (result.constructor.name === 'Promise') {\n      (result as Promise<graphqlTypes.ExecutionResult>).then((resultData) => {\n        if (typeof config.responseHook !== 'function') {\n          endSpan(span);\n          return;\n        }\n        this._executeResponseHook(span, resultData);\n      });\n    } else {\n      if (typeof config.responseHook !== 'function') {\n        endSpan(span);\n        return;\n      }\n      this._executeResponseHook(span, result as graphqlTypes.ExecutionResult);\n    }\n  }\n\n  private _executeResponseHook(span: api.Span, result: graphqlTypes.ExecutionResult) {\n    const config = this._getConfig();\n    safeExecuteInTheMiddle(\n      () => {\n        config.responseHook(span, result);\n      },\n      (err) => {\n        if (err) {\n          api.diag.error('Error running response hook', err);\n        }\n\n        endSpan(span, undefined);\n      },\n      true,\n    );\n  }\n\n  private _patchParse(): (original: parseType) => parseType {\n    const instrumentation = this;\n    return function parse(original) {\n      return function patchParse(\n        this: parseType,\n        source: string | graphqlTypes.Source,\n        options?: graphqlTypes.ParseOptions,\n      ): graphqlTypes.DocumentNode {\n        return instrumentation._parse(this, original, source, options);\n      };\n    };\n  }\n\n  private _patchValidate(): (original: validateType) => validateType {\n    const instrumentation = this;\n    return function validate(original: validateType) {\n      return function patchValidate(\n        this: validateType,\n        schema: graphqlTypes.GraphQLSchema,\n        documentAST: graphqlTypes.DocumentNode,\n        rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n        typeInfo?: graphqlTypes.TypeInfo,\n        options?: { maxErrors?: number },\n      ): ReadonlyArray<graphqlTypes.GraphQLError> {\n        return instrumentation._validate(\n          this,\n          original,\n          schema,\n          documentAST,\n          rules,\n          typeInfo,\n          options,\n        );\n      };\n    };\n  }\n\n  private _parse(\n    obj: parseType,\n    original: parseType,\n    source: string | graphqlTypes.Source,\n    options?: graphqlTypes.ParseOptions,\n  ): graphqlTypes.DocumentNode {\n    const config = this._getConfig();\n    const span = this.tracer.startSpan(SpanNames.PARSE);\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<graphqlTypes.DocumentNode & ObjectWithGraphQLData>(\n        () => {\n          return original.call(obj, source, options);\n        },\n        (err, result) => {\n          if (result) {\n            const operation = getOperation(result);\n            if (!operation) {\n              span.updateName(SpanNames.SCHEMA_PARSE);\n            } else if (result.loc) {\n              addSpanSource(span, result.loc, config.allowValues);\n            }\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _validate(\n    obj: validateType,\n    original: validateType,\n    schema: graphqlTypes.GraphQLSchema,\n    documentAST: graphqlTypes.DocumentNode,\n    rules?: ReadonlyArray<graphqlTypes.ValidationRule>,\n    typeInfo?: graphqlTypes.TypeInfo,\n    options?: { maxErrors?: number },\n  ): ReadonlyArray<graphqlTypes.GraphQLError> {\n    const span = this.tracer.startSpan(SpanNames.VALIDATE, {});\n\n    return context.with(context.active(), () => {\n      return safeExecuteInTheMiddle<ReadonlyArray<graphqlTypes.GraphQLError>>(\n        () => {\n          return original.call(obj, schema, documentAST, rules, typeInfo, options);\n        },\n        (err, errors) => {\n          if (!documentAST.loc) {\n            span.updateName(SpanNames.SCHEMA_VALIDATE);\n          }\n          if (errors && errors.length) {\n            span.recordException({\n              name: AttributeNames.ERROR_VALIDATION_NAME,\n              message: JSON.stringify(errors),\n            });\n          }\n          endSpan(span, err);\n        },\n      );\n    });\n  }\n\n  private _createExecuteSpan(\n    operation: graphqlTypes.DefinitionNode | undefined,\n    processedArgs: graphqlTypes.ExecutionArgs,\n  ): api.Span {\n    const config = this._getConfig();\n\n    const span = this.tracer.startSpan(SpanNames.EXECUTE, {\n      // attributes: {\n      //   component: 'graphql',\n      // },\n    });\n    if (operation) {\n      const operationDefinition = operation as graphqlTypes.OperationDefinitionNode;\n      span.setAttribute(AttributeNames.OPERATION_TYPE, operationDefinition.operation);\n\n      if (operationDefinition.name) {\n        span.setAttribute(AttributeNames.OPERATION_NAME, operationDefinition.name.value);\n      }\n    } else {\n      let operationName = ' ';\n      if (processedArgs.operationName) {\n        operationName = ` \"${processedArgs.operationName}\" `;\n      }\n      operationName = OPERATION_NOT_SUPPORTED.replace('$operationName$', operationName);\n      span.setAttribute(AttributeNames.OPERATION_NAME, operationName);\n    }\n\n    if (processedArgs.document?.loc) {\n      addSpanSource(span, processedArgs.document.loc, config.allowValues);\n    }\n\n    if (processedArgs.variableValues && config.allowValues) {\n      addInputVariableAttributes(span, processedArgs.variableValues);\n    }\n\n    return span;\n  }\n\n  private _wrapExecuteArgs(\n    schema: graphqlTypes.GraphQLSchema,\n    document: graphqlTypes.DocumentNode,\n    rootValue: any,\n    contextValue: any,\n    variableValues: Maybe<{ [key: string]: any }>,\n    operationName: Maybe<string>,\n    fieldResolver: Maybe<graphqlTypes.GraphQLFieldResolver<any, any>>,\n    typeResolver: Maybe<graphqlTypes.GraphQLTypeResolver<any, any>>,\n  ): OtelExecutionArgs {\n    if (!contextValue) {\n      contextValue = {};\n    }\n    if (contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return {\n        schema,\n        document,\n        rootValue,\n        contextValue,\n        variableValues,\n        operationName,\n        fieldResolver,\n        typeResolver,\n      };\n    }\n    fieldResolver = wrapFieldResolver(\n      this.tracer,\n      this._getConfig.bind(this),\n      fieldResolver,\n    );\n\n    if (schema) {\n      wrapFields(schema.getQueryType(), this.tracer, this._getConfig.bind(this));\n      wrapFields(schema.getMutationType(), this.tracer, this._getConfig.bind(this));\n    }\n\n    return {\n      schema,\n      document,\n      rootValue,\n      contextValue,\n      variableValues,\n      operationName,\n      fieldResolver,\n      typeResolver,\n    };\n  }\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport type * as graphqlTypes from 'graphql';\nimport * as api from '@opentelemetry/api';\nimport { AllowedOperationTypes, SpanNames, TokenKind } from './enums/enum';\nimport { AttributeNames } from './enums/attribute-name';\nimport { OTEL_GRAPHQL_DATA_SYMBOL, OTEL_PATCHED_SYMBOL } from './enums/symbols';\nimport {\n  GraphQLField,\n  GraphQLPath,\n  GraphQLInstrumentationConfig,\n  GraphQLInstrumentationParsedConfig,\n  ObjectWithGraphQLData,\n  OtelPatched,\n  Maybe,\n} from './enums/types';\n\nconst OPERATION_VALUES = Object.values(AllowedOperationTypes);\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction addInputVariableAttribute(span: api.Span, key: string, variable: any) {\n  if (Array.isArray(variable)) {\n    variable.forEach((value, idx) => {\n      addInputVariableAttribute(span, `${key}.${idx}`, value);\n    });\n  } else if (variable instanceof Object) {\n    Object.entries(variable).forEach(([nestedKey, value]) => {\n      addInputVariableAttribute(span, `${key}.${nestedKey}`, value);\n    });\n  } else {\n    span.setAttribute(`${AttributeNames.VARIABLES}${String(key)}`, variable);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function addInputVariableAttributes(\n  span: api.Span,\n  variableValues: { [key: string]: any },\n) {\n  Object.entries(variableValues).forEach(([key, value]) => {\n    addInputVariableAttribute(span, key, value);\n  });\n}\n\nexport function addSpanSource(\n  span: api.Span,\n  loc?: graphqlTypes.Location,\n  allowValues?: boolean,\n  start?: number,\n  end?: number,\n): void {\n  const source = getSourceFromLocation(loc, allowValues, start, end);\n  span.setAttribute(AttributeNames.SOURCE, source);\n}\n\nfunction createFieldIfNotExists(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n): {\n  field: any;\n  spanAdded: boolean;\n} {\n  let field = getField(contextValue, path);\n\n  let spanAdded = false;\n\n  if (!field) {\n    spanAdded = true;\n    const parent = getParentField(contextValue, path);\n\n    field = {\n      parent,\n      span: createResolverSpan(tracer, getConfig, contextValue, info, path, parent.span),\n      error: null,\n    };\n\n    addField(contextValue, path, field);\n  }\n\n  return { spanAdded, field };\n}\n\nfunction createResolverSpan(\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n  contextValue: any,\n  info: graphqlTypes.GraphQLResolveInfo,\n  path: string[],\n  parentSpan?: api.Span,\n): api.Span {\n  const attributes: api.SpanAttributes = {\n    [AttributeNames.FIELD_NAME]: info.fieldName,\n    [AttributeNames.FIELD_PATH]: path.join('.'),\n    [AttributeNames.FIELD_TYPE]: info.returnType.toString(),\n  };\n\n  const span = tracer.startSpan(\n    SpanNames.RESOLVE,\n    {\n      attributes,\n    },\n    parentSpan ? api.trace.setSpan(api.context.active(), parentSpan) : undefined,\n  );\n\n  const document = contextValue[OTEL_GRAPHQL_DATA_SYMBOL].source;\n  const fieldNode = info.fieldNodes.find((fieldNode) => fieldNode.kind === 'Field');\n\n  if (fieldNode) {\n    addSpanSource(\n      span,\n      document.loc,\n      getConfig().allowValues,\n      fieldNode.loc?.start,\n      fieldNode.loc?.end,\n    );\n  }\n\n  return span;\n}\n\nexport function endSpan(span: api.Span, error?: Error): void {\n  if (error) {\n    span.recordException(error);\n  }\n  span.end();\n}\n\nexport function getOperation(\n  document: graphqlTypes.DocumentNode,\n  operationName?: Maybe<string>,\n): graphqlTypes.DefinitionNode | undefined {\n  if (!document || !Array.isArray(document.definitions)) {\n    return undefined;\n  }\n\n  if (operationName) {\n    return document.definitions\n      .filter(\n        (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n      )\n      .find((definition) => operationName === (definition as any)?.name?.value);\n  } else {\n    return document.definitions.find(\n      (definition) => OPERATION_VALUES.indexOf((definition as any)?.operation) !== -1,\n    );\n  }\n}\n\nfunction addField(contextValue: any, path: string[], field: GraphQLField) {\n  return (contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')] = field);\n}\n\nfunction getField(contextValue: any, path: string[]) {\n  return contextValue[OTEL_GRAPHQL_DATA_SYMBOL].fields[path.join('.')];\n}\n\nfunction getParentField(contextValue: any, path: string[]) {\n  for (let i = path.length - 1; i > 0; i--) {\n    const field = getField(contextValue, path.slice(0, i));\n\n    if (field) {\n      return field;\n    }\n  }\n\n  return {\n    span: contextValue[OTEL_GRAPHQL_DATA_SYMBOL].span,\n  };\n}\n\nfunction pathToArray(mergeItems: boolean, path: GraphQLPath): string[] {\n  const flattened: string[] = [];\n  let curr: GraphQLPath | undefined = path;\n  while (curr) {\n    let key = curr.key;\n\n    if (mergeItems && typeof key === 'number') {\n      key = '*';\n    }\n    flattened.push(String(key));\n    curr = curr.prev;\n  }\n  return flattened.reverse();\n}\n\nfunction repeatBreak(i: number): string {\n  return repeatChar('\\n', i);\n}\n\nfunction repeatSpace(i: number): string {\n  return repeatChar(' ', i);\n}\n\nfunction repeatChar(char: string, to: number): string {\n  let text = '';\n  for (let i = 0; i < to; i++) {\n    text += char;\n  }\n  return text;\n}\n\nconst KindsToBeRemoved: string[] = [\n  TokenKind.FLOAT,\n  TokenKind.STRING,\n  TokenKind.INT,\n  TokenKind.BLOCK_STRING,\n];\n\nexport function getSourceFromLocation(\n  loc?: graphqlTypes.Location,\n  allowValues = false,\n  inputStart?: number,\n  inputEnd?: number,\n): string {\n  let source = '';\n\n  if (loc?.startToken) {\n    const start = typeof inputStart === 'number' ? inputStart : loc.start;\n    const end = typeof inputEnd === 'number' ? inputEnd : loc.end;\n\n    let next: graphqlTypes.Token | null = loc.startToken.next;\n    let previousLine: number | undefined = 1;\n    while (next) {\n      if (next.start < start) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      if (next.end > end) {\n        next = next.next;\n        previousLine = next?.line;\n        continue;\n      }\n      let value = next.value || next.kind;\n      let space = '';\n      if (!allowValues && KindsToBeRemoved.indexOf(next.kind) >= 0) {\n        // value = repeatChar('*', value.length);\n        value = '*';\n      }\n      if (next.kind === TokenKind.STRING) {\n        value = `\"${value}\"`;\n      }\n      if (next.kind === TokenKind.EOF) {\n        value = '';\n      }\n      if (next.line > previousLine!) {\n        source += repeatBreak(next.line - previousLine!);\n        previousLine = next.line;\n        space = repeatSpace(next.column - 1);\n      } else {\n        if (next.line === next.prev?.line) {\n          space = repeatSpace(next.start - (next.prev?.end || 0));\n        }\n      }\n      source += space + value;\n      if (next) {\n        next = next.next!;\n      }\n    }\n  }\n\n  return source;\n}\n\nexport function wrapFields(\n  type: Maybe<graphqlTypes.GraphQLObjectType & OtelPatched>,\n  tracer: api.Tracer,\n  getConfig: () => GraphQLInstrumentationParsedConfig,\n): void {\n  if (!type || typeof type.getFields !== 'function' || type[OTEL_PATCHED_SYMBOL]) {\n    return;\n  }\n  const fields = type.getFields();\n\n  type[OTEL_PATCHED_SYMBOL] = true;\n\n  Object.keys(fields).forEach((key) => {\n    const field = fields[key];\n\n    if (!field) {\n      return;\n    }\n\n    if (field.resolve) {\n      field.resolve = wrapFieldResolver(tracer, getConfig, field.resolve);\n    }\n\n    if (field.type) {\n      let unwrappedType: any = field.type;\n\n      while (unwrappedType.ofType) {\n        unwrappedType = unwrappedType.ofType;\n      }\n      wrapFields(unwrappedType, tracer, getConfig);\n    }\n  });\n}\n\nexport function wrapFieldResolver<TSource = any, TContext = any, TArgs = any>(\n  tracer: api.Tracer,\n  getConfig: () => Required<GraphQLInstrumentationConfig>,\n  fieldResolver: Maybe<\n    graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched\n  >,\n): graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs> & OtelPatched {\n  if (\n    (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] ||\n    typeof fieldResolver !== 'function'\n  ) {\n    return fieldResolver!;\n  }\n\n  function wrappedFieldResolver(\n    this: graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>,\n    source: TSource,\n    args: TArgs,\n    contextValue: TContext & ObjectWithGraphQLData,\n    info: graphqlTypes.GraphQLResolveInfo,\n  ) {\n    if (!fieldResolver) {\n      return undefined;\n    }\n    const config = getConfig();\n\n    if (!contextValue[OTEL_GRAPHQL_DATA_SYMBOL]) {\n      return fieldResolver.call(this, source, args, contextValue, info);\n    }\n    const path = pathToArray(config.mergeItems, info && info.path);\n    const depth = path.filter((item: any) => typeof item === 'string').length;\n\n    let field: any;\n    let shouldEndSpan = false;\n    if (config.depth >= 0 && config.depth < depth) {\n      field = getParentField(contextValue, path);\n    } else {\n      const newField = createFieldIfNotExists(\n        tracer,\n        getConfig,\n        contextValue,\n        info,\n        path,\n      );\n      field = newField.field;\n      shouldEndSpan = newField.spanAdded;\n    }\n\n    return api.context.with(api.trace.setSpan(api.context.active(), field.span), () => {\n      return safeExecuteInTheMiddleAsync<\n        | Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>\n        | Promise<Maybe<graphqlTypes.GraphQLFieldResolver<TSource, TContext, TArgs>>>\n      >(\n        () => {\n          return fieldResolver.call(this, source, args, contextValue, info);\n        },\n        (err) => {\n          if (shouldEndSpan) {\n            endSpan(field.span, err);\n          }\n        },\n      );\n    });\n  }\n\n  (wrappedFieldResolver as OtelPatched)[OTEL_PATCHED_SYMBOL] = true;\n\n  return wrappedFieldResolver;\n}\n\n/**\n * Async version of safeExecuteInTheMiddle from instrumentation package\n * can be removed once this will be added to instrumentation package\n * @param execute\n * @param onFinish\n * @param preventThrowingError\n */\nasync function safeExecuteInTheMiddleAsync<T>(\n  execute: () => T,\n  onFinish: (e: Error | undefined, result: T | undefined) => void,\n  preventThrowingError?: boolean,\n): Promise<T> {\n  let error: Error | undefined;\n  let result: T | undefined;\n  try {\n    result = await execute();\n  } catch (e) {\n    error = e;\n  } finally {\n    onFinish(error, result);\n    if (error && !preventThrowingError) {\n      // eslint-disable-next-line no-unsafe-finally\n      throw error;\n    }\n    // eslint-disable-next-line no-unsafe-finally\n    return result as T;\n  }\n}\n","export const VERSION = '2.2.2';\n","export * from './graphql/instrumentation';\nexport * from './nestjs-core/instrumentation';\nexport * from './RpcContextPropagator';\nexport * from './trace/trace-client.proxy';\nexport * from './trace/trace.interceptor';\nexport * from './mongoose/src';\nexport * from './trace/store-context';\nexport * from './decorator/span.decorator';\nexport * from './trace/query-to-path';\n","export * from './mongoose';\nexport * from './types';\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/* eslint-disable @typescript-eslint/no-this-alias */\nimport { context, Span, trace, diag } from '@opentelemetry/api';\nimport { suppressTracing } from '@opentelemetry/core';\nimport type mongoose from 'mongoose';\nimport { MongooseInstrumentationConfig, SerializerPayload } from './types';\nimport { startSpan, handleCallbackResponse, handlePromiseResponse } from './utils';\nimport {\n  InstrumentationBase,\n  InstrumentationModuleDefinition,\n  InstrumentationNodeModuleDefinition,\n} from '@opentelemetry/instrumentation';\nimport { VERSION } from './version';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\nconst contextCaptureFunctions = [\n  'remove',\n  'deleteOne',\n  'deleteMany',\n  'find',\n  'findOne',\n  'estimatedDocumentCount',\n  'countDocuments',\n  'count',\n  'distinct',\n  'where',\n  '$where',\n  'findOneAndUpdate',\n  'findOneAndDelete',\n  'findOneAndReplace',\n  'findOneAndRemove',\n];\n\n// when mongoose functions are called, we store the original call context\n// and then set it as the parent for the spans created by Query/Aggregate exec()\n// calls. this bypass the unlinked spans issue on thenables await operations.\nexport const _STORED_PARENT_SPAN: unique symbol = Symbol('stored-parent-span');\n\nexport class MongooseInstrumentation extends InstrumentationBase<typeof mongoose> {\n  static readonly component = 'mongoose';\n  protected override _config: MongooseInstrumentationConfig;\n  private moduleVersion: string;\n\n  constructor(config: MongooseInstrumentationConfig = {}) {\n    super('opentelemetry-instrumentation-mongoose', VERSION, Object.assign({}, config));\n\n    // According to specification, statement is not set by default on mongodb spans.\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  override setConfig(config: MongooseInstrumentationConfig = {}) {\n    this._config = Object.assign({}, config);\n    if (!config.dbStatementSerializer)\n      this._config.dbStatementSerializer = () => undefined;\n  }\n\n  protected init(): InstrumentationModuleDefinition<typeof mongoose> {\n    const module = new InstrumentationNodeModuleDefinition<typeof mongoose>(\n      MongooseInstrumentation.component,\n      ['*'],\n      this.patch.bind(this),\n      this.unpatch.bind(this),\n    );\n    return module;\n  }\n\n  protected patch(moduleExports: typeof mongoose, moduleVersion: string) {\n    diag.debug('mongoose instrumentation: patching');\n    this.moduleVersion = moduleVersion;\n\n    this._wrap(moduleExports.Model.prototype, 'save', this.patchOnModelMethods('save'));\n    this._wrap(\n      moduleExports.Model.prototype,\n      'remove',\n      this.patchOnModelMethods('remove'),\n    );\n    this._wrap(moduleExports.Query.prototype, 'exec', this.patchQueryExec());\n    this._wrap(moduleExports.Aggregate.prototype, 'exec', this.patchAggregateExec());\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._wrap(\n        moduleExports.Query.prototype,\n        funcName as any,\n        this.patchAndCaptureSpanContext(funcName),\n      );\n    });\n    this._wrap(moduleExports.Model, 'aggregate', this.patchModelAggregate());\n\n    return moduleExports;\n  }\n\n  protected unpatch(moduleExports: typeof mongoose): void {\n    diag.debug('mongoose instrumentation: unpatch mongoose');\n    this._unwrap(moduleExports.Model.prototype, 'save');\n    this._unwrap(moduleExports.Model.prototype, 'remove');\n    this._unwrap(moduleExports.Query.prototype, 'exec');\n    this._unwrap(moduleExports.Aggregate.prototype, 'exec');\n\n    contextCaptureFunctions.forEach((funcName: string) => {\n      this._unwrap(moduleExports.Query.prototype, funcName as any);\n    });\n    this._unwrap(moduleExports.Model, 'aggregate');\n  }\n\n  private patchAggregateExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Aggregate exec prototype');\n    return (originalAggregate: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalAggregate.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            'aggregate',\n            {\n              options: this.options,\n              aggregatePipeline: this._pipeline,\n            },\n          ),\n        };\n\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this._model?.modelName,\n          operation: 'aggregate',\n          attributes,\n          collection: this._model.collection,\n          parentSpan,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalAggregate, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchQueryExec() {\n    const self = this;\n    diag.debug('mongoose instrumentation: patched mongoose Query exec prototype');\n    return (originalExec: Function) => {\n      return function exec(this: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalExec.apply(this, arguments);\n        }\n\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(this.op, {\n            condition: this._conditions,\n            updates: this._update,\n            options: this.options,\n            fields: this._fields,\n          }),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.model.modelName,\n          operation: this.op,\n          attributes,\n          parentSpan,\n          collection: this.mongooseCollection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        return self._handleResponse(span, originalExec, this, arguments, callback);\n      };\n    };\n  }\n\n  private patchOnModelMethods(op: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose Model ${op} prototype`);\n    return (originalOnModelFunction: Function) => {\n      return function method(this: any, options?: any, callback?: Function) {\n        if (\n          self._config.requireParentSpan &&\n          trace.getSpan(context.active()) === undefined\n        ) {\n          return originalOnModelFunction.apply(this, arguments);\n        }\n\n        const serializePayload: SerializerPayload = { document: this };\n        if (options && !(options instanceof Function)) {\n          serializePayload.options = options;\n        }\n        const parentSpan = this[_STORED_PARENT_SPAN];\n        const attributes = {\n          [SemanticAttributes.DB_STATEMENT]: self._config.dbStatementSerializer(\n            op,\n            serializePayload,\n          ),\n        };\n        const span = startSpan({\n          tracer: self.tracer,\n          modelName: this.constructor.modelName,\n          operation: op,\n          attributes,\n          parentSpan,\n          collection: this.constructor.collection,\n        });\n        self._addModuleVersionIfNeeded(span);\n\n        if (options instanceof Function) {\n          callback = options;\n          options = undefined;\n        }\n\n        return self._handleResponse(\n          span,\n          originalOnModelFunction,\n          this,\n          arguments,\n          callback,\n        );\n      };\n    };\n  }\n\n  // we want to capture the otel span on the object which is calling exec.\n  // in the special case of aggregate, we need have no function to path\n  // on the Aggregate object to capture the context on, so we patch\n  // the aggregate of Model, and set the context on the Aggregate object\n  private patchModelAggregate() {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose model aggregate`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        const currentSpan = trace.getSpan(context.active());\n        const aggregate = self._callOriginalFunction(() =>\n          original.apply(this, arguments),\n        );\n        if (aggregate) aggregate[_STORED_PARENT_SPAN] = currentSpan;\n        return aggregate;\n      };\n    };\n  }\n\n  private patchAndCaptureSpanContext(funcName: string) {\n    const self = this;\n    diag.debug(`mongoose instrumentation: patched mongoose query ${funcName} prototype`);\n    return (original: Function) => {\n      return function captureSpanContext(this: any) {\n        this[_STORED_PARENT_SPAN] = trace.getSpan(context.active());\n        return self._callOriginalFunction(() => original.apply(this, arguments));\n      };\n    };\n  }\n\n  private _handleResponse(\n    span: Span,\n    exec: Function,\n    originalThis: any,\n    args: IArguments,\n    callback?: Function,\n  ) {\n    const self = this;\n    if (callback instanceof Function) {\n      return self._callOriginalFunction(() =>\n        handleCallbackResponse(\n          callback,\n          exec,\n          originalThis,\n          span,\n          self._config.responseHook,\n        ),\n      );\n    } else {\n      const response = self._callOriginalFunction(() => exec.apply(originalThis, args));\n      return handlePromiseResponse(response, span, self._config.responseHook);\n    }\n  }\n\n  private _callOriginalFunction<T>(originalFunction: (...args: any[]) => T): T {\n    if (this._config?.suppressInternalInstrumentation) {\n      return context.with(suppressTracing(context.active()), originalFunction);\n    } else {\n      return originalFunction();\n    }\n  }\n\n  private _addModuleVersionIfNeeded(span: Span) {\n    if (this._config.moduleVersionAttributeName) {\n      span.setAttribute(this._config.moduleVersionAttributeName, this.moduleVersion);\n    }\n  }\n}\n","import { Span } from '@opentelemetry/api';\nimport { InstrumentationConfig } from '@opentelemetry/instrumentation';\n\nexport interface SerializerPayload {\n    condition?: any;\n    options?: any;\n    updates?: any;\n    document?: any;\n    aggregatePipeline?: any;\n    fields?: any;\n}\n\nexport type DbStatementSerializer = (operation: string, payload: SerializerPayload) => string;\n\nexport type MongooseResponseCustomAttributesFunction = (span: Span, response: any) => void;\n\nexport interface MongooseInstrumentationConfig extends InstrumentationConfig {\n    /**\n     * Mongoose operation use mongodb under the hood.\n     * If mongodb instrumentation is enabled, a mongoose operation will also create\n     * a mongodb operation describing the communication with mongoDB servers.\n     * Setting the `suppressInternalInstrumentation` config value to `true` will\n     * cause the instrumentation to suppress instrumentation of underlying operations,\n     * effectively causing mongodb spans to be non-recordable.\n     */\n    suppressInternalInstrumentation?: boolean;\n\n    /** Custom serializer function for the db.statement tag */\n    dbStatementSerializer?: DbStatementSerializer;\n\n    /** hook for adding custom attributes using the response payload */\n    responseHook?: MongooseResponseCustomAttributesFunction;\n\n    /**\n     * If passed, a span attribute will be added to all spans with key of the provided \"moduleVersionAttributeName\"\n     * and value of the module version.\n     */\n    moduleVersionAttributeName?: string;\n\n    /** Set to true if you do not want to collect traces that start with mongoose */\n    requireParentSpan?: boolean;\n}\n","import {\n  Tracer,\n  SpanAttributes,\n  SpanStatusCode,\n  context,\n  trace,\n  diag,\n  Span,\n  SpanKind,\n} from '@opentelemetry/api';\nimport type { Collection } from 'mongoose';\nimport { MongooseResponseCustomAttributesFunction } from './types';\nimport { safeExecuteInTheMiddle } from '@opentelemetry/instrumentation';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\n\n// ===== Start Span Utils =====\n\ninterface StartSpanPayload {\n  tracer: Tracer;\n  collection: Collection;\n  modelName: string;\n  operation: string;\n  attributes: SpanAttributes;\n  parentSpan?: Span;\n}\n\nfunction getAttributesFromCollection(collection: Collection): SpanAttributes {\n  return {\n    [SemanticAttributes.DB_MONGODB_COLLECTION]: collection.name,\n    [SemanticAttributes.DB_NAME]: collection.conn.name,\n    [SemanticAttributes.DB_USER]: collection.conn.user,\n    [SemanticAttributes.NET_PEER_NAME]: collection.conn.host,\n    [SemanticAttributes.NET_PEER_PORT]: collection.conn.port,\n    [SemanticAttributes.NET_TRANSPORT]: 'IP.TCP', // Always true in mongodb\n  };\n}\n\nexport function startSpan({\n  tracer,\n  collection,\n  modelName,\n  operation,\n  attributes,\n  parentSpan,\n}: StartSpanPayload): Span {\n  console.log('currentspan', trace.getSpan(context.active()));\n  return tracer.startSpan(\n    `mongoose.${modelName}.${operation}`,\n    {\n      kind: SpanKind.CLIENT,\n      attributes: {\n        ...attributes,\n        ...getAttributesFromCollection(collection),\n        [SemanticAttributes.DB_OPERATION]: operation,\n        [SemanticAttributes.DB_SYSTEM]: 'mongodb',\n      },\n    },\n    parentSpan ? trace.setSpan(context.active(), parentSpan) : undefined,\n  );\n}\n\n// ===== End Span Utils =====\n\nfunction setErrorStatus(span: Span, error: any = {}) {\n  span.recordException(error);\n\n  span.setStatus({\n    code: SpanStatusCode.ERROR,\n    message: `${error.message} ${error.code ? `\\nMongo Error Code: ${error.code}` : ''}`,\n  });\n}\n\nfunction applyResponseHook(\n  span: Span,\n  response: any,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  if (responseHook) {\n    safeExecuteInTheMiddle(\n      () => responseHook(span, response),\n      (e) => {\n        if (e) {\n          diag.error('mongoose instrumentation: responseHook error', e);\n        }\n      },\n      true,\n    );\n  }\n}\n\nexport function handlePromiseResponse(\n  execResponse: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n): any {\n  if (!(execResponse instanceof Promise)) {\n    applyResponseHook(span, execResponse, responseHook);\n    span.end();\n    return execResponse;\n  }\n\n  return execResponse\n    .then((response) => {\n      applyResponseHook(span, response, responseHook);\n      return response;\n    })\n    .catch((err) => {\n      setErrorStatus(span, err);\n      throw err;\n    })\n    .finally(() => span.end());\n}\n\nexport function handleCallbackResponse(\n  callback: Function,\n  exec: Function,\n  originalThis: any,\n  span: Span,\n  responseHook?: MongooseResponseCustomAttributesFunction,\n) {\n  return exec.apply(originalThis, [\n    (err: Error, response: any) => {\n      err ? setErrorStatus(span, err) : applyResponseHook(span, response, responseHook);\n      span.end();\n      return callback!(err, response);\n    },\n  ]);\n}\n","// this is autogenerated file, see scripts/version-update.js\nexport const VERSION = '0.28.0';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum AttributeNames {\n  VERSION = 'nestjs.version',\n  TYPE = 'nestjs.type',\n  MODULE = 'nestjs.module',\n  CONTROLLER = 'nestjs.controller',\n  CALLBACK = 'nestjs.callback',\n  PIPES = 'nestjs.pipes',\n  INTERCEPTORS = 'nestjs.interceptors',\n  GUARDS = 'nestjs.guards',\n}\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport { AttributeNames } from './attribute-name';\nexport { NestType } from './type';\n","/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexport enum NestType {\n  APP_CREATION = 'app_creation',\n  REQUEST_CONTEXT = 'request_context',\n  REQUEST_HANDLER = 'handler',\n}\n","/* eslint-disable prefer-rest-params */\n/* eslint-disable @typescript-eslint/ban-types */\n/*\n * Copyright The OpenTelemetry Authors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      https://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nimport * as api from '@opentelemetry/api';\nimport {\n  InstrumentationBase,\n  InstrumentationConfig,\n  InstrumentationNodeModuleDefinition,\n  InstrumentationNodeModuleFile,\n  isWrapped,\n} from '@opentelemetry/instrumentation';\nimport type * as NestJS from '@nestjs/core';\nimport type { NestFactory } from '@nestjs/core/nest-factory.js';\nimport type { RouterExecutionContext } from '@nestjs/core/router/router-execution-context.js';\nimport type { Controller } from '@nestjs/common/interfaces';\nimport { SemanticAttributes } from '@opentelemetry/semantic-conventions';\nimport { VERSION } from './version';\nimport { AttributeNames, NestType } from './enums';\n\nexport class NestInstrumentation extends InstrumentationBase<typeof NestJS> {\n  static readonly COMPONENT = '@nestjs/core';\n  static readonly COMMON_ATTRIBUTES = {\n    component: NestInstrumentation.COMPONENT,\n  };\n\n  constructor(config: InstrumentationConfig = {}) {\n    super('@opentelemetry/instrumentation-nestjs-core', VERSION);\n  }\n\n  init() {\n    const module = new InstrumentationNodeModuleDefinition<any>(\n      NestInstrumentation.COMPONENT,\n      ['>=4.0.0'],\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Patching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        return moduleExports;\n      },\n      (moduleExports, moduleVersion) => {\n        this._diag.debug(`Unpatching ${NestInstrumentation.COMPONENT}@${moduleVersion}`);\n        if (moduleExports === undefined) return;\n      },\n    );\n\n    module.files.push(\n      this.getNestFactoryFileInstrumentation(['>=4.0.0']),\n      this.getRouterExecutionContextFileInstrumentation(['>=4.0.0']),\n    );\n\n    return module;\n  }\n\n  getNestFactoryFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/nest-factory.js',\n      versions,\n      (NestFactoryStatic: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          NestFactoryStatic.NestFactoryStatic.prototype,\n          'create',\n          createWrapNestFactoryCreate(this.tracer, moduleVersion),\n        );\n        return NestFactoryStatic;\n      },\n      (NestFactoryStatic: any) => {\n        this._unwrap(NestFactoryStatic.NestFactoryStatic.prototype, 'create');\n      },\n    );\n  }\n\n  getRouterExecutionContextFileInstrumentation(versions: string[]) {\n    return new InstrumentationNodeModuleFile<any>(\n      '@nestjs/core/router/router-execution-context.js',\n      versions,\n      (RouterExecutionContext: any, moduleVersion?: string) => {\n        this.ensureWrapped(\n          moduleVersion,\n          RouterExecutionContext.RouterExecutionContext.prototype,\n          'create',\n          createWrapCreateHandler(this.tracer, moduleVersion),\n        );\n        return RouterExecutionContext;\n      },\n      (RouterExecutionContext: any) => {\n        this._unwrap(RouterExecutionContext.RouterExecutionContext.prototype, 'create');\n      },\n    );\n  }\n\n  private ensureWrapped(\n    moduleVersion: string | undefined,\n    obj: any,\n    methodName: string,\n    wrapper: (original: any) => any,\n  ) {\n    this._diag.debug(\n      `Applying ${methodName} patch for ${NestInstrumentation.COMPONENT}@${moduleVersion}`,\n    );\n    if (isWrapped(obj[methodName])) {\n      this._unwrap(obj, methodName);\n    }\n    this._wrap(obj, methodName, wrapper);\n  }\n}\n\nfunction createWrapNestFactoryCreate(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreate(original: typeof NestFactory.create) {\n    return function createWithTrace(\n      this: typeof NestFactory,\n      nestModule: any,\n      /* serverOrOptions */\n    ) {\n      const span = tracer.startSpan('Create Nest App', {\n        attributes: {\n          ...NestInstrumentation.COMMON_ATTRIBUTES,\n          [AttributeNames.TYPE]: NestType.APP_CREATION,\n          [AttributeNames.VERSION]: moduleVersion,\n          [AttributeNames.MODULE]: nestModule.name,\n        },\n      });\n      const spanContext = api.trace.setSpan(api.context.active(), span);\n\n      return api.context.with(spanContext, async () => {\n        try {\n          return await original.apply(this, arguments as any);\n        } catch (e) {\n          throw addError(span, e);\n        } finally {\n          span.end();\n        }\n      });\n    };\n  };\n}\n\nfunction createWrapCreateHandler(tracer: api.Tracer, moduleVersion?: string) {\n  return function wrapCreateHandler(original: RouterExecutionContext['create']) {\n    return function createHandlerWithTrace(\n      this: RouterExecutionContext,\n      instance: Controller,\n      callback: (...args: any[]) => unknown,\n    ) {\n      arguments[1] = createWrapHandler(tracer, moduleVersion, callback);\n      const handler = original.apply(this, arguments as any);\n      const exceptionList = [];\n      return function (this: any, req: any, res: any, next: (...args: any[]) => unknown) {\n        const callbackName = callback.name;\n        const instanceName =\n          instance.constructor && instance.constructor.name\n            ? instance.constructor.name\n            : 'UnnamedInstance';\n        const spanName = callbackName ? `${instanceName}.${callbackName}` : instanceName;\n\n        const span = tracer.startSpan(spanName, {\n          attributes: {\n            ...NestInstrumentation.COMMON_ATTRIBUTES,\n            [AttributeNames.VERSION]: moduleVersion,\n            [AttributeNames.TYPE]: NestType.REQUEST_CONTEXT,\n            [SemanticAttributes.HTTP_METHOD]: req.method,\n            [SemanticAttributes.HTTP_URL]: req.originalUrl || req.url,\n            [SemanticAttributes.HTTP_ROUTE]: req.route?.path || req.routerPath,\n            [AttributeNames.CONTROLLER]: instanceName,\n            [AttributeNames.CALLBACK]: callbackName,\n          },\n        });\n        const spanContext = api.trace.setSpan(api.context.active(), span);\n        return api.context.with(spanContext, async () => {\n          try {\n            return await handler.apply(this, arguments as any);\n          } finally {\n            span.end();\n          }\n        });\n      };\n    };\n  };\n}\n\nfunction createWrapHandler(\n  tracer: api.Tracer,\n  moduleVersion: string | undefined,\n  handler: Function,\n) {\n  const wrappedHandler = function (this: RouterExecutionContext) {\n    const span = tracer.startSpan(handler.name || 'anonymous nest handler', {\n      attributes: {\n        ...NestInstrumentation.COMMON_ATTRIBUTES,\n        [AttributeNames.VERSION]: moduleVersion,\n        [AttributeNames.TYPE]: NestType.REQUEST_HANDLER,\n        [AttributeNames.CALLBACK]: handler.name,\n      },\n    });\n    const spanContext = api.trace.setSpan(api.context.active(), span);\n    return api.context.with(spanContext, async () => {\n      try {\n        return await handler.apply(this, arguments);\n      } finally {\n        span.end();\n      }\n    });\n  };\n\n  if (handler.name) {\n    Object.defineProperty(wrappedHandler, 'name', { value: handler.name });\n  }\n\n  // Get the current metadata and set onto the wrapper to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(handler).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, handler),\n      wrappedHandler,\n    );\n  });\n  return wrappedHandler;\n}\n\nconst addError = (span: api.Span, error: Error) => {\n  span.recordException(error);\n  span.setStatus({ code: api.SpanStatusCode.ERROR, message: error.message });\n  return error;\n};\n","export const VERSION = '2.2.2';\n","import { DocumentNode, DefinitionNode, SelectionNode, GraphQLResolveInfo } from 'graphql';\n\nexport const getPathsFromAST = (ast: DocumentNode) => {\n  return ast.definitions.map(walkDefinitions);\n};\n\nconst walkDefinitions = (node: DefinitionNode) => {\n  if (node.kind === 'OperationDefinition') {\n    return node.selectionSet.selections.reduce(createReduceSelections('/'), []);\n  }\n};\n\nexport const getPaths = (info: GraphQLResolveInfo) => {\n  return info.operation.selectionSet.selections.reduce(createReduceSelections('/'), []);\n};\n\nconst createReduceSelections =\n  (parent: string) =>\n  (acc: string[], curr: SelectionNode): string[] => {\n    if (curr.kind === 'Field') {\n      if (curr.selectionSet && curr.selectionSet.selections) {\n        acc.push(parent + curr.name.value + '/');\n        return curr.selectionSet.selections.reduce(\n          createReduceSelections(parent + curr.name.value + '/'),\n          acc,\n        );\n      } else {\n        acc.push(parent + curr.name.value);\n        return acc;\n      }\n    }\n    return acc;\n  };\n","import { Context } from '@opentelemetry/api';\nimport { AsyncLocalStorage } from 'async_hooks';\n\nexport class StoreContext {\n  static cls = new AsyncLocalStorage<StoreContext>();\n\n  static get currentContext() {\n    return this.cls.getStore();\n  }\n\n  constructor(public readonly context: Context) {}\n}\n","import { lastValueFrom } from 'rxjs';\nimport { Injectable, BadRequestException } from '@nestjs/common';\nimport { ClientProxy } from '@nestjs/microservices';\n\nimport { context, defaultTextMapSetter, propagation, trace } from '@opentelemetry/api';\n\n@Injectable()\nexport class RPCTraceClientProxy {\n  async send(client: ClientProxy, pattern, payload) {\n    const span = trace.getSpan(context.active());\n    if (span?.spanContext()) {\n      propagation.inject(context.active(), payload, defaultTextMapSetter);\n    }\n    try {\n      const res = await lastValueFrom(client.send(pattern, payload));\n      return res;\n    } catch (error) {\n      throw new BadRequestException(error);\n    }\n  }\n}\n","import {\n  Injectable,\n  NestInterceptor,\n  ExecutionContext,\n  CallHandler,\n  Logger,\n} from '@nestjs/common';\nimport { Reflector } from '@nestjs/core';\nimport { Observable, tap } from 'rxjs';\nimport { context, trace, propagation, defaultTextMapGetter } from '@opentelemetry/api';\nimport { NatsContext, RedisContext, TcpContext } from '@nestjs/microservices';\nimport { Request as ExpressReq } from 'express';\nimport { StoreContext } from './store-context';\nimport { GqlExecutionContext } from '@nestjs/graphql';\n\n@Injectable()\nexport class TraceInterceptor implements NestInterceptor {\n  intercept(\n    ctx: ExecutionContext,\n    next: CallHandler<any>,\n  ): Observable<any> | Promise<Observable<any>> {\n    const reflector = new Reflector();\n    const except = reflector.get<boolean>('ExceptTracerInterceptor', ctx.getHandler());\n    if (except) return next.handle();\n\n    const _logger = new Logger(TraceInterceptor.name);\n\n    const tracer = trace.getTracer('default');\n    if (!tracer) return next.handle();\n\n    const getRPCSpan = (ctx: ExecutionContext) => {\n      const rpcContext = ctx\n        .switchToRpc()\n        .getContext<NatsContext | TcpContext | RedisContext>();\n\n      const attributes: any = {};\n      const methodKey = ctx.getHandler().name;\n      let spanName = `rpc::${methodKey}`;\n\n      if (rpcContext instanceof NatsContext) {\n        attributes.type = 'nats';\n        spanName = 'nats::' + (<NatsContext>rpcContext).getSubject();\n      }\n\n      const data = ctx.switchToRpc().getData();\n      const parentCtx = propagation.extract(context.active(), data, defaultTextMapGetter);\n\n      const currentSpan =\n        trace.getSpan(context.active()) ??\n        tracer.startSpan(spanName, undefined, parentCtx);\n\n      currentSpan.setAttributes(attributes);\n\n      _logger.log(`traceid: ${currentSpan.spanContext().traceId}`);\n\n      StoreContext.cls.enterWith(new StoreContext(parentCtx));\n\n      return currentSpan;\n    };\n\n    const getHTTPSpan = (ctx: ExecutionContext) => {\n      const req: ExpressReq = ctx.switchToHttp().getRequest();\n      // const res: ExpressRes = ctx.switchToHttp().getResponse();\n\n      // ** instrumentation-http wll auto inject and extract parentCtx\n      // const parentCtx = Array.isArray(req.headers.spanContext)\n      //   ? req.headers.spanContext[0]\n      //   : req.headers.spanContext;\n      // const traceCtx = parentCtx\n      //   ? trace.setSpanContext(context.active(), JSON.parse(parentCtx))\n      //   : undefined;\n      const host = req.hostname;\n      const path = req.path;\n      _logger.log(`httpSpan: ${host} ${path}`);\n      const span = trace.getSpan(context.active()) ?? tracer.startSpan(host + path);\n      span.updateName(`http-xxx`);\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n\n      return span;\n    };\n\n    const getGraphqlSpan = (ctx: ExecutionContext) => {\n      const gqlContext = GqlExecutionContext.create(ctx);\n      const { operation, fieldName, path } = gqlContext.getInfo();\n\n      const req = gqlContext.getContext().req;\n      const span = trace.getSpan(context.active()) || tracer.startSpan('default');\n\n      span.setAttribute('request.body', JSON.stringify(req.body) || 'UNKNOW');\n      span.setAttribute('request.query', JSON.stringify(req.query) || 'UNKNOW');\n      span.setAttribute('type', 'graphql');\n\n      const typeNames = ['Mutation', 'Query'];\n\n      if (typeNames.includes(path.typename)) {\n        span.updateName(`gql::${operation.operation}:${fieldName}`.toLocaleLowerCase());\n      }\n      if (typeNames.includes(path.prev?.typename)) {\n        span.updateName(\n          `gql::${operation.operation}:${path.prev.key}.${fieldName}`.toLocaleLowerCase(),\n        );\n      }\n\n      _logger.log(`traceid: ${span.spanContext().traceId}`);\n\n      return span;\n    };\n\n    const ctxType = ctx.getType<'http' | 'ws' | 'graphql' | 'rpc'>();\n\n    const span =\n      ctxType === 'rpc'\n        ? getRPCSpan(ctx)\n        : ctxType === 'graphql'\n        ? getGraphqlSpan(ctx)\n        : getHTTPSpan(ctx);\n\n    if (ctxType === 'graphql') return next.handle();\n\n    return next.handle().pipe(\n      tap({\n        next: () => {\n          span.end();\n        },\n        error: () => {\n          span.end();\n        },\n      }),\n    );\n  }\n}\n","export const copyMetadataFromFunctionToFunction = (\n  originalFunction: () => void,\n  newFunction: () => void,\n): void => {\n  // Get the current metadata and set onto the wrapper\n  // to ensure other decorators ( ie: NestJS EventPattern / RolesGuard )\n  // won't be affected by the use of this instrumentation\n  Reflect.getMetadataKeys(originalFunction).forEach((metadataKey) => {\n    Reflect.defineMetadata(\n      metadataKey,\n      Reflect.getMetadata(metadataKey, originalFunction),\n      newFunction,\n    );\n  });\n};\n","module.exports = require(\"@nestjs/common\");","module.exports = require(\"@nestjs/core\");","module.exports = require(\"@nestjs/graphql\");","module.exports = require(\"@nestjs/microservices\");","module.exports = require(\"@opentelemetry/api\");","module.exports = require(\"@opentelemetry/core\");","module.exports = require(\"@opentelemetry/instrumentation\");","module.exports = require(\"@opentelemetry/semantic-conventions\");","module.exports = require(\"@prisma/client\");","module.exports = require(\"bull\");","module.exports = require(\"del\");","module.exports = require(\"dockerode\");","module.exports = require(\"memory-streams\");","module.exports = require(\"nestjs-pino\");","module.exports = require(\"nestjs-prisma\");","module.exports = require(\"pino\");","module.exports = require(\"pino-pretty\");","module.exports = require(\"rxjs\");","module.exports = require(\"slugify\");","module.exports = require(\"tslib\");","module.exports = require(\"uuid\");","module.exports = require(\"async_hooks\");","module.exports = require(\"fs\");","module.exports = require(\"fs/promises\");","module.exports = require(\"path\");","module.exports = require(\"perf_hooks\");","module.exports = require(\"worker_threads\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// import './tracing';\n\nimport { Logger } from '@nestjs/common';\nimport { NestFactory } from '@nestjs/core';\nimport { MicroserviceOptions, Transport } from '@nestjs/microservices';\n\nimport { AppModule } from './challenge/challenge.module';\n\nasync function bootstrap() {\n  const app = await NestFactory.create(AppModule);\n\n  const globalPrefix = 'challenges';\n  app.setGlobalPrefix(globalPrefix);\n\n  app.connectMicroservice<MicroserviceOptions>({\n    transport: Transport.NATS,\n    options: {\n      servers: ['nats://localhost:4222'],\n      queue: 'challenge_queue',\n    },\n  });\n\n  await app.startAllMicroservices();\n\n  const port = 4001;\n  await app.listen(port);\n  Logger.log(`🚀 Application is running on: http://localhost:${port}/${globalPrefix}`);\n}\n\nbootstrap();\n"],"names":[],"sourceRoot":""}